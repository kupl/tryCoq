Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (l:lambda), check_ta1 (l) = check (l)(rank : 0.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), sub_check_ta1 (lambda1) ((Nil)) = if match (ck (lambda1) ((Nil)), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false then true else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:5.)
=================================================
Progress: 3


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), sub_check_ta1 (lambda1) ((Nil)) = if match (ck (lambda1) ((Nil)), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false then true else false

0 goal(s) more...

0 conjecture(s) more...
>>> induction lambda1(rank : 5.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
sub_check_ta1 (V (string1)) ((Nil)) = if match (ck (V (string1)) ((Nil)), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false then true else false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 4


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
sub_check_ta1 (V (string1)) ((Nil)) = if match (ck (V (string1)) ((Nil)), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false then true else false

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = if match (ck (lambda2) ((Nil)), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false then true else false
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (P (string1) (lambda2)) ((Nil)) = if match (ck (P (string1) (lambda2)) ((Nil)), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false then true else false

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 5


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = if match (ck (lambda2) ((Nil)), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false then true else false
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (P (string1) (lambda2)) ((Nil)) = if match (ck (P (string1) (lambda2)) ((Nil)), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false then true else false

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = if match (ck (lambda2) ((Nil)), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false then true else false
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = if match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false then true else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false(rank:5.)
=================================================
Progress: 6


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = if match (ck (lambda2) ((Nil)), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false then true else false
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = if match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false then true else false

1 goal(s) more...

0 conjecture(s) more...
>>> case match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false(rank : 5.)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = if match (ck (lambda2) ((Nil)), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false then true else false
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = true

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false
parent
(string1::(Nil))
lower
Cons(_, Nil())
upper
sub_check_ta1(lambda2, _)
remove upper
Nil()
remove lower
Nil()
remove upper
Cons(string1, Nil())
remove lower
Cons(string1, Nil())
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("asm")) (("uns"::(Nil))) = true
Prop: sub_check_ta1 (C (C (C (V ("llw")) (V ("iby"))) (P ("gyc") (V ("bxf")))) (V ("jfc"))) (("obu"::(Nil))) = true
Prop: sub_check_ta1 (P ("bvv") (V ("qcr"))) (("pps"::(Nil))) = true
Lemma List
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = if match (ck (lambda2) ((Nil)), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false then true else false
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = true

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 7


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = if match (ck (lambda2) ((Nil)), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false then true else false
Inductive1 : lambda1 = P (string1) (lambda2)
Case1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = true

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:5.)
intro string1(rank:5.)
induction lambda1(rank:15.)
=================================================
Progress: 8


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro lambda1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:5.)
=================================================
Progress: 9


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:7.)
=================================================
Progress: 10


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 11


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (C (V ("qhl")) (V ("mad"))) (V ("edj"))) (("eke"::(Nil))) = true
Prop: sub_check_ta1 (V ("frv")) (("nng"::(Nil))) = true
Prop: sub_check_ta1 (V ("nsz")) (("dmd"::(Nil))) = true
Lemma List
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 12


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:7.)
intro string1(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 13


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
match (ck (V (string2)) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 14


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 15


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 16


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
match (ck (V (string2)) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 17


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 18


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case string_eq (string1) (string2)(rank:8.)
=================================================
Progress: 19


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
---------------------------------------
match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string1 : string
Cond1 : match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("bsu")) (V ("foc"))) (("yld"::(Nil))) = true
Prop: sub_check_ta1 (V ("krp")) (("kwc"::(Nil))) = true
Prop: sub_check_ta1 (C (V ("stv")) (V ("ars"))) (("vtu"::(Nil))) = true
=================================================
Progress: 20


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 21


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 22


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
match (ck (P (string2) (lambda2)) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = true

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 23


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
match (ck (P (string2) (lambda2)) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 24


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 25


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = sub_check_ta1 (lambda2) ((string1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite <- IH1 in goal at 0
Prop: sub_check_ta1 (V ("jhu")) (("acp"::(Nil))) = sub_check_ta1 (V ("jhu")) ((Nil))
Prop: sub_check_ta1 (V ("hmf")) (("avo"::("enq"::(Nil)))) = sub_check_ta1 (V ("hmf")) (("enq"::(Nil)))
Prop: sub_check_ta1 (V ("fxt")) (("rbw"::(Nil))) = sub_check_ta1 (V ("fxt")) ((Nil))
previous tactics
simpl in goal
intro Cond1
parent
(string2::(string1::(Nil)))
lower
Cons(_, Cons(string1, Nil()))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string1, Nil())
remove lower
Cons(string1, Nil())
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("lmn")) (("efa"::("rdy"::(Nil)))) = true
Prop: sub_check_ta1 (P ("ghd") (V ("rxz"))) (("puy"::("npo"::(Nil)))) = true
Prop: sub_check_ta1 (V ("tvt")) (("irl"::("xoe"::(Nil)))) = true
Lemma List
forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = sub_check_ta1 (lambda2) ((string1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 26


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = sub_check_ta1 (lambda2) ((string1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)(rank : 0.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

---------------------------------------
forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 27


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
match (ck (V (string2)) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 28


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

---------------------------------------
forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (V (string2)) ((string1::string_list1)) = sub_check_ta1 (V (string2)) (string_list1)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 29


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
match (ck (V (string2)) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 30


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (V (string2)) ((string1::string_list1)) = sub_check_ta1 (V (string2)) (string_list1)

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 31


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string1) (string2)(rank:10.)
=================================================
Progress: 32


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
forall (string_list1:string list), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string1) (string2)(rank:10.)
=================================================
Progress: 33


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 34


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : true = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 35


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
Cond1 : false = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
match (ck (P (string2) (lambda2)) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = true

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 36


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
match (ck (P (string2) (lambda2)) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 37


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:9.)
=================================================
Progress: 38


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
string1 : string
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
Cond1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = sub_check_ta1 (lambda2) ((string1::(Nil)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite <- IH1 in goal at 0
Prop: sub_check_ta1 (V ("jye")) (("ubj"::(Nil))) = sub_check_ta1 (V ("jye")) ((Nil))
Prop: sub_check_ta1 (V ("lim")) (("amy"::(Nil))) = sub_check_ta1 (V ("lim")) ((Nil))
Prop: sub_check_ta1 (V ("iyh")) (("xqx"::("tjv"::("wuu"::(Nil))))) = sub_check_ta1 (V ("iyh")) (("tjv"::("wuu"::(Nil))))
previous tactics
simpl in goal
intro Cond1
parent
(string2::(string1::(Nil)))
lower
Cons(_, Cons(string1, Nil()))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string1, Nil())
remove lower
Cons(string1, Nil())
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("hbe") (V ("zoq"))) (("yss"::("nhr"::(Nil)))) = true
Prop: sub_check_ta1 (C (C (C (V ("gpa")) (P ("qbz") (C (V ("cod")) (V ("upa"))))) (V ("reg"))) (C (V ("vvr")) (P ("nuu") (V ("rhc"))))) (("xby"::("uky"::(Nil)))) = true
Prop: sub_check_ta1 (V ("jbt")) (("ljv"::("fba"::(Nil)))) = true
=================================================
Progress: 39


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
forall (string_list1:string list), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string_eq (string1) (string2) = true
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:10.)
=================================================
Progress: 40


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string_eq (string1) (string2) = true
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 10.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:10.)
induction string_list1(rank:19.)
=================================================
Progress: 41


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string1)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction string_list1(rank:11.)
=================================================
Progress: 42


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string1)

3 goal(s) more...

2 conjecture(s) more...
>>> induction string_list1(rank : 11.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
string_list1 : string list
Base2 : string_list1 = (Nil)
---------------------------------------
true = is_mem_ta1 ((Nil)) (string1)

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 43


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
string_list1 : string list
Base2 : string_list1 = (Nil)
---------------------------------------
true = is_mem_ta1 ((Nil)) (string1)

4 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
string_list1 : string list
Base2 : string_list1 = (Nil)
---------------------------------------
true = false

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 44


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), match (ck (V (string2)) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 45


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), match (ck (V (string2)) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 46


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 47


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case string_eq (string1) (string2)(rank:8.)
=================================================
Progress: 48


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 49


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : false = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 50


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : false = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string1:string), match (ck (P (string2) (lambda2)) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = true

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 51


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string1:string), match (ck (P (string2) (lambda2)) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:6.)
=================================================
Progress: 52


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
---------------------------------------
match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 53


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
---------------------------------------
match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
Cond1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("isk")) (("xty"::("biz"::(Nil)))) = true
Prop: sub_check_ta1 (V ("uvu")) (("phl"::("hqu"::(Nil)))) = true
Prop: sub_check_ta1 (V ("eem")) (("yye"::("eyf"::(Nil)))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
Cond1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 54


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
Cond1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:7.)
intro string1(rank:7.)
intro string2(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 55


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7.)
=================================================
Progress: 56


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro string2(rank:7.)
induction lambda1(rank:17.)
=================================================
Progress: 57


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 58


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string2(rank:7.)
=================================================
Progress: 59


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9.)
=================================================
Progress: 60


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 61


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("bkm")) (("waf"::("hjb"::(Nil)))) = true
Prop: sub_check_ta1 (P ("rpg") (C (C (V ("xsk")) (V ("wtb"))) (P ("djc") (V ("kae"))))) (("pqm"::("cdl"::(Nil)))) = true
Prop: sub_check_ta1 (V ("ezq")) (("ebm"::("wac"::(Nil)))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 62


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:9.)
intro string1(rank:9.)
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 63


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), match (ck (V (string3)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 64


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
match (ck (V (string3)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 65


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 66


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string2(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 67


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 68


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), match (ck (V (string3)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 69


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
match (ck (V (string3)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 70


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9.)
=================================================
Progress: 71


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 72


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 73


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:10.)
=================================================
Progress: 74


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 75


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:10.)
=================================================
Progress: 76


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string1 : string
string2 : string
Cond1 : match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("tyb")) (("zox"::("qvq"::(Nil)))) = true
Prop: sub_check_ta1 (V ("kko")) (("zuf"::("but"::(Nil)))) = true
Prop: sub_check_ta1 (V ("qxk")) (("vpq"::("fhn"::(Nil)))) = true
=================================================
Progress: 77


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 78


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : match (if match (if string_eq (string1) (string3) then true else mem (string3) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string3)(rank:10.)
=================================================
Progress: 79


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 80


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : match (if match (if string_eq (string1) (string3) then true else mem (string3) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string3)(rank:10.)
=================================================
Progress: 81


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : match (if match (if string_eq (string1) (string3) then true else mem (string3) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 82


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 83


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
match (ck (P (string3) (lambda2)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 84


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
match (ck (P (string3) (lambda2)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 85


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:9.)
=================================================
Progress: 86


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = sub_check_ta1 (lambda2) ((string2::(string1::(Nil))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite <- IH1 in goal at 0
Prop: sub_check_ta1 (P ("zoh") (C (V ("rhq")) (V ("abl")))) (("wtg"::(Nil))) = sub_check_ta1 (P ("zoh") (C (V ("rhq")) (V ("abl")))) ((Nil))
Prop: sub_check_ta1 (V ("noq")) (("olo"::(Nil))) = sub_check_ta1 (V ("noq")) ((Nil))
Prop: sub_check_ta1 (V ("arf")) (("phl"::(Nil))) = sub_check_ta1 (V ("arf")) ((Nil))
previous tactics
simpl in goal
intro Cond1
parent
(string3::(string2::(string1::(Nil))))
lower
Cons(_, Cons(string2, Cons(string1, Nil())))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove upper
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove lower
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("nph")) (("vub"::("iyt"::("nhe"::(Nil))))) = true
Prop: sub_check_ta1 (V ("skh")) (("snc"::("eje"::("lfs"::(Nil))))) = true
Prop: sub_check_ta1 (V ("any")) (("hbm"::("cfw"::("pzg"::(Nil))))) = true
Lemma List
forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = sub_check_ta1 (lambda2) ((string2::(string1::(Nil))))

2 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 87


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = sub_check_ta1 (lambda2) ((string2::(string1::(Nil))))

2 goal(s) more...

2 conjecture(s) more...
>>> assert forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)(rank : 0.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

---------------------------------------
forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 88


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : match (if match (if string_eq (string1) (string3) then true else mem (string3) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 89


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 90


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), match (ck (P (string3) (lambda2)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 91


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), match (ck (P (string3) (lambda2)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:8.)
=================================================
Progress: 92


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 93


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("vjx") (V ("fqt"))) (("izt"::("zcb"::("zqu"::(Nil))))) = true
Prop: sub_check_ta1 (V ("rup")) (("pln"::("amh"::("rjv"::(Nil))))) = true
Prop: sub_check_ta1 (V ("yuk")) (("jzi"::("une"::("mza"::(Nil))))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 94


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:9.)
intro string2(rank:9.)
intro string3(rank:9.)
induction lambda1(rank:19.)
intro string1(rank:9.)
=================================================
Progress: 95


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 96


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro string2(rank:9.)
intro string3(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 97


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string3(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 98


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 99


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:9.)
=================================================
Progress: 100


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro string3(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 101


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 102


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:9.)
induction lambda1(rank:19.)
=================================================
Progress: 103


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string3(rank:9.)
=================================================
Progress: 104


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:11.)
=================================================
Progress: 105


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 106


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string3(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 107


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 108


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("nti") (P ("krw") (V ("unm")))) (("lws"::("qqn"::("kax"::(Nil))))) = true
Prop: sub_check_ta1 (V ("mlu")) (("byh"::("wnw"::("rkr"::(Nil))))) = true
Prop: sub_check_ta1 (V ("xzs")) (("sba"::("bjq"::("emj"::(Nil))))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 109


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:11.)
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
intro string1(rank:11.)
=================================================
Progress: 110


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("ohu")) (V ("lyp"))) (("vxd"::("wgn"::("oew"::(Nil))))) = true
Prop: sub_check_ta1 (V ("kfs")) (("erz"::("aeg"::("kjd"::(Nil))))) = true
Prop: sub_check_ta1 (V ("lqf")) (("dxo"::("sch"::("vir"::(Nil))))) = true
=================================================
Progress: 111


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), match (ck (V (string3)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 112


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
match (ck (V (string3)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 113


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

---------------------------------------
forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (V (string2)) ((string1::string_list1)) = sub_check_ta1 (V (string2)) (string_list1)

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 114


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), match (ck (V (string4)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 115


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), match (ck (V (string4)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 116


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
match (ck (V (string4)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 117


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 118


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string2(rank:11.)
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 119


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 120


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 121


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), match (ck (V (string3)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 122


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
match (ck (V (string3)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 123


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (V (string2)) ((string1::string_list1)) = sub_check_ta1 (V (string2)) (string_list1)

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 124


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), match (ck (V (string4)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 125


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), match (ck (V (string4)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 126


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
match (ck (V (string4)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 127


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 128


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string3(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 129


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 130


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 131


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string), match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 132


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:12.)
=================================================
Progress: 133


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
forall (string_list1:string list), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string1) (string2)(rank:12.)
=================================================
Progress: 134


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 135


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 136


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:12.)
=================================================
Progress: 137


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 138


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 139


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 140


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:12.)
=================================================
Progress: 141


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 142


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:12.)
=================================================
Progress: 143


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 144


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 145


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:12.)
=================================================
Progress: 146


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("aum")) (("msn"::("bti"::("wwl"::(Nil))))) = true
Prop: sub_check_ta1 (V ("aop")) (("pqo"::("ozc"::("yhs"::(Nil))))) = true
Prop: sub_check_ta1 (C (V ("arn")) (P ("whj") (V ("wcm")))) (("twd"::("ujr"::("fry"::(Nil))))) = true
=================================================
Progress: 147


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
Cond1 : match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("fvs")) (("kml"::("jnd"::("pts"::(Nil))))) = true
Prop: sub_check_ta1 (V ("pgc")) (("ufj"::("aor"::("vcp"::(Nil))))) = true
Prop: sub_check_ta1 (P ("okn") (P ("nxj") (V ("imf")))) (("dyo"::("mpa"::("lpx"::(Nil))))) = true
=================================================
Progress: 148


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 149


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : match (if match (if string_eq (string1) (string3) then true else mem (string3) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string3)(rank:12.)
=================================================
Progress: 150


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
forall (string_list1:string list), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 12.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string_eq (string1) (string2) = true
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:12.)
=================================================
Progress: 151


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 152


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : match (if match (if string_eq (string2) (string4) then true else mem (string4) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string4)(rank:12.)
=================================================
Progress: 153


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 154


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : match (if match (if string_eq (string1) (string3) then true else mem (string3) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string3)(rank:12.)
=================================================
Progress: 155


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 156


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : match (if match (if string_eq (string2) (string4) then true else mem (string4) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string4)(rank:12.)
=================================================
Progress: 157


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 158


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string2) (string4) then true else mem (string4) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string4)(rank:12.)
=================================================
Progress: 159


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : match (if match (if string_eq (string1) (string3) then true else mem (string3) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 160


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 161


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
Cond1 : false = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
match (ck (P (string3) (lambda2)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 162


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
match (ck (P (string3) (lambda2)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 163


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:11.)
=================================================
Progress: 164


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
Cond1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = sub_check_ta1 (lambda2) ((string2::(string1::(Nil))))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite <- IH1 in goal at 0
Prop: sub_check_ta1 (V ("ool")) (("emp"::(Nil))) = sub_check_ta1 (V ("ool")) ((Nil))
Prop: sub_check_ta1 (V ("kzc")) (("bvg"::(Nil))) = sub_check_ta1 (V ("kzc")) ((Nil))
Prop: sub_check_ta1 (V ("vwe")) (("vme"::(Nil))) = sub_check_ta1 (V ("vwe")) ((Nil))
previous tactics
simpl in goal
intro Cond1
parent
(string3::(string2::(string1::(Nil))))
lower
Cons(_, Cons(string2, Cons(string1, Nil())))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string2, Cons(string1, Nil()))
remove lower
Cons(string2, Cons(string1, Nil()))
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove upper
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove lower
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("jxe") (V ("dfg"))) (("ciz"::("nmy"::("jur"::(Nil))))) = true
Prop: sub_check_ta1 (V ("tte")) (("zbl"::("hls"::("stl"::(Nil))))) = true
Prop: sub_check_ta1 (V ("coc")) (("rxz"::("opi"::("vvi"::(Nil))))) = true
=================================================
Progress: 165


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string_eq (string1) (string2) = true
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 12.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:12.)
induction string_list1(rank:21.)
=================================================
Progress: 166


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : match (if match (if string_eq (string2) (string4) then true else mem (string4) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 167


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : match (if match (if string_eq (string1) (string4) then true else mem (string4) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string4)(rank:12.)
=================================================
Progress: 168


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : match (if match (if string_eq (string1) (string3) then true else mem (string3) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 169


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 170


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
Cond1 : false = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), match (ck (P (string3) (lambda2)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 171


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), match (ck (P (string3) (lambda2)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:10.)
=================================================
Progress: 172


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 173


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string2 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
Cond1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (C (V ("yvb")) (P ("utz") (V ("udu")))) (V ("yow"))) (("kxk"::("qua"::("sbg"::(Nil))))) = true
Prop: sub_check_ta1 (V ("uha")) (("ayj"::("dlc"::("whr"::(Nil))))) = true
Prop: sub_check_ta1 (V ("isq")) (("xsc"::("hnv"::("owd"::(Nil))))) = true
=================================================
Progress: 174


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : match (if match (if string_eq (string2) (string4) then true else mem (string4) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 175


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : match (if match (if string_eq (string1) (string4) then true else mem (string4) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string4)(rank:12.)
=================================================
Progress: 176


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string2) (string4) then true else mem (string4) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 177


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string1) (string4) then true else mem (string4) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string4)(rank:12.)
=================================================
Progress: 178


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string1)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction string_list1(rank:13.)
=================================================
Progress: 179


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : match (if match (if string_eq (string1) (string4) then true else mem (string4) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 180


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 181


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
match (ck (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 182


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
match (ck (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 183


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:11.)
=================================================
Progress: 184


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil)))))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite <- IH1 in goal at 0
Prop: sub_check_ta1 (V ("vyf")) (("okf"::(Nil))) = sub_check_ta1 (V ("vyf")) ((Nil))
Prop: sub_check_ta1 (V ("dpt")) (("vuo"::(Nil))) = sub_check_ta1 (V ("dpt")) ((Nil))
Prop: sub_check_ta1 (P ("hct") (V ("ftx"))) (("isl"::(Nil))) = sub_check_ta1 (P ("hct") (V ("ftx"))) ((Nil))
previous tactics
simpl in goal
intro Cond1
parent
(string4::(string3::(string2::(string1::(Nil)))))
lower
Cons(_, Cons(string3, Cons(string2, Cons(string1, Nil()))))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove upper
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove lower
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove upper
Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))
remove lower
Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("nzb")) (V ("cdf"))) (("yor"::("hta"::("nky"::("znk"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("xzq")) (("qcn"::("mhf"::("tcl"::("vfn"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("azf")) (("ttc"::("bmd"::("atm"::("pxh"::(Nil)))))) = true
Lemma List
forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil)))))

2 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 185


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil)))))

2 goal(s) more...

3 conjecture(s) more...
>>> assert forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)(rank : 0.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

---------------------------------------
forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 186


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : match (if match (if string_eq (string1) (string4) then true else mem (string4) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 187


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 188


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), match (ck (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 189


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), match (ck (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:10.)
=================================================
Progress: 190


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
---------------------------------------
match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 191


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
---------------------------------------
match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
Cond1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string2
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ymf")) (("ovs"::("asp"::("zax"::("mwr"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("uws")) (("gfp"::("cyi"::("odl"::("rpj"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("lek")) (("kkt"::("zto"::("dvv"::("pss"::(Nil)))))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
Cond1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 192


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
Cond1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:11.)
intro string2(rank:11.)
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
intro string1(rank:11.)
=================================================
Progress: 193


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 194


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro string2(rank:11.)
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 195


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 196


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 197


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 198


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 199


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro string3(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 200


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 201


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 202


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:11.)
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 203


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 204


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 205


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 206


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro string4(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 207


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 208


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:11.)
induction lambda1(rank:21.)
=================================================
Progress: 209


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 210


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 211


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 212


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:11.)
=================================================
Progress: 213


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string4(rank:11.)
=================================================
Progress: 214


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:13.)
=================================================
Progress: 215


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 216


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string4(rank:11.)
=================================================
Progress: 217


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:11.)
=================================================
Progress: 218


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:11.)
=================================================
Progress: 219


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 220


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 221


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string4(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 222


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 223


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 224


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("sck")) (("snz"::("nvx"::("lkz"::("rxh"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("rde")) (("llm"::("btn"::("sgh"::("smn"::(Nil)))))) = true
Prop: sub_check_ta1 (C (V ("ztu")) (V ("xdu"))) (("msm"::("bbu"::("hwj"::("rmp"::(Nil)))))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 225


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 6
intro lambda1(rank:13.)
intro string2(rank:13.)
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
intro string1(rank:13.)
=================================================
Progress: 226


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("aeh") (V ("pvo"))) (("orj"::("rae"::("dzb"::("hxf"::(Nil)))))) = true
Prop: sub_check_ta1 (P ("svp") (V ("cof"))) (("arz"::("wgq"::("wll"::("tzd"::(Nil)))))) = true
Prop: sub_check_ta1 (P ("jcg") (V ("ics"))) (("uul"::("oll"::("zjr"::("snv"::(Nil)))))) = true
=================================================
Progress: 227


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
Cond1 : match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("hii")) (("ujr"::("ana"::("wtq"::("yzw"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("zpe")) (("ean"::("gji"::("wfq"::("psi"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("urg")) (("heg"::("jwq"::("ett"::("gmo"::(Nil)))))) = true
=================================================
Progress: 228


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
Cond1 : match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("twi") (V ("vjh"))) (("uql"::("pay"::("kpw"::("epz"::(Nil)))))) = true
Prop: sub_check_ta1 (P ("skg") (P ("dkl") (V ("oap")))) (("fbh"::("dgx"::("qik"::("qvc"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("wgq")) (("zsb"::("krp"::("ndt"::("kza"::(Nil)))))) = true
=================================================
Progress: 229


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
Cond1 : match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("hhc")) (("mhh"::("uzf"::("vuw"::("upm"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("nkb")) (("wsd"::("ofg"::("ziy"::("brj"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("gms")) (("bgj"::("etb"::("ndw"::("fee"::(Nil)))))) = true
=================================================
Progress: 230


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string1) (string4) then true else mem (string4) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 231


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:10.)
=================================================
Progress: 232


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), match (ck (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 233


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), match (ck (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:10.)
=================================================
Progress: 234


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string2(rank:10.)
=================================================
Progress: 235


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> intro string2(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
string2 : string
---------------------------------------
match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 236


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
string2 : string
---------------------------------------
match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
string2 : string
Cond1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro string2
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("ino") (P ("btx") (V ("elp")))) (("xav"::("ssn"::("hoy"::("icp"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("dsq")) (("lsn"::("jak"::("drj"::("bta"::(Nil)))))) = true
Prop: sub_check_ta1 (C (P ("jbh") (V ("bdm"))) (V ("gtj"))) (("kiq"::("xas"::("yro"::("mpx"::(Nil)))))) = true
=================================================
Progress: 237


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), match (ck (V (string4)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 238


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), match (ck (V (string4)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 239


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
match (ck (V (string4)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 240


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string1)

3 goal(s) more...

3 conjecture(s) more...
>>> induction string_list1(rank : 13.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
string_list1 : string list
Base2 : string_list1 = (Nil)
---------------------------------------
true = is_mem_ta1 ((Nil)) (string1)

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 241


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

---------------------------------------
forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (V (string2)) ((string1::string_list1)) = sub_check_ta1 (V (string2)) (string_list1)

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 242


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 243


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 244


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 245


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 246


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

4 conjecture(s) more...
>>> induction lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 247


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 248


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro string2(rank:13.)
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 249


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 250


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 251


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 252


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), match (ck (V (string4)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 253


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), match (ck (V (string4)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 254


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
match (ck (V (string4)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string4)) ((string3::(string2::(string1::(Nil))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 255


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
string_list1 : string list
Base2 : string_list1 = (Nil)
---------------------------------------
true = is_mem_ta1 ((Nil)) (string1)

4 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
string_list1 : string list
Base2 : string_list1 = (Nil)
---------------------------------------
true = false

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 256


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (V (string2)) ((string1::string_list1)) = sub_check_ta1 (V (string2)) (string_list1)

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 257


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 258


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 259


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 260


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 261


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 262


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 263


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string3(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 264


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 265


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 266


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:13.)
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 267


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 268


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 269


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string1:string) (string2:string), match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 270


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
forall (string2:string), match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 271


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
---------------------------------------
match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:14.)
=================================================
Progress: 272


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
forall (string_list1:string list), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string1) (string2)(rank:14.)
=================================================
Progress: 273


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 274


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
---------------------------------------
forall (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 275


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 276


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 277


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string5)(rank:14.)
=================================================
Progress: 278


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 279


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string4(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 280


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 281


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 282


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 283


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 284


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 285


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 286


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
---------------------------------------
forall (string2:string), match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 287


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
---------------------------------------
match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:14.)
=================================================
Progress: 288


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 289


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
---------------------------------------
forall (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 290


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string5)(rank:14.)
=================================================
Progress: 291


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string5)(rank:14.)
=================================================
Progress: 292


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13.)
=================================================
Progress: 293


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 294


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 295


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13.)
=================================================
Progress: 296


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 297


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 298


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
---------------------------------------
match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string4)(rank:14.)
=================================================
Progress: 299


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 300


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string5)(rank:14.)
=================================================
Progress: 301


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 302


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 303


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 304


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 305


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 306


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string5)(rank:14.)
=================================================
Progress: 307


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("qnt")) (("vlh"::("oqd"::("gxa"::("veh"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("jno")) (("aeq"::("sfq"::("uak"::("pnf"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("owt")) (("suu"::("bif"::("zwk"::("tnh"::(Nil)))))) = true
=================================================
Progress: 308


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
Cond1 : match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (P ("sky") (P ("ehd") (C (V ("jet")) (V ("bvw"))))) (P ("ker") (V ("zbp")))) (("csk"::("vki"::("ftj"::("con"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("ore")) (("vnb"::("wpw"::("bnd"::("nyw"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("efd")) (("soq"::("ipe"::("ybj"::("uaf"::(Nil)))))) = true
=================================================
Progress: 309


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
Cond1 : match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("soc") (C (C (V ("cbx")) (C (P ("efw") (P ("fla") (V ("ouj")))) (C (V ("fvu")) (V ("avy"))))) (V ("ahe")))) (("hdb"::("ofj"::("fgz"::("ujc"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("lyh")) (("cer"::("hgs"::("jpp"::("imp"::(Nil)))))) = true
Prop: sub_check_ta1 (P ("eas") (V ("xxr"))) (("ejs"::("fsm"::("ouj"::("ndb"::(Nil)))))) = true
=================================================
Progress: 310


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
Cond1 : match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("hfj")) (("feh"::("iqs"::("uco"::("wot"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("amm")) (("sqo"::("tmd"::("xzz"::("yhi"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("jfm")) (("fdu"::("ryr"::("nnc"::("hec"::(Nil)))))) = true
=================================================
Progress: 311


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
Cond1 : match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("fyb")) (("lli"::("wda"::("zek"::("aqi"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("fip")) (("poe"::("wzq"::("fct"::("wew"::(Nil)))))) = true
Prop: sub_check_ta1 (C (V ("cig")) (V ("wlc"))) (("rmf"::("til"::("kra"::("zwi"::(Nil)))))) = true
=================================================
Progress: 312


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 313


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : match (if match (if string_eq (string2) (string4) then true else mem (string4) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string4)(rank:14.)
=================================================
Progress: 314


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
forall (string_list1:string list), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 14.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string_eq (string1) (string2) = true
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:14.)
=================================================
Progress: 315


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 316


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string5)(rank:14.)
=================================================
Progress: 317


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 318


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : match (if match (if string_eq (string2) (string4) then true else mem (string4) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string4)(rank:14.)
=================================================
Progress: 319


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 320


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string5)(rank:14.)
=================================================
Progress: 321


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 322


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string5)(rank:14.)
=================================================
Progress: 323


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string3) (string4) then true else mem (string4) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string3) (string4) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 324


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string2) (string4) then true else mem (string4) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string4)(rank:14.)
=================================================
Progress: 325


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 326


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string5)(rank:14.)
=================================================
Progress: 327


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 328


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string5)(rank:14.)
=================================================
Progress: 329


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : match (if match (if string_eq (string2) (string4) then true else mem (string4) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 330


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : match (if match (if string_eq (string1) (string4) then true else mem (string4) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string4)(rank:14.)
=================================================
Progress: 331


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string_eq (string1) (string2) = true
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 14.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:14.)
induction string_list1(rank:23.)
=================================================
Progress: 332


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 333


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string5)(rank:14.)
=================================================
Progress: 334


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : match (if match (if string_eq (string2) (string4) then true else mem (string4) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 335


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : match (if match (if string_eq (string1) (string4) then true else mem (string4) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string4)(rank:14.)
=================================================
Progress: 336


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 337


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string5)(rank:14.)
=================================================
Progress: 338


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 339


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string5)(rank:14.)
=================================================
Progress: 340


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string2) (string4) then true else mem (string4) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
---------------------------------------
if string_eq (string2) (string4) then true else is_mem_ta1 ((string1::(Nil))) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 341


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string1) (string4) then true else mem (string4) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string4)(rank:14.)
=================================================
Progress: 342


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 343


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string5)(rank:14.)
=================================================
Progress: 344


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 345


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string5)(rank:14.)
=================================================
Progress: 346


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : match (if match (if string_eq (string1) (string4) then true else mem (string4) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 347


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:12.)
=================================================
Progress: 348


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
Cond1 : false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
>>> discriminate(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
match (ck (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 349


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
match (ck (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 350


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 351


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string2 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
Cond1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil)))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite <- IH1 in goal at 0
Prop: sub_check_ta1 (V ("kax")) (("ovr"::(Nil))) = sub_check_ta1 (V ("kax")) ((Nil))
Prop: sub_check_ta1 (V ("mli")) (("hcc"::(Nil))) = sub_check_ta1 (V ("mli")) ((Nil))
Prop: sub_check_ta1 (C (P ("lns") (V ("kdu"))) (V ("rtk"))) (("jix"::("muk"::(Nil)))) = sub_check_ta1 (C (P ("lns") (V ("kdu"))) (V ("rtk"))) (("muk"::(Nil)))
previous tactics
simpl in goal
intro Cond1
parent
(string4::(string3::(string2::(string1::(Nil)))))
lower
Cons(_, Cons(string3, Cons(string2, Cons(string1, Nil()))))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove lower
Cons(string3, Cons(string2, Cons(string1, Nil())))
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove upper
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove lower
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove upper
Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))
remove lower
Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("wvl")) (("bwy"::("zcq"::("qtq"::("zye"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("hgq")) (("kkb"::("lrp"::("kps"::("ctf"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("oym")) (("efk"::("orj"::("hir"::("slj"::(Nil)))))) = true
=================================================
Progress: 352


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string1)

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction string_list1(rank:15.)
=================================================
Progress: 353


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 354


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string5)(rank:14.)
=================================================
Progress: 355


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : match (if match (if string_eq (string1) (string4) then true else mem (string4) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 356


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:12.)
=================================================
Progress: 357


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string2 : string
Cond1 : false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
>>> discriminate(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), match (ck (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 358


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), match (ck (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:12.)
=================================================
Progress: 359


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string2:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
---------------------------------------
match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 360


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
---------------------------------------
match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string1 : string
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string2 : string
Cond1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string2
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("nze")) (("rhx"::("ain"::("xkq"::("jlo"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("vcr")) (("xmc"::("yao"::("lcy"::("iop"::(Nil)))))) = true
Prop: sub_check_ta1 (V ("rfr")) (("lmp"::("sdf"::("ovt"::("zbp"::(Nil)))))) = true
=================================================
Progress: 361


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 362


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string5)(rank:14.)
=================================================
Progress: 363


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 364


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string5)(rank:14.)
=================================================
Progress: 365


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string1) (string4) then true else mem (string4) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
---------------------------------------
if string_eq (string1) (string4) then true else is_mem_ta1 ((Nil)) (string4) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string4)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 366


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:12.)
=================================================
Progress: 367


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
Base1 : lambda1 = V (string4)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string3) (string4) = false
Case2 : string_eq (string2) (string4) = false
Case3 : string_eq (string1) (string4) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
>>> discriminate(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), match (ck (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 368


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), match (ck (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string4) (lambda2)) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:12.)
=================================================
Progress: 369


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:12.)
=================================================
Progress: 370


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
string2 : string
---------------------------------------
match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 371


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
string2 : string
---------------------------------------
match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string3::(string2::(string1::(Nil))))) = true
string3 : string
lambda1 : lambda
string4 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true
Inductive1 : lambda1 = P (string4) (lambda2)
string1 : string
string2 : string
Cond1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro string2
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("uqf")) (("wst"::("ugp"::("hsn"::("xxr"::(Nil)))))) = true
Prop: sub_check_ta1 (C (V ("bom")) (C (C (P ("pjz") (V ("pws"))) (V ("vwk"))) (V ("ltc")))) (("odr"::("jvp"::("mfd"::("mnm"::(Nil)))))) = true
Prop: sub_check_ta1 (P ("cdd") (C (C (V ("ynq")) (V ("xmh"))) (V ("mwm")))) (("ebd"::("fuq"::("jrd"::("cqt"::(Nil)))))) = true
=================================================
Progress: 372


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 373


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string5)(rank:14.)
=================================================
Progress: 374


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 375


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string5)(rank:14.)
=================================================
Progress: 376


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 377


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:12.)
=================================================
Progress: 378


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
>>> discriminate(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 379


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 380


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 381


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil))))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite <- IH1 in goal at 0
Prop: sub_check_ta1 (V ("dny")) (("exa"::(Nil))) = sub_check_ta1 (V ("dny")) ((Nil))
Prop: sub_check_ta1 (C (V ("pzq")) (P ("cht") (P ("jry") (V ("wbs"))))) (("aua"::(Nil))) = sub_check_ta1 (C (V ("pzq")) (P ("cht") (P ("jry") (V ("wbs"))))) ((Nil))
Prop: sub_check_ta1 (C (V ("tzi")) (V ("kgn"))) (("ecq"::(Nil))) = sub_check_ta1 (C (V ("tzi")) (V ("kgn"))) ((Nil))
previous tactics
simpl in goal
intro Cond1
parent
(string5::(string4::(string3::(string2::(string1::(Nil))))))
lower
Cons(_, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove upper
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove lower
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove upper
Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))
remove lower
Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))
remove upper
Cons(string7, Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))))
remove lower
Cons(string7, Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("egt") (V ("enj"))) (("knj"::("ogx"::("sly"::("gua"::("nqe"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("veg")) (("hrp"::("oni"::("wly"::("ins"::("luk"::(Nil))))))) = true
Prop: sub_check_ta1 (P ("qoi") (V ("txf"))) (("yys"::("blb"::("tbh"::("atd"::("kpo"::(Nil))))))) = true
Lemma List
forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil))))))

2 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 382


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil))))))

2 goal(s) more...

4 conjecture(s) more...
>>> assert forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)(rank : 0.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

---------------------------------------
forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 383


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 384


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:12.)
=================================================
Progress: 385


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
>>> discriminate(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string3:string), match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 386


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string3:string), match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:12.)
=================================================
Progress: 387


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string3 : string
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 388


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string3 : string
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string3 : string
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string3
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("jbv")) (("mtu"::("nlz"::("pei"::("zdz"::("svy"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("nup")) (("npi"::("msj"::("meg"::("gnb"::("mvc"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("mji")) (("pct"::("dhh"::("kez"::("fgb"::("mig"::(Nil))))))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string3 : string
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 389


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string3 : string
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 7
intro lambda1(rank:13.)
intro string2(rank:13.)
intro string4(rank:13.)
intro string5(rank:13.)
induction lambda1(rank:23.)
intro string3(rank:13.)
intro string1(rank:13.)
=================================================
Progress: 390


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 391


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 5
intro string2(rank:13.)
intro string4(rank:13.)
intro string5(rank:13.)
induction lambda1(rank:23.)
intro string3(rank:13.)
=================================================
Progress: 392


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro string3(rank:13.)
intro string4(rank:13.)
intro string5(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 393


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string4(rank:13.)
intro string5(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 394


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string5(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 395


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 396


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 397


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro string3(rank:13.)
intro string4(rank:13.)
intro string5(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 398


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string4(rank:13.)
intro string5(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 399


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string5(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 400


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 401


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:13.)
intro string4(rank:13.)
intro string5(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 402


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:13.)
intro string5(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 403


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 404


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:13.)
intro string5(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 405


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 406


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 407


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 408


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro string4(rank:13.)
intro string5(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 409


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string5(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 410


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 411


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:13.)
intro string5(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 412


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 413


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 414


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 415


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string5(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 416


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 417


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 418


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 419


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 420


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 421


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 422


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 423


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 424


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13.)
=================================================
Progress: 425


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro string5(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 426


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 427


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 428


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 429


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 430


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 431


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 432


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13.)
=================================================
Progress: 433


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:13.)
induction lambda1(rank:23.)
=================================================
Progress: 434


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 435


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 436


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 437


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 438


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:13.)
=================================================
Progress: 439


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string5(rank:13.)
=================================================
Progress: 440


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:15.)
=================================================
Progress: 441


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 442


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string5(rank:13.)
=================================================
Progress: 443


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13.)
=================================================
Progress: 444


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 445


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string5(rank:13.)
=================================================
Progress: 446


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro lambda1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:13.)
=================================================
Progress: 447


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string5(rank:13.)
=================================================
Progress: 448


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13.)
=================================================
Progress: 449


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string5(rank:13.)
=================================================
Progress: 450


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:13.)
=================================================
Progress: 451


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:13.)
=================================================
Progress: 452


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 453


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string3 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 454


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 455


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 456


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 457


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 458


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 459


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 460


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 461


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string5(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 462


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 463


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 464


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("vgz")) (("qdo"::("mts"::("ytl"::("ycd"::("pbn"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("lsc")) (("xmp"::("mdg"::("ngq"::("cux"::("ghh"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("bhj")) (("sed"::("bpc"::("lon"::("kou"::("spb"::(Nil))))))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 465


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 7
intro lambda1(rank:15.)
intro string2(rank:15.)
intro string4(rank:15.)
intro string5(rank:15.)
induction lambda1(rank:25.)
intro string3(rank:15.)
intro string1(rank:15.)
=================================================
Progress: 466


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string3 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string3 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (P ("ngp") (V ("fte"))) (V ("fkr"))) (("vaq"::("bur"::("usl"::("wyn"::("ecd"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("wjo")) (("ghz"::("has"::("xqw"::("ilb"::("fbf"::(Nil))))))) = true
Prop: sub_check_ta1 (C (V ("pof")) (V ("sqw"))) (("hde"::("dtv"::("abi"::("nnj"::("ijw"::(Nil))))))) = true
=================================================
Progress: 467


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
string5 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("kzk")) (("mkc"::("jwo"::("kyl"::("mlr"::("wjn"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("wvu")) (("ijx"::("dbm"::("byh"::("zwe"::("bem"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("rrr")) (("ifs"::("tjt"::("lpz"::("evh"::("agd"::(Nil))))))) = true
=================================================
Progress: 468


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
string4 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("rmz") (V ("qkx"))) (("mcq"::("ygu"::("cfz"::("omt"::("ymq"::(Nil))))))) = true
Prop: sub_check_ta1 (P ("wqr") (V ("coe"))) (("gcx"::("ahb"::("hji"::("dxk"::("jii"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("xvl")) (("jez"::("qse"::("pfp"::("thu"::("glr"::(Nil))))))) = true
=================================================
Progress: 469


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
string3 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("rjj")) (("wpc"::("tlj"::("uyt"::("dlb"::("cxh"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("jjj")) (("hjg"::("jpz"::("uov"::("ajt"::("xwe"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("ylv")) (("knn"::("bgt"::("ybj"::("uui"::("kpe"::(Nil))))))) = true
=================================================
Progress: 470


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
string5 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("kmu")) (C (V ("rdj")) (V ("nin")))) (("azy"::("ole"::("rdw"::("fou"::("xok"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("bxj")) (("aqm"::("dhx"::("qju"::("ypm"::("gtu"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("rss")) (("wlq"::("ela"::("jmr"::("bat"::("ozt"::(Nil))))))) = true
=================================================
Progress: 471


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string1 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("jiu")) (("uhg"::("vcb"::("eqa"::("afl"::("hpc"::(Nil))))))) = true
Prop: sub_check_ta1 (P ("fxs") (V ("kse"))) (("fjr"::("xny"::("uyc"::("sjk"::("jlr"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("pxs")) (("msq"::("seh"::("lty"::("tmo"::("mjr"::(Nil))))))) = true
=================================================
Progress: 472


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
string5 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("yfc")) (("jhk"::("kif"::("gnx"::("zdb"::("kjs"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("dqz")) (("hdn"::("oje"::("rnr"::("rqq"::("thn"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("tpx")) (("mqd"::("mpz"::("gvd"::("iqa"::("amy"::(Nil))))))) = true
=================================================
Progress: 473


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("cqj")) (("see"::("dkh"::("imc"::("pss"::("kkt"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("cqt")) (("luc"::("tpu"::("mtq"::("ksk"::("fhx"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("fyj")) (("edh"::("lgd"::("bkz"::("aux"::("dfg"::(Nil))))))) = true
=================================================
Progress: 474


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
string5 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("alq")) (("pnp"::("cso"::("anl"::("ciu"::("ugj"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("wkv")) (("wuw"::("nen"::("iwr"::("lnm"::("wwj"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("xfn")) (("zgh"::("lmf"::("wpg"::("yfu"::("mtx"::(Nil))))))) = true
=================================================
Progress: 475


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("wpj")) (("xzl"::("kfp"::("hhr"::("ksf"::("qdx"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("iyh")) (("spp"::("jll"::("exg"::("kah"::("ias"::(Nil))))))) = true
Prop: sub_check_ta1 (P ("uoe") (V ("ejx"))) (("qwz"::("qne"::("aoy"::("pqw"::("ezd"::(Nil))))))) = true
=================================================
Progress: 476


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("hmc") (V ("acx"))) (("dvr"::("iao"::("nmc"::("uia"::("snb"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("ebj")) (("wyf"::("gzh"::("dsn"::("yhb"::("bvz"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("jvc")) (("rig"::("ccq"::("lkb"::("cfp"::("tqc"::(Nil))))))) = true
=================================================
Progress: 477


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 478


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:12.)
=================================================
Progress: 479


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
>>> discriminate(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string1:string), match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 480


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string1:string), match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string1:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:12.)
=================================================
Progress: 481


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string1:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 482


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("jmt")) (("hwh"::("xko"::("txq"::("phg"::("vrx"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("yel")) (("uhl"::("obs"::("usv"::("naa"::("vnb"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("ycb")) (("uir"::("xon"::("oop"::("yjr"::("woa"::(Nil))))))) = true
=================================================
Progress: 483


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 484


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:12.)
=================================================
Progress: 485


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
>>> discriminate(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string2:string) (string3:string), match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 486


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string2:string) (string3:string), match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:12.)
=================================================
Progress: 487


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:12.)
=================================================
Progress: 488


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string2 : string
string3 : string
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 489


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string2 : string
string3 : string
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string2 : string
string3 : string
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string2
intro string3
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("pkk")) (("mbc"::("fce"::("kjm"::("cud"::("jqn"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("cqz")) (("pxq"::("grm"::("jgg"::("wub"::("yaq"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("plt")) (("yvr"::("izt"::("jke"::("wqy"::("dfi"::(Nil))))))) = true
=================================================
Progress: 490


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

4 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 491


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:12.)
=================================================
Progress: 492


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

4 conjecture(s) more...
>>> discriminate(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 493


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string1(rank:12.)
=================================================
Progress: 494


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro string1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string2(rank:12.)
=================================================
Progress: 495


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro string2(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string3(rank:12.)
=================================================
Progress: 496


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro string3(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
string2 : string
string3 : string
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 497


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
string2 : string
string3 : string
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
string2 : string
string3 : string
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro string2
intro string3
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (C (V ("wuj")) (V ("xxa"))) (V ("flx"))) (("zox"::("awy"::("pxn"::("xll"::("bwo"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("qin")) (("nvf"::("yaw"::("enq"::("ivo"::("aed"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("ifv")) (("izw"::("uto"::("ksm"::("hbo"::("bte"::(Nil))))))) = true
=================================================
Progress: 498


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 499


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 500


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 501


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 502


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 503


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string1)

3 goal(s) more...

4 conjecture(s) more...
>>> induction string_list1(rank : 15.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
string_list1 : string list
Base2 : string_list1 = (Nil)
---------------------------------------
true = is_mem_ta1 ((Nil)) (string1)

4 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 504


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

---------------------------------------
forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (V (string2)) ((string1::string_list1)) = sub_check_ta1 (V (string2)) (string_list1)

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 505


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 506


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 507


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string3:string) (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 508


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 509


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string3:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 510


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string2:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 511


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 512


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string2:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 513


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

5 conjecture(s) more...
>>> induction lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 514


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 515


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro string2(rank:15.)
intro string4(rank:15.)
intro string5(rank:15.)
induction lambda1(rank:25.)
intro string3(rank:15.)
=================================================
Progress: 516


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro string3(rank:15.)
intro string4(rank:15.)
intro string5(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 517


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro string4(rank:15.)
intro string5(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 518


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string5(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 519


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 520


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 521


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 522


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 523


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 524


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
match (ck (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string5)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 525


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
string_list1 : string list
Base2 : string_list1 = (Nil)
---------------------------------------
true = is_mem_ta1 ((Nil)) (string1)

4 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
string_list1 : string list
Base2 : string_list1 = (Nil)
---------------------------------------
true = false

4 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 526


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (V (string2)) ((string1::string_list1)) = sub_check_ta1 (V (string2)) (string_list1)

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 527


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 528


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 529


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string3:string) (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 530


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 531


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string3:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string3:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 532


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string2:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string2:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 533


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 534


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string2:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string2:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 535


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 536


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 537


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro string3(rank:15.)
intro string4(rank:15.)
intro string5(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 538


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro string4(rank:15.)
intro string5(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 539


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string5(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 540


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 541


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:15.)
intro string4(rank:15.)
intro string5(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 542


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:15.)
intro string5(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 543


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 544


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:15.)
intro string5(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 545


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 546


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 547


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 548


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string2:string) (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
---------------------------------------
forall (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 549


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 550


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
forall (string1:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 551


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string5)(rank:16.)
=================================================
Progress: 552


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
forall (string_list1:string list), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string1) (string2)(rank:16.)
=================================================
Progress: 553


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 554


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 555


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 556


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 557


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string3:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
---------------------------------------
forall (string3:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 558


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string2:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
---------------------------------------
forall (string2:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 559


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 560


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string2:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 561


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:16.)
=================================================
Progress: 562


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 563


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro string4(rank:15.)
intro string5(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 564


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string5(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 565


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 566


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:15.)
intro string5(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 567


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 568


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 569


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 570


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string5(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 571


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 572


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 573


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 574


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 575


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 576


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 577


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 578


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 579


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 580


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
---------------------------------------
forall (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 581


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string5)(rank:16.)
=================================================
Progress: 582


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string5)(rank:16.)
=================================================
Progress: 583


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 584


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 585


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 586


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 587


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
---------------------------------------
forall (string3:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 588


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
---------------------------------------
forall (string2:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 589


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:16.)
=================================================
Progress: 590


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:16.)
=================================================
Progress: 591


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 592


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string5(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 593


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 594


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 595


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 596


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 597


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 598


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 599


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 600


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 601


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 602


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 603


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 604


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 605


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 606


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 607


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string5)(rank:16.)
=================================================
Progress: 608


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 609


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 610


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:16.)
=================================================
Progress: 611


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:16.)
=================================================
Progress: 612


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:16.)
=================================================
Progress: 613


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:16.)
=================================================
Progress: 614


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 615


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 616


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 617


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 618


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 619


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 620


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 621


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 622


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 623


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 624


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 625


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 626


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 627


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
---------------------------------------
match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string4) (string5)(rank:16.)
=================================================
Progress: 628


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 629


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:16.)
=================================================
Progress: 630


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 631


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string3 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 632


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 633


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 634


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 635


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 636


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 637


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 638


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 639


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 640


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 641


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 642


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:16.)
=================================================
Progress: 643


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("pex")) (("wkb"::("fqb"::("muj"::("kji"::("guz"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("rab")) (("ppn"::("lnm"::("zec"::("mju"::("lvs"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("qfy")) (("aeh"::("xoq"::("tjl"::("jfg"::("nxz"::(Nil))))))) = true
=================================================
Progress: 644


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string3 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string3 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("qum")) (V ("gnx"))) (("fuy"::("ldp"::("qlj"::("ylt"::("cmw"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("wfb")) (("wak"::("lbn"::("nko"::("jtj"::("jgj"::(Nil))))))) = true
Prop: sub_check_ta1 (P ("pfr") (V ("bnw"))) (("tut"::("mat"::("uzy"::("hmz"::("qsm"::(Nil))))))) = true
=================================================
Progress: 645


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
string5 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("gjq")) (C (C (V ("vbk")) (V ("ftr"))) (P ("hau") (P ("uuz") (V ("xmf")))))) (("hkm"::("slz"::("fyy"::("mhf"::("ztn"::(Nil))))))) = true
Prop: sub_check_ta1 (C (P ("hsp") (V ("ihw"))) (P ("xol") (V ("mws")))) (("mgt"::("wdg"::("xnq"::("gif"::("wmu"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("csn")) (("qib"::("pcw"::("nqj"::("kdp"::("bae"::(Nil))))))) = true
=================================================
Progress: 646


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
string4 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("svf") (V ("daz"))) (("ddm"::("slz"::("isd"::("krj"::("svc"::(Nil))))))) = true
Prop: sub_check_ta1 (C (P ("geo") (P ("nwc") (C (P ("cjq") (P ("chu") (V ("uqd")))) (V ("pxu"))))) (C (V ("vec")) (V ("syh")))) (("lgd"::("tmu"::("dqd"::("gzr"::("wqp"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("ahp")) (("gcp"::("mqr"::("qnm"::("kro"::("rks"::(Nil))))))) = true
=================================================
Progress: 647


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
string3 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("czv")) (("lxo"::("yzr"::("yhj"::("jal"::("uuv"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("bgg")) (("npc"::("olx"::("dgq"::("wgw"::("lep"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("lfs")) (("dpv"::("qrt"::("tjx"::("kjg"::("lip"::(Nil))))))) = true
=================================================
Progress: 648


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
string5 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("lcx")) (("wcd"::("pcu"::("hwb"::("mzq"::("dko"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("ptu")) (("hki"::("utg"::("myd"::("rvj"::("wyj"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("yfo")) (("dni"::("ovj"::("mnm"::("xiv"::("yob"::(Nil))))))) = true
=================================================
Progress: 649


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string1 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("hib")) (("lzu"::("sdr"::("fys"::("xdi"::("sat"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("ubh")) (("yag"::("hyw"::("hhv"::("dpz"::("erf"::(Nil))))))) = true
Prop: sub_check_ta1 (C (C (V ("qzx")) (V ("wcg"))) (V ("wfw"))) (("wdp"::("hjd"::("yux"::("sdc"::("lok"::(Nil))))))) = true
=================================================
Progress: 650


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
string5 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("vvm")) (("wcm"::("epd"::("hji"::("wkn"::("qkr"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("vca")) (("nfo"::("czj"::("cez"::("lwl"::("grz"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("qaw")) (("elp"::("ijo"::("ypg"::("ewq"::("ett"::(Nil))))))) = true
=================================================
Progress: 651


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (P ("tbx") (V ("uzi"))) (V ("vok"))) (("ebz"::("vna"::("xeb"::("qjn"::("idu"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("bje")) (("nbk"::("qaz"::("vmr"::("pxc"::("nit"::(Nil))))))) = true
Prop: sub_check_ta1 (P ("oyn") (V ("hhw"))) (("reg"::("bml"::("ojk"::("ycs"::("bml"::(Nil))))))) = true
=================================================
Progress: 652


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
string5 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("aff") (C (V ("gmr")) (V ("lam")))) (("bjh"::("obd"::("vcp"::("eck"::("ajr"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("crj")) (("aev"::("der"::("uxr"::("odp"::("bkq"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("ded")) (("veq"::("tzc"::("pef"::("wja"::("knz"::(Nil))))))) = true
=================================================
Progress: 653


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("zks") (C (C (V ("ulo")) (P ("igf") (C (P ("pjk") (V ("wux"))) (V ("kzm"))))) (V ("tbi")))) (("eoz"::("dqu"::("woo"::("vvk"::("kzq"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("koh")) (("skt"::("hza"::("hzl"::("ljo"::("upr"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("glv")) (("mwf"::("cag"::("pfm"::("rcr"::("uqb"::(Nil))))))) = true
=================================================
Progress: 654


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
Cond1 : match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("dqi") (P ("dek") (V ("ero")))) (("rib"::("ymw"::("usx"::("fct"::("jbd"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("ejo")) (("qzv"::("sqb"::("anv"::("ntg"::("jpg"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("gox")) (("irt"::("knx"::("xfz"::("cui"::("khw"::(Nil))))))) = true
=================================================
Progress: 655


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 656


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string5)(rank:16.)
=================================================
Progress: 657


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
forall (string_list1:string list), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 16.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string_eq (string1) (string2) = true
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:16.)
=================================================
Progress: 658


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 659


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:16.)
=================================================
Progress: 660


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 661


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string5)(rank:16.)
=================================================
Progress: 662


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 663


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string5)(rank:16.)
=================================================
Progress: 664


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 665


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:16.)
=================================================
Progress: 666


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 667


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:16.)
=================================================
Progress: 668


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 669


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string5)(rank:16.)
=================================================
Progress: 670


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 671


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:16.)
=================================================
Progress: 672


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 673


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:16.)
=================================================
Progress: 674


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 675


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:16.)
=================================================
Progress: 676


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 677


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:16.)
=================================================
Progress: 678


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string4) (string5) then true else mem (string5) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string4) (string5) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 679


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string5)(rank:16.)
=================================================
Progress: 680


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 681


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:16.)
=================================================
Progress: 682


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 683


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:16.)
=================================================
Progress: 684


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 685


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string5)(rank:16.)
=================================================
Progress: 686


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string_eq (string1) (string2) = true
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 16.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:16.)
induction string_list1(rank:25.)
=================================================
Progress: 687


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 688


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:16.)
=================================================
Progress: 689


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 690


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string5)(rank:16.)
=================================================
Progress: 691


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 692


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string5)(rank:16.)
=================================================
Progress: 693


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 694


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:16.)
=================================================
Progress: 695


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 696


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:16.)
=================================================
Progress: 697


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 698


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string5)(rank:16.)
=================================================
Progress: 699


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 700


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:16.)
=================================================
Progress: 701


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 702


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:16.)
=================================================
Progress: 703


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 704


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:16.)
=================================================
Progress: 705


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 706


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:16.)
=================================================
Progress: 707


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string3) (string5) then true else mem (string5) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
---------------------------------------
if string_eq (string3) (string5) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 708


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string5)(rank:16.)
=================================================
Progress: 709


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 710


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:16.)
=================================================
Progress: 711


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 712


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:16.)
=================================================
Progress: 713


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 714


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string5)(rank:16.)
=================================================
Progress: 715


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 16.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string1)

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction string_list1(rank:17.)
=================================================
Progress: 716


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 717


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:16.)
=================================================
Progress: 718


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 719


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string5)(rank:16.)
=================================================
Progress: 720


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 721


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string5)(rank:16.)
=================================================
Progress: 722


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 723


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:16.)
=================================================
Progress: 724


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 725


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:16.)
=================================================
Progress: 726


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 727


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string5)(rank:16.)
=================================================
Progress: 728


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 729


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:16.)
=================================================
Progress: 730


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 731


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:16.)
=================================================
Progress: 732


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 733


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:16.)
=================================================
Progress: 734


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 735


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:16.)
=================================================
Progress: 736


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string2) (string5) then true else mem (string5) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
---------------------------------------
if string_eq (string2) (string5) then true else is_mem_ta1 ((string1::(Nil))) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 737


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string5)(rank:16.)
=================================================
Progress: 738


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 739


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:16.)
=================================================
Progress: 740


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 741


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:16.)
=================================================
Progress: 742


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 743


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:14.)
=================================================
Progress: 744


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
>>> discriminate(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 745


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 746


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 747


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil))))))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite <- IH1 in goal at 0
Prop: sub_check_ta1 (V ("shd")) (("mli"::(Nil))) = sub_check_ta1 (V ("shd")) ((Nil))
Prop: sub_check_ta1 (V ("dqn")) (("fkv"::(Nil))) = sub_check_ta1 (V ("dqn")) ((Nil))
Prop: sub_check_ta1 (V ("wmg")) (("yzx"::(Nil))) = sub_check_ta1 (V ("wmg")) ((Nil))
previous tactics
simpl in goal
intro Cond1
parent
(string5::(string4::(string3::(string2::(string1::(Nil))))))
lower
Cons(_, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove lower
Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))
remove upper
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove lower
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove upper
Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))
remove lower
Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))
remove upper
Cons(string7, Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))))
remove lower
Cons(string7, Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("fmm")) (("kjn"::("lga"::("jhb"::("pst"::("jop"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("yyl")) (("nzs"::("ann"::("sqe"::("jan"::("bst"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("qsm")) (("ptc"::("dai"::("zov"::("reg"::("olv"::(Nil))))))) = true
=================================================
Progress: 748


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 749


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string6)(rank:16.)
=================================================
Progress: 750


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 751


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:14.)
=================================================
Progress: 752


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string3 : string
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
>>> discriminate(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string3:string), match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 753


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string3:string), match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:14.)
=================================================
Progress: 754


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string3 : string
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 755


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string3 : string
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string2 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string3 : string
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string3
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("rgy")) (("xrr"::("gcp"::("fvo"::("jgt"::("mix"::(Nil))))))) = true
Prop: sub_check_ta1 (P ("xvh") (P ("hlh") (V ("ofr")))) (("ila"::("nuj"::("ipk"::("ngn"::("dng"::(Nil))))))) = true
Prop: sub_check_ta1 (C (V ("qln")) (V ("ljt"))) (("cxq"::("wvw"::("qhz"::("fqi"::("kzc"::(Nil))))))) = true
=================================================
Progress: 756


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 757


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:14.)
=================================================
Progress: 758


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
>>> discriminate(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string1:string), match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 759


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string1:string), match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string1:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:14.)
=================================================
Progress: 760


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string1:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 761


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string2 : string
string3 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("aql") (C (C (V ("jxw")) (V ("qam"))) (V ("agl")))) (("kms"::("woj"::("fuy"::("jww"::("bgs"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("fax")) (("cdz"::("vyp"::("vlk"::("uqv"::("mub"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("gpf")) (("slj"::("ogb"::("zoh"::("gqq"::("neo"::(Nil))))))) = true
=================================================
Progress: 762


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 763


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string6)(rank:16.)
=================================================
Progress: 764


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 765


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string6)(rank:16.)
=================================================
Progress: 766


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 767


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:14.)
=================================================
Progress: 768


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string2 : string
string3 : string
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
>>> discriminate(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string2:string) (string3:string), match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 769


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string2:string) (string3:string), match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:14.)
=================================================
Progress: 770


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:14.)
=================================================
Progress: 771


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string2 : string
string3 : string
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 772


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string2 : string
string3 : string
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string1 : string
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string2 : string
string3 : string
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string2
intro string3
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("nbw") (V ("mqq"))) (("dym"::("xnu"::("tbg"::("zkm"::("ptm"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("pqn")) (("rzg"::("eqy"::("ata"::("owa"::("wyd"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("lfk")) (("uku"::("pxa"::("lmr"::("stg"::("xji"::(Nil))))))) = true
=================================================
Progress: 773


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 774


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string6)(rank:16.)
=================================================
Progress: 775


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 776


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string6)(rank:16.)
=================================================
Progress: 777


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 778


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string6)(rank:16.)
=================================================
Progress: 779


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 780


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string6)(rank:16.)
=================================================
Progress: 781


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string1) (string5) then true else mem (string5) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
---------------------------------------
if string_eq (string1) (string5) then true else is_mem_ta1 ((Nil)) (string5) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string5)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 782


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:14.)
=================================================
Progress: 783


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
Base1 : lambda1 = V (string5)
string1 : string
string2 : string
string3 : string
Cond1 : false = true
Case1 : string_eq (string4) (string5) = false
Case2 : string_eq (string3) (string5) = false
Case3 : string_eq (string2) (string5) = false
Case4 : string_eq (string1) (string5) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
>>> discriminate(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 784


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string5) (lambda2)) ((string4::(string3::(string2::(string1::(Nil)))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:14.)
=================================================
Progress: 785


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:14.)
=================================================
Progress: 786


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:14.)
=================================================
Progress: 787


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
string2 : string
string3 : string
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 788


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
string2 : string
string3 : string
---------------------------------------
match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string4::(string3::(string2::(string1::(Nil)))))) = true
string4 : string
lambda1 : lambda
string5 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string), match (ck (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string4::(string3::(string2::(string1::(Nil)))))) = true
Inductive1 : lambda1 = P (string5) (lambda2)
string1 : string
string2 : string
string3 : string
Cond1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro string2
intro string3
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("lxx") (V ("elh"))) (("kva"::("xpa"::("lha"::("see"::("gkq"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("nrb")) (("tls"::("qix"::("ytc"::("qhe"::("huq"::(Nil))))))) = true
Prop: sub_check_ta1 (V ("agz")) (("ppc"::("atq"::("fah"::("iyn"::("hme"::(Nil))))))) = true
=================================================
Progress: 789


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 790


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string6)(rank:16.)
=================================================
Progress: 791


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string2) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 792


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string6)(rank:16.)
=================================================
Progress: 793


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 794


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:14.)
=================================================
Progress: 795


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
>>> discriminate(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 796


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 797


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
Cond1 : match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 798


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
Cond1 : match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
Cond1 : match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil)))))))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite <- IH1 in goal at 0
Prop: sub_check_ta1 (V ("hza")) (("rog"::(Nil))) = sub_check_ta1 (V ("hza")) ((Nil))
Prop: sub_check_ta1 (V ("fao")) (("udv"::(Nil))) = sub_check_ta1 (V ("fao")) ((Nil))
Prop: sub_check_ta1 (V ("dwe")) (("unb"::("haj"::(Nil)))) = sub_check_ta1 (V ("dwe")) (("haj"::(Nil)))
previous tactics
simpl in goal
intro Cond1
parent
(string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))
lower
Cons(_, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))
upper
sub_check_ta1(lambda2, _)
remove upper
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove lower
Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))
remove upper
Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))
remove lower
Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))
remove upper
Cons(string7, Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))))
remove lower
Cons(string7, Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil())))))))
remove upper
Cons(string8, Cons(string7, Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))))
remove lower
Cons(string8, Cons(string7, Cons(string6, Cons(string5, Cons(string4, Cons(string3, Cons(string2, Cons(string1, Nil()))))))))
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("fxq")) (("fbe"::("jba"::("wrt"::("ehq"::("vhm"::("kyb"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (C (P ("czu") (V ("ycg"))) (C (V ("gjn")) (P ("hoz") (V ("phy"))))) (V ("kfo"))) (("fzu"::("sgv"::("cqq"::("gim"::("nos"::("rul"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("qwt")) (C (V ("xxh")) (P ("wxi") (C (V ("qku")) (V ("fsh")))))) (("syx"::("std"::("xoq"::("ird"::("tac"::("naw"::(Nil)))))))) = true
Lemma List
forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
Cond1 : match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil)))))))

2 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 799


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
Cond1 : match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil)))))))

2 goal(s) more...

5 conjecture(s) more...
>>> assert forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)(rank : 0.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

---------------------------------------
forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 800


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 801


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:14.)
=================================================
Progress: 802


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
>>> discriminate(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string4:string), match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 803


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string4:string), match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:14.)
=================================================
Progress: 804


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string4 : string
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 805


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string4 : string
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string4 : string
Cond1 : match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string4
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("czf")) (("kzx"::("yah"::("ocg"::("oot"::("fqv"::("cnb"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (P ("exf") (C (C (V ("rpm")) (V ("rsi"))) (C (V ("wbz")) (V ("itk"))))) (P ("qrv") (V ("fkx")))) (("buc"::("qvh"::("cng"::("imt"::("phr"::("pnj"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("mad")) (("mad"::("xfa"::("bzu"::("mxm"::("ywf"::("oln"::(Nil)))))))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string4 : string
Cond1 : match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 806


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string4 : string
Cond1 : match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 8
intro lambda1(rank:15.)
intro string2(rank:15.)
intro string4(rank:15.)
intro string5(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
intro string3(rank:15.)
intro string1(rank:15.)
=================================================
Progress: 807


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 808


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 6
intro string2(rank:15.)
intro string4(rank:15.)
intro string5(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
intro string3(rank:15.)
=================================================
Progress: 809


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro string3(rank:15.)
intro string5(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
intro string4(rank:15.)
=================================================
Progress: 810


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro string4(rank:15.)
intro string5(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 811


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro string5(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 812


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 813


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 814


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 815


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro string3(rank:15.)
intro string5(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
intro string4(rank:15.)
=================================================
Progress: 816


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro string4(rank:15.)
intro string5(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 817


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro string5(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 818


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 819


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 820


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:15.)
intro string5(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
intro string4(rank:15.)
=================================================
Progress: 821


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:15.)
intro string5(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 822


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 823


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 824


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:15.)
intro string5(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 825


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 826


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 827


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 828


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 829


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 830


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 831


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro string4(rank:15.)
intro string5(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 832


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro string5(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 833


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 834


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 835


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:15.)
intro string5(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 836


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 837


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 838


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 839


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 840


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 841


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 842


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro string5(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 843


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 844


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 845


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 846


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 847


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 848


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 849


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 850


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 851


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 852


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 853


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 854


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 855


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 856


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 857


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 858


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 859


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 860


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 861


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 862


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro string5(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 863


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 864


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 865


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 866


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 867


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 868


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 869


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 870


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 871


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 872


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 873


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 874


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 875


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 876


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 877


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 878


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 879


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:15.)
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 880


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 881


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 882


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 883


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 884


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 885


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 886


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 887


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 888


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 889


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 890


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 891


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 892


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 893


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 894


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro string6(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 895


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 896


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 897


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 898


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 899


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 900


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 901


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 902


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:15.)
induction lambda1(rank:25.)
=================================================
Progress: 903


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 904


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 905


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 906


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 907


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 908


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 909


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 910


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 911


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 912


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 913


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 914


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 915


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 916


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 917


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 918


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:15.)
=================================================
Progress: 919


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 920


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 921


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 922


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 923


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 924


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string6(rank:15.)
=================================================
Progress: 925


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:17.)
=================================================
Progress: 926


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 927


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string3 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string6(rank:15.)
=================================================
Progress: 928


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string3 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 929


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 930


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string6(rank:15.)
=================================================
Progress: 931


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro lambda1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 932


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
string4 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string6(rank:15.)
=================================================
Progress: 933


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
string2 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 934


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
string3 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string6(rank:15.)
=================================================
Progress: 935


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 936


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 937


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string6(rank:15.)
=================================================
Progress: 938


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string6(rank:15.)
=================================================
Progress: 939


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 940


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 941


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string6(rank:15.)
=================================================
Progress: 942


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:15.)
=================================================
Progress: 943


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string6(rank:15.)
=================================================
Progress: 944


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 945


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string6(rank:15.)
=================================================
Progress: 946


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:15.)
=================================================
Progress: 947


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string6(rank:15.)
=================================================
Progress: 948


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 949


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string6(rank:15.)
=================================================
Progress: 950


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:15.)
=================================================
Progress: 951


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:15.)
=================================================
Progress: 952


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 953


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 954


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string3 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string3 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 955


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string3 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string3 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 956


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 957


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 958


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 959


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
string4 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
string4 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 960


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
string2 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
string2 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 961


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
string3 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
string3 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 962


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 963


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 964


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 965


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 966


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 967


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 968


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 969


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 970


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 971


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 972


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 973


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 974


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 975


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 976


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string6(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 977


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 978


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 979


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("ydm") (C (V ("ekd")) (C (V ("cje")) (V ("bof"))))) (("vti"::("ljj"::("jrx"::("rpg"::("bjo"::("mic"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("cfh") (V ("eui"))) (("onq"::("vmj"::("rng"::("nmy"::("gug"::("lsb"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("iey")) (C (V ("yxl")) (C (V ("utd")) (V ("ckn"))))) (("xbs"::("lgd"::("ros"::("tur"::("lho"::("pcq"::(Nil)))))))) = true
Lemma List
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
End of Lemma List


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 980


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true(rank : 0.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 8
intro lambda1(rank:17.)
intro string2(rank:17.)
intro string4(rank:17.)
intro string5(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
intro string3(rank:17.)
intro string1(rank:17.)
=================================================
Progress: 981


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string4 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("ujk")) (P ("zss") (V ("fye")))) (("drj"::("mss"::("dop"::("car"::("zvf"::("ylr"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("aof")) (("ymo"::("qki"::("dow"::("uzc"::("mqj"::("owd"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("rkk")) (("nvg"::("skj"::("zbm"::("fod"::("kqw"::("uum"::(Nil)))))))) = true
=================================================
Progress: 982


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string3 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string3 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (C (V ("asb")) (V ("pbo"))) (V ("spk"))) (("ezg"::("fkp"::("ark"::("ium"::("fcx"::("pgp"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("cvw")) (("men"::("zpn"::("rwt"::("ffk"::("plp"::("njc"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("tup")) (("yqu"::("cqy"::("njj"::("pct"::("bpp"::("rjr"::(Nil)))))))) = true
=================================================
Progress: 983


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string3 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string3 : string
string5 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("eak")) (("psj"::("llj"::("kqr"::("vbv"::("qfn"::("yuf"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("xmp")) (("ece"::("cem"::("ryo"::("uwq"::("zzf"::("uzh"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("hjt")) (("pwv"::("siw"::("gdi"::("xfg"::("axz"::("zkt"::(Nil)))))))) = true
=================================================
Progress: 984


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string3 : string
string4 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("jhp")) (V ("dbe"))) (("pxj"::("oxj"::("kmk"::("xhq"::("wzg"::("hea"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (C (P ("lgo") (P ("pdy") (V ("fch")))) (V ("hxg"))) (P ("eof") (V ("lqt")))) (("rzc"::("kbn"::("byb"::("fhz"::("grd"::("nka"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("mvw")) (("szp"::("ruc"::("brc"::("tdk"::("dqa"::("zys"::(Nil)))))))) = true
=================================================
Progress: 985


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
string5 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("zwc")) (("iow"::("bya"::("lgc"::("diy"::("hgk"::("jnk"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("opp")) (("wsn"::("xko"::("der"::("huw"::("isb"::("ahx"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("eid")) (V ("eyj"))) (("gcj"::("rfe"::("gsv"::("kcz"::("lok"::("uri"::(Nil)))))))) = true
=================================================
Progress: 986


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ubs")) (("hct"::("ziq"::("cwx"::("flx"::("pay"::("snt"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("gwf")) (("pgb"::("qjk"::("ths"::("jtm"::("ekf"::("wjs"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("kyi")) (("qmt"::("qww"::("yfi"::("vtx"::("lwy"::("ucm"::(Nil)))))))) = true
=================================================
Progress: 987


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
string4 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
string4 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("nfg")) (("cky"::("glw"::("unv"::("mjg"::("hzi"::("jrf"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("jdl")) (("xvi"::("uhb"::("kdz"::("abg"::("wcj"::("ops"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (P ("bvm") (C (V ("tom")) (V ("vci")))) (V ("wio"))) (("dkg"::("qbq"::("mlf"::("syn"::("obx"::("fya"::(Nil)))))))) = true
=================================================
Progress: 988


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
string2 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
string2 : string
string4 : string
string5 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("zkc")) (("xhv"::("jcj"::("fxd"::("mgb"::("xzm"::("gxq"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("mrp")) (("ino"::("hhr"::("rmn"::("hbe"::("dab"::("pxf"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("wpw")) (("aqv"::("syp"::("bjn"::("dvt"::("zpl"::("gtj"::(Nil)))))))) = true
=================================================
Progress: 989


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
string3 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
string3 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("ush")) (V ("fdi"))) (("foy"::("aul"::("cct"::("qru"::("rnx"::("fro"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("jro")) (("tyt"::("pro"::("jpj"::("cvk"::("dac"::("eiw"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("kdi")) (V ("rkh"))) (("vfj"::("lfn"::("lyj"::("klz"::("mlh"::("lyu"::(Nil)))))))) = true
=================================================
Progress: 990


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
string5 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("qre")) (("qgf"::("lfu"::("alt"::("aqs"::("lwb"::("ssa"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("sij")) (("zip"::("dup"::("ltd"::("lyb"::("fjr"::("dxp"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("vvt") (V ("iax"))) (("bwz"::("dqr"::("ijd"::("jhe"::("jsp"::("cmb"::(Nil)))))))) = true
=================================================
Progress: 991


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
string4 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("rnx")) (("nfe"::("onk"::("qjx"::("uri"::("eki"::("xrq"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("boi")) (("ksl"::("axj"::("tgb"::("caa"::("ggt"::("ebw"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("aij")) (("jmp"::("csw"::("mue"::("bpv"::("rlu"::("fgr"::(Nil)))))))) = true
=================================================
Progress: 992


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
string5 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("fsb")) (("kky"::("rdv"::("uyg"::("jao"::("mup"::("hal"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("nhu")) (("nau"::("vxb"::("qhq"::("mot"::("fax"::("pib"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("wxj")) (("hga"::("ovs"::("otr"::("gmg"::("bhm"::("utu"::(Nil)))))))) = true
=================================================
Progress: 993


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("dey")) (("vaf"::("pac"::("wrl"::("ict"::("qgx"::("tpn"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("ilm")) (("nxv"::("dqe"::("jdv"::("gqs"::("urw"::("vhr"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("wnk") (V ("ygo"))) (("vuu"::("jdo"::("eoh"::("owh"::("qno"::("dxp"::(Nil)))))))) = true
=================================================
Progress: 994


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string5 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (C (V ("keu")) (C (V ("zyc")) (P ("uga") (V ("mbg"))))) (C (V ("bpe")) (V ("zcj")))) (("pby"::("psy"::("qwg"::("qof"::("rrz"::("rfz"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("jtg") (C (C (V ("xqj")) (V ("yyt"))) (V ("qmp")))) (("vqv"::("owa"::("coc"::("piv"::("rsx"::("mtt"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (P ("iaj") (V ("kld"))) (V ("yyd"))) (("qxs"::("ovw"::("qvz"::("scb"::("epz"::("wam"::(Nil)))))))) = true
=================================================
Progress: 995


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string4 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("qdv")) (("laj"::("mjf"::("yym"::("kaa"::("lot"::("fjk"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("phc")) (("jdl"::("izq"::("ufq"::("pnh"::("hpm"::("icp"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("poy")) (("dyy"::("mpw"::("cqn"::("zsf"::("bzq"::("gkw"::(Nil)))))))) = true
=================================================
Progress: 996


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
string5 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("rmj") (P ("omn") (V ("ztg")))) (("lfx"::("qrx"::("pgr"::("rus"::("via"::("sgj"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (C (P ("ngp") (V ("pdk"))) (V ("cno"))) (V ("brx"))) (("cof"::("rpa"::("wro"::("tjj"::("hfe"::("glt"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("xzg")) (V ("wov"))) (("kjh"::("gbj"::("yzp"::("djq"::("nsj"::("twt"::(Nil)))))))) = true
=================================================
Progress: 997


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("atl")) (("xnx"::("yef"::("ohn"::("ebe"::("ons"::("wvs"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("nwu")) (("nzg"::("nbh"::("wwk"::("jkk"::("ybj"::("mvk"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("dmg")) (("xgm"::("zyi"::("mnz"::("vpz"::("gvq"::("ghl"::(Nil)))))))) = true
=================================================
Progress: 998


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("owj")) (("jcq"::("fha"::("bho"::("rhj"::("wrc"::("fhr"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("chd") (V ("hws"))) (("jit"::("qcl"::("pkc"::("gyl"::("qeg"::("pcb"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("nsr")) (V ("wiy"))) (("jfm"::("rfg"::("ywo"::("nhg"::("cdp"::("tev"::(Nil)))))))) = true
=================================================
Progress: 999


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
string5 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (C (P ("eak") (V ("cyf"))) (V ("ebr"))) (V ("uqr"))) (("zvm"::("oyr"::("nei"::("jwd"::("lih"::("xmc"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (P ("aof") (V ("hlb"))) (V ("xmh"))) (("pcq"::("jvw"::("epz"::("yuz"::("laz"::("vvs"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("qcm")) (("dlr"::("zej"::("eyw"::("jfm"::("oar"::("elh"::(Nil)))))))) = true
=================================================
Progress: 1000


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
string5 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (P ("mec") (P ("jsu") (V ("xbb")))) (V ("guf"))) (("faa"::("obs"::("ksm"::("gim"::("ndb"::("gbu"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("vdi")) (V ("qpe"))) (("fza"::("whr"::("czj"::("eny"::("ohe"::("wls"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("lea")) (("che"::("usg"::("tjs"::("pfa"::("seq"::("gpm"::(Nil)))))))) = true
=================================================
Progress: 1001


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("hqs")) (("dqg"::("mrc"::("wux"::("xlg"::("qna"::("dfj"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("fzg")) (("blf"::("vnu"::("idm"::("toi"::("ryi"::("vel"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("iip")) (("nqo"::("ziw"::("kym"::("qmw"::("zqk"::("uze"::(Nil)))))))) = true
=================================================
Progress: 1002


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("gff")) (("ntj"::("vss"::("mfo"::("cqt"::("klm"::("taj"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("pyj")) (("yrm"::("ylw"::("sfv"::("kxg"::("oeg"::("dhm"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("tiz") (P ("ves") (C (C (V ("nxc")) (P ("efb") (V ("dvp")))) (V ("bbr"))))) (("ouz"::("ets"::("aeu"::("jaw"::("fav"::("odj"::(Nil)))))))) = true
=================================================
Progress: 1003


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
string5 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("cwf")) (P ("tqq") (V ("fmx")))) (("otm"::("icl"::("sul"::("ecn"::("ejh"::("dvx"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("ebz")) (V ("nzv"))) (("fou"::("tbf"::("cfm"::("ric"::("bfw"::("nax"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("pja")) (("kgg"::("weh"::("bww"::("sdg"::("hqe"::("mtm"::(Nil)))))))) = true
=================================================
Progress: 1004


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("oth") (V ("ksz"))) (("pfl"::("zoi"::("gdu"::("jor"::("tno"::("rsv"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("hrb")) (("hjt"::("wac"::("jbx"::("ybh"::("epp"::("fmp"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("sgv")) (("zam"::("axx"::("mid"::("plb"::("whf"::("lot"::(Nil)))))))) = true
=================================================
Progress: 1005


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string5 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("iwx") (P ("wdi") (V ("goo")))) (("hsx"::("bvi"::("ufu"::("bms"::("vbt"::("kzh"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("ekm")) (("nba"::("szi"::("qld"::("orj"::("pxr"::("iug"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("qut") (C (V ("gcp")) (V ("iys")))) (("ubn"::("ulk"::("kxz"::("glx"::("rln"::("jnv"::(Nil)))))))) = true
=================================================
Progress: 1006


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("mqv")) (("frw"::("sdo"::("fkn"::("hwt"::("cte"::("xet"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("htc")) (("wzw"::("vvx"::("kyg"::("qdc"::("vkv"::("unj"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("prx")) (("tkg"::("wkg"::("kcc"::("uef"::("jpk"::("drb"::(Nil)))))))) = true
=================================================
Progress: 1007


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 1008


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:14.)
=================================================
Progress: 1009


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
>>> discriminate(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string2:string), match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1010


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string2:string), match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string2:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:14.)
=================================================
Progress: 1011


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string2:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string2 : string
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 1012


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string2 : string
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string2 : string
Cond1 : match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string2
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (P ("muv") (V ("vrz"))) (V ("xta"))) (("uus"::("jmc"::("xbh"::("pkz"::("gvf"::("bev"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("keo")) (("ayq"::("ssa"::("dyt"::("nff"::("cvy"::("njo"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("pkv")) (("wpw"::("nje"::("cng"::("ptx"::("ues"::("bfn"::(Nil)))))))) = true
=================================================
Progress: 1013


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 1014


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:14.)
=================================================
Progress: 1015


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
>>> discriminate(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string3:string) (string4:string), match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1016


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string3:string) (string4:string), match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:14.)
=================================================
Progress: 1017


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:14.)
=================================================
Progress: 1018


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string3 : string
string4 : string
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 1019


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string3 : string
string4 : string
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string3 : string
string4 : string
Cond1 : match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string3
intro string4
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("itf")) (("tnm"::("idn"::("qjb"::("ldl"::("qoy"::("flk"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("ltt")) (("gtk"::("hsa"::("lgc"::("sls"::("vgh"::("weo"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("qay")) (("kef"::("nja"::("olh"::("soq"::("gjq"::("tjq"::(Nil)))))))) = true
=================================================
Progress: 1020


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 1021


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:14.)
=================================================
Progress: 1022


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
>>> discriminate(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string1:string) (string4:string), match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1023


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string1:string) (string4:string), match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string1:string) (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:14.)
=================================================
Progress: 1024


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string1:string) (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
---------------------------------------
forall (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:14.)
=================================================
Progress: 1025


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
---------------------------------------
forall (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
string4 : string
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 1026


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
string4 : string
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
string4 : string
Cond1 : match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro string4
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("mny") (C (P ("rpu") (V ("fch"))) (V ("fqj")))) (("ovp"::("glq"::("nrv"::("wsp"::("sao"::("gvq"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (P ("cae") (V ("nkk"))) (V ("sna"))) (("ynx"::("ofm"::("upi"::("spv"::("tjm"::("xdb"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("jwg")) (("art"::("aot"::("iqi"::("ult"::("jtq"::("xpx"::(Nil)))))))) = true
=================================================
Progress: 1027


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 1028


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:14.)
=================================================
Progress: 1029


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
>>> discriminate(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string1:string) (string3:string), match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1030


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string1:string) (string3:string), match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string1:string) (string3:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:14.)
=================================================
Progress: 1031


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string1:string) (string3:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
---------------------------------------
forall (string3:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:14.)
=================================================
Progress: 1032


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
---------------------------------------
forall (string3:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
string3 : string
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 1033


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
string3 : string
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string3:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
string3 : string
Cond1 : match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro string3
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ppu")) (("eab"::("mfi"::("zvx"::("vhg"::("rnc"::("aqb"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("zae")) (V ("qne"))) (("olt"::("kwt"::("yam"::("qav"::("tpr"::("jnp"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("xhw")) (V ("wdq"))) (("lzf"::("dxu"::("rbf"::("cfn"::("vbj"::("prr"::(Nil)))))))) = true
=================================================
Progress: 1034


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 1035


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:14.)
=================================================
Progress: 1036


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
>>> discriminate(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1037


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:14.)
=================================================
Progress: 1038


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:14.)
=================================================
Progress: 1039


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
string2 : string
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 1040


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
string2 : string
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
string2 : string
Cond1 : match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro string2
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("kqr")) (("hxm"::("joj"::("eni"::("qgh"::("hgr"::("kaf"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("emk")) (V ("tyk"))) (("ljk"::("bxb"::("iql"::("mst"::("mgs"::("lfj"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("rmr")) (V ("ryt"))) (("gck"::("jjx"::("hwh"::("gui"::("osv"::("zhn"::(Nil)))))))) = true
=================================================
Progress: 1041


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 1042


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:14.)
=================================================
Progress: 1043


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
>>> discriminate(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1044


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:14.)
=================================================
Progress: 1045


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:14.)
=================================================
Progress: 1046


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:14.)
=================================================
Progress: 1047


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string2 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 1048


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string2 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string2 : string
string3 : string
string4 : string
Cond1 : match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string2
intro string3
intro string4
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("zdf")) (("wpr"::("xvx"::("usm"::("llu"::("for"::("qms"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("cmf") (V ("gbd"))) (("xzh"::("mzk"::("gak"::("hrc"::("egh"::("wxn"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("san")) (("gmz"::("tly"::("cgj"::("ulk"::("bts"::("hwt"::(Nil)))))))) = true
=================================================
Progress: 1049


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string1) (string6) then true else mem (string6) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
---------------------------------------
if string_eq (string1) (string6) then true else is_mem_ta1 ((Nil)) (string6) = true

2 goal(s) more...

5 conjecture(s) more...
>>> case string_eq (string1) (string6)(rank : 16.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 1050


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:14.)
=================================================
Progress: 1051


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
Case4 : string_eq (string2) (string6) = false
Case5 : string_eq (string1) (string6) = false
---------------------------------------
false = true

2 goal(s) more...

5 conjecture(s) more...
>>> discriminate(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1052


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string6) (lambda2)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string1(rank:14.)
=================================================
Progress: 1053


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string2(rank:14.)
=================================================
Progress: 1054


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string2(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string3(rank:14.)
=================================================
Progress: 1055


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string3(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro string4(rank:14.)
=================================================
Progress: 1056


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro string4(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 1057


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
Inductive1 : lambda1 = P (string6) (lambda2)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (ck (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro string2
intro string3
intro string4
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("nvm")) (P ("ftj") (V ("fgw")))) (("mxy"::("ryp"::("qsi"::("pam"::("hpl"::("uzg"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("zji")) (("jay"::("xij"::("vle"::("ick"::("ynq"::("hbm"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("rsp")) (("koo"::("eed"::("ajy"::("xqy"::("dgg"::("xih"::(Nil)))))))) = true
=================================================
Progress: 1058


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), match (ck (V (string2)) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1059


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), match (ck (V (string2)) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string2)) ((string1::(Nil))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 1060


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1061


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string1) (string2)(rank:10.)
=================================================
Progress: 1062


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : match (if match (if string_eq (string1) (string2) then true else mem (string2) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1063


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : true = true
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : false = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 1064


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Cond1 : false = true
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string1:string), match (ck (P (string2) (lambda2)) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = true

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1065


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string1:string), match (ck (P (string2) (lambda2)) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string2) (lambda2)) ((string1::(Nil))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:8.)
=================================================
Progress: 1066


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string1:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
---------------------------------------
match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1067


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
---------------------------------------
match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string1::(Nil))) = true
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string1:string), match (ck (lambda2) ((string1::(Nil))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string1::(Nil))) = true
Inductive1 : lambda1 = P (string2) (lambda2)
string1 : string
Cond1 : match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ewy")) (("ecw"::("cal"::(Nil)))) = true
Prop: sub_check_ta1 (C (P ("qvj") (V ("rvs"))) (C (C (V ("byi")) (P ("khy") (C (P ("gbc") (V ("pxk"))) (V ("ckv"))))) (V ("dii")))) (("irs"::("dzd"::(Nil)))) = true
Prop: sub_check_ta1 (V ("nam")) (("hws"::("sbw"::(Nil)))) = true
=================================================
Progress: 1068


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string) (string2:string), match (ck (V (string3)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1069


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string) (string2:string), match (ck (V (string3)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string) (string2:string), match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:9.)
=================================================
Progress: 1070


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string1:string) (string2:string), match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
forall (string2:string), match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string2(rank:9.)
=================================================
Progress: 1071


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
---------------------------------------
forall (string2:string), match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
---------------------------------------
match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1072


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
---------------------------------------
match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:10.)
=================================================
Progress: 1073


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1074


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string1) (string3) then true else mem (string3) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string3)(rank:10.)
=================================================
Progress: 1075


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string1) (string3) then true else mem (string3) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1076


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 1077


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string1 : string
string2 : string
Cond1 : false = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), match (ck (P (string3) (lambda2)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1078


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), match (ck (P (string3) (lambda2)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:8.)
=================================================
Progress: 1079


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string2(rank:8.)
=================================================
Progress: 1080


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
string2 : string
---------------------------------------
match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1081


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
string2 : string
---------------------------------------
match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string1:string) (string2:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string1 : string
string2 : string
Cond1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
intro string2
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("mmj") (V ("jhk"))) (("ova"::("mun"::("php"::(Nil))))) = true
Prop: sub_check_ta1 (V ("pgs")) (("fpx"::("jko"::("hem"::(Nil))))) = true
Prop: sub_check_ta1 (V ("zoq")) (("jne"::("tdd"::("jwa"::(Nil))))) = true
=================================================
Progress: 1082


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string2:string), match (ck (V (string3)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1083


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string2:string), match (ck (V (string3)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string3)) ((string2::(string1::(Nil)))) = true

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string2:string), match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string2(rank:9.)
=================================================
Progress: 1084


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
---------------------------------------
forall (string2:string), match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
---------------------------------------
match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1085


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
---------------------------------------
match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string2) (string3)(rank:10.)
=================================================
Progress: 1086


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : match (if match (if string_eq (string2) (string3) then true else mem (string3) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string2) (string3) then true else is_mem_ta1 ((string1::(Nil))) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string2) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1087


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : match (if match (if string_eq (string1) (string3) then true else mem (string3) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string1) (string3)(rank:10.)
=================================================
Progress: 1088


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : match (if match (if string_eq (string1) (string3) then true else mem (string3) ((Nil)), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string2) (string3) = false
---------------------------------------
if string_eq (string1) (string3) then true else is_mem_ta1 ((Nil)) (string3) = true

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string3)(rank : 10.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1089


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : true = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : false = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 1090


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
Base1 : lambda1 = V (string3)
string2 : string
Cond1 : false = true
Case1 : string_eq (string2) (string3) = false
Case2 : string_eq (string1) (string3) = false
---------------------------------------
false = true

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string2:string), match (ck (P (string3) (lambda2)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1091


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string2:string), match (ck (P (string3) (lambda2)) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (P (string3) (lambda2)) ((string2::(string1::(Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string2(rank:8.)
=================================================
Progress: 1092


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
---------------------------------------
forall (string2:string), match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> intro string2(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string2 : string
---------------------------------------
match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1093


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string2 : string
---------------------------------------
match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string2::(string1::(Nil)))) = true
string1 : string
lambda1 : lambda
string3 : string
lambda2 : lambda
IH1 : forall (string2:string), match (ck (lambda2) ((string2::(string1::(Nil)))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = true
Inductive1 : lambda1 = P (string3) (lambda2)
string2 : string
Cond1 : match (ck (lambda2) ((string3::(string2::(string1::(Nil))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda2) ((string3::(string2::(string1::(Nil))))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string2
intro Cond1
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("yim")) (("sfr"::("tne"::("xqo"::(Nil))))) = true
Prop: sub_check_ta1 (V ("cpc")) (("qtl"::("sdu"::("rvo"::(Nil))))) = true
Prop: sub_check_ta1 (P ("ijb") (P ("wsa") (V ("aaz")))) (("wjg"::("jhf"::("dwb"::(Nil))))) = true
=================================================
Progress: 1094


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1095


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1096


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string3:string) (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1097


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1098


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string3:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1099


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string2:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1100


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1101


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string2:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1102


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1103


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string1)

3 goal(s) more...

5 conjecture(s) more...
>>> induction string_list1(rank : 17.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
string_list1 : string list
Base2 : string_list1 = (Nil)
---------------------------------------
true = is_mem_ta1 ((Nil)) (string1)

4 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1104


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

---------------------------------------
forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (V (string2)) ((string1::string_list1)) = sub_check_ta1 (V (string2)) (string_list1)

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1105


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1106


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string2:string) (string3:string) (string4:string) (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1107


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string3:string) (string4:string) (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1108


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string4:string) (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1109


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string3:string) (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1110


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string3:string) (string4:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1111


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string2:string) (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1112


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string2:string) (string4:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1113


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1114


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string4:string) (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1115


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string2:string) (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1116


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string2:string) (string4:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1117


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string2:string) (string3:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1118


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1119


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string3:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1120


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1121


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

6 conjecture(s) more...
>>> induction lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1122


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1123


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 6
intro string2(rank:17.)
intro string4(rank:17.)
intro string5(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
intro string3(rank:17.)
=================================================
Progress: 1124


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 5
intro string3(rank:17.)
intro string5(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
intro string4(rank:17.)
=================================================
Progress: 1125


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 4
intro string4(rank:17.)
intro string5(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1126


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro string5(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1127


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1128


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1129


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1130


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1131


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string3:string) (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1132


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1133


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string3:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string3:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1134


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string2:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string2:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1135


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string4:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1136


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string2:string), match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string2:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1137


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
match (ck (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string6)) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1138


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
string_list1 : string list
Base2 : string_list1 = (Nil)
---------------------------------------
true = is_mem_ta1 ((Nil)) (string1)

4 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
string_list1 : string list
Base2 : string_list1 = (Nil)
---------------------------------------
true = false

4 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 1139


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (V (string2)) ((string1::string_list1)) = sub_check_ta1 (V (string2)) (string_list1)

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1140


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1141


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string2:string) (string3:string) (string4:string) (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string2:string) (string3:string) (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1142


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string3:string) (string4:string) (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string3:string) (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1143


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string4:string) (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1144


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string3:string) (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string3:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1145


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string3:string) (string4:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string3:string) (string4:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1146


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string2:string) (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string2:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1147


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string2:string) (string4:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string2:string) (string4:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1148


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1149


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string4:string) (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1150


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string2:string) (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string2:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1151


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string2:string) (string4:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string2:string) (string4:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1152


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string2:string) (string3:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string2:string) (string3:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1153


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string5:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1154


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string3:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string3:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1155


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string), match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1156


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
match (ck (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (V (string7)) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1157


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1158


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 5
intro string3(rank:17.)
intro string5(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
intro string4(rank:17.)
=================================================
Progress: 1159


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 4
intro string4(rank:17.)
intro string5(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1160


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro string5(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1161


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1162


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1163


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 5
intro lambda1(rank:17.)
intro string5(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
intro string4(rank:17.)
=================================================
Progress: 1164


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:17.)
intro string5(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1165


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1166


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1167


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:17.)
intro string5(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1168


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1169


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1170


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1171


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1172


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1173


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1174


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1175


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1176


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1177


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string3:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
---------------------------------------
forall (string3:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1178


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string1:string) (string2:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
---------------------------------------
forall (string2:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1179


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1180


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
forall (string2:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1181


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:18.)
=================================================
Progress: 1182


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
forall (string_list1:string list), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string1) (string2)(rank:18.)
=================================================
Progress: 1183


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1184


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string2:string) (string3:string) (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
---------------------------------------
forall (string3:string) (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1185


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string3:string) (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
---------------------------------------
forall (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1186


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
---------------------------------------
forall (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1187


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string3:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
---------------------------------------
forall (string3:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1188


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string3:string) (string4:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
---------------------------------------
forall (string3:string) (string4:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1189


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string2:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
---------------------------------------
forall (string2:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1190


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string2:string) (string4:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
---------------------------------------
forall (string2:string) (string4:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1191


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string) (string2:string) (string3:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1192


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1193


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string2:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1194


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string2:string) (string4:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1195


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string2:string) (string3:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
---------------------------------------
forall (string3:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1196


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1197


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string3:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1198


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
forall (string1:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1199


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1200


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1201


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 4
intro string4(rank:17.)
intro string5(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1202


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro string5(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1203


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1204


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1205


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 4
intro lambda1(rank:17.)
intro string5(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1206


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1207


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1208


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1209


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1210


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1211


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1212


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro string5(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1213


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1214


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1215


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1216


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1217


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1218


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1219


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1220


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1221


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1222


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1223


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1224


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1225


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1226


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1227


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1228


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1229


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1230


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1231


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1232


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1233


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1234


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1235


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
---------------------------------------
forall (string3:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1236


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
---------------------------------------
forall (string2:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1237


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:18.)
=================================================
Progress: 1238


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:18.)
=================================================
Progress: 1239


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1240


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
---------------------------------------
forall (string3:string) (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
---------------------------------------
forall (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1241


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
---------------------------------------
forall (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1242


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
---------------------------------------
forall (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1243


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
---------------------------------------
forall (string3:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1244


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
---------------------------------------
forall (string3:string) (string4:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1245


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
---------------------------------------
forall (string2:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1246


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
---------------------------------------
forall (string2:string) (string4:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1247


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
---------------------------------------
forall (string2:string) (string3:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1248


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1249


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1250


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1251


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
---------------------------------------
forall (string3:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1252


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1253


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1254


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1255


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1256


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro string5(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1257


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1258


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1259


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1260


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1261


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1262


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1263


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1264


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1265


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1266


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1267


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1268


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1269


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1270


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1271


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1272


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1273


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro lambda1(rank:17.)
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1274


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1275


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1276


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1277


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1278


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1279


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1280


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1281


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1282


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1283


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1284


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1285


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1286


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1287


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1288


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1289


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:18.)
=================================================
Progress: 1290


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:18.)
=================================================
Progress: 1291


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:18.)
=================================================
Progress: 1292


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:18.)
=================================================
Progress: 1293


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1294


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
---------------------------------------
forall (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1295


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1296


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1297


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1298


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1299


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1300


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1301


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
---------------------------------------
forall (string3:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1302


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1303


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1304


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string4 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1305


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1306


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1307


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro string6(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1308


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (lambda1:lambda) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1309


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1310


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1311


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1312


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1313


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1314


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1315


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string2:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:17.)
induction lambda1(rank:27.)
=================================================
Progress: 1316


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1317


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1318


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1319


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1320


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1321


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1322


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1323


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1324


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1325


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1326


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1327


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1328


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1329


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1330


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1331


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string1:string) (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string1(rank:17.)
=================================================
Progress: 1332


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1333


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1334


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1335


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1336


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string) (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1337


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1338


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:18.)
=================================================
Progress: 1339


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string) (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1340


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1341


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1342


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1343


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1344


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1345


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1346


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string4 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1347


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1348


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string6(rank:17.)
=================================================
Progress: 1349


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (lambda1:lambda) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:19.)
=================================================
Progress: 1350


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1351


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string3 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string6(rank:17.)
=================================================
Progress: 1352


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string3 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1353


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1354


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string6(rank:17.)
=================================================
Progress: 1355


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
forall (lambda1:lambda) (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro lambda1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1356


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
string4 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string6(rank:17.)
=================================================
Progress: 1357


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
string2 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1358


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
string3 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string6(rank:17.)
=================================================
Progress: 1359


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1360


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1361


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string6(rank:17.)
=================================================
Progress: 1362


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string6(rank:17.)
=================================================
Progress: 1363


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1364


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1365


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string6(rank:17.)
=================================================
Progress: 1366


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string3(rank:17.)
=================================================
Progress: 1367


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string6(rank:17.)
=================================================
Progress: 1368


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1369


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string6(rank:17.)
=================================================
Progress: 1370


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string1:string) (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string2(rank:17.)
=================================================
Progress: 1371


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string4:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string6(rank:17.)
=================================================
Progress: 1372


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string4:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1373


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string6(rank:17.)
=================================================
Progress: 1374


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string5(rank:17.)
=================================================
Progress: 1375


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
forall (string3:string) (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro string4(rank:17.)
=================================================
Progress: 1376


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string5) (string6)(rank:18.)
=================================================
Progress: 1377


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
forall (string5:string), match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1378


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1379


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1380


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1381


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string3 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string3 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1382


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string3 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string3 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1383


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1384


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1385


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1386


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
string4 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
string4 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1387


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
string2 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
string2 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1388


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
string3 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
string3 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1389


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1390


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1391


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1392


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1393


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1394


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1395


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1396


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string3:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string3(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1397


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1398


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1399


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
string5 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1400


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
---------------------------------------
forall (string2:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string2(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1401


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1402


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1403


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string6(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1404


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string5:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string5(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1405


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
---------------------------------------
forall (string4:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro string4(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1406


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
case string_eq (string6) (string7)(rank:18.)
=================================================
Progress: 1407


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("qne")) (("iva"::("ciy"::("veh"::("qin"::("ryw"::("jtg"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("qgm")) (("anu"::("tie"::("tol"::("zns"::("hya"::("ovg"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("bps")) (("tak"::("bow"::("gqk"::("xmt"::("fnh"::("app"::(Nil)))))))) = true
=================================================
Progress: 1408


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string4 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ctw")) (("hvq"::("lgr"::("ntz"::("xah"::("mwe"::("dgp"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("tow")) (("iou"::("pgi"::("lkp"::("kfp"::("aei"::("gnb"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("ybx")) (("haa"::("qph"::("zng"::("htx"::("ukg"::("xol"::(Nil)))))))) = true
=================================================
Progress: 1409


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string3 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string3 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("qhj")) (("oxs"::("lop"::("qzs"::("umq"::("soi"::("mgk"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("hks")) (C (V ("anm")) (C (C (V ("yvd")) (V ("avt"))) (V ("nbq"))))) (("qbf"::("unu"::("phd"::("otp"::("aof"::("liv"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("yfi")) (("ljs"::("fjw"::("wqn"::("eob"::("cqk"::("zbb"::(Nil)))))))) = true
=================================================
Progress: 1410


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string3 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string3 : string
string5 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("iod")) (("nwj"::("eeb"::("rmr"::("ujd"::("yog"::("ixw"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("gpk") (P ("mmh") (V ("iac")))) (("ssx"::("qtk"::("svn"::("saq"::("rzs"::("ypr"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("anx")) (("vzn"::("mva"::("zec"::("rjh"::("usz"::("svy"::(Nil)))))))) = true
=================================================
Progress: 1411


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string3 : string
string4 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("zmr")) (("bgo"::("laf"::("lkb"::("qry"::("bkz"::("lmh"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("xfi")) (("ivc"::("qii"::("pzb"::("qqq"::("etd"::("ujk"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("rrb")) (("xna"::("gib"::("wlg"::("vly"::("idz"::("dlb"::(Nil)))))))) = true
=================================================
Progress: 1412


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
lambda1 : lambda
string2 : string
string5 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("iim")) (("kld"::("zxz"::("fbt"::("yyh"::("hiw"::("hhl"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("geu") (P ("fad") (V ("fyx")))) (("hfm"::("qam"::("skp"::("pos"::("swo"::("hce"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("ftf")) (C (P ("dpd") (C (V ("ore")) (V ("hzb")))) (V ("zpt")))) (("lic"::("qjp"::("kqj"::("ehm"::("nib"::("qir"::(Nil)))))))) = true
=================================================
Progress: 1413


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("ncr")) (V ("ayn"))) (("zsj"::("rmt"::("ksh"::("dqx"::("ozi"::("zgi"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("nlu")) (("dja"::("vyh"::("fxs"::("qmf"::("jfq"::("qrp"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("eij")) (("vrs"::("ugp"::("ehx"::("bco"::("ghv"::("jrr"::(Nil)))))))) = true
=================================================
Progress: 1414


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
string4 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
lambda1 : lambda
string2 : string
string4 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("pnd")) (("ohl"::("uve"::("wvl"::("wiq"::("ijh"::("pgl"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("jwv") (V ("rwq"))) (("rue"::("lqr"::("uch"::("srv"::("vvi"::("cqh"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("tct")) (("rtn"::("ikt"::("ppl"::("idy"::("oka"::("wjo"::(Nil)))))))) = true
=================================================
Progress: 1415


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
string2 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string6 : string
lambda1 : lambda
string2 : string
string4 : string
string5 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("kxi")) (("nwq"::("qjl"::("axw"::("jtu"::("mpv"::("mwx"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("rdg")) (("nhh"::("tph"::("ytq"::("cor"::("qdn"::("lxo"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("vqt") (V ("gqn"))) (("ybg"::("wtn"::("nec"::("tfj"::("bof"::("izy"::(Nil)))))))) = true
=================================================
Progress: 1416


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
string3 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
lambda1 : lambda
string2 : string
string3 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("joq")) (V ("rnz"))) (("kfh"::("omw"::("xjq"::("quj"::("xsd"::("rxe"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("ual")) (("tri"::("uyd"::("lao"::("ggy"::("tak"::("luq"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("ozh") (V ("fpa"))) (("wph"::("uov"::("ywu"::("aet"::("dnm"::("htq"::(Nil)))))))) = true
=================================================
Progress: 1417


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
string5 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("cdz")) (("mrt"::("esu"::("dyn"::("txi"::("itx"::("tmu"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("ywd") (V ("xhr"))) (("gix"::("yzj"::("trp"::("ezg"::("rci"::("svp"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("tkx")) (("ovb"::("lvc"::("ati"::("zcz"::("nfw"::("tdd"::(Nil)))))))) = true
=================================================
Progress: 1418


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string5 : string
string6 : string
lambda1 : lambda
string2 : string
string3 : string
string4 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("zid")) (("kkb"::("ree"::("qnb"::("nco"::("bxw"::("rpj"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("wwx")) (("mnh"::("tzy"::("vrc"::("muv"::("moz"::("jhy"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (P ("rmu") (P ("rsg") (V ("rvg")))) (V ("jqc"))) (("pds"::("bwi"::("zkw"::("kzv"::("hnd"::("dlc"::(Nil)))))))) = true
=================================================
Progress: 1419


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
lambda1 : lambda
string1 : string
string4 : string
string5 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("zyc")) (P ("gvh") (V ("eqx")))) (("jrz"::("gej"::("vqs"::("ytt"::("dep"::("xzq"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("inz")) (P ("gpl") (C (V ("nti")) (V ("evk"))))) (("uhl"::("ajp"::("lfn"::("dcg"::("lhq"::("fiv"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("bfd") (C (V ("ynf")) (V ("pun")))) (("tgq"::("lzv"::("nov"::("zxw"::("xmm"::("cwd"::(Nil)))))))) = true
=================================================
Progress: 1420


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("aox")) (("ekd"::("vco"::("qla"::("twk"::("fqj"::("pab"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("ogj")) (("zlx"::("owv"::("yqb"::("nua"::("vbo"::("ldl"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("mlx") (V ("tvq"))) (("gne"::("dbe"::("zwd"::("gfr"::("pqr"::("xmh"::(Nil)))))))) = true
=================================================
Progress: 1421


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string5 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("znd")) (("yqn"::("ubv"::("hbu"::("fjm"::("gzt"::("vcs"::(Nil)))))))) = true
Prop: sub_check_ta1 (P ("bxf") (V ("fwb"))) (("iuk"::("seu"::("qkg"::("ioz"::("foz"::("pdr"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("bzw")) (("vss"::("fhh"::("upg"::("mwn"::("uqy"::("mpk"::(Nil)))))))) = true
=================================================
Progress: 1422


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string4 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("tmn")) (("guc"::("vzm"::("gxt"::("cxi"::("ofd"::("bzn"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("uoo")) (("axa"::("pwy"::("sya"::("lbn"::("qst"::("uvm"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("dkh")) (("lnc"::("yon"::("qjb"::("zvi"::("ypi"::("ijh"::(Nil)))))))) = true
=================================================
Progress: 1423


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
lambda1 : lambda
string1 : string
string3 : string
string5 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ywk")) (("bju"::("hit"::("njw"::("hjh"::("rft"::("piu"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("zzw")) (V ("okg"))) (("epb"::("cbk"::("wig"::("txl"::("auv"::("ilo"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("coj")) (("xhg"::("gmq"::("dzw"::("gfz"::("jqx"::("kor"::(Nil)))))))) = true
=================================================
Progress: 1424


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (P ("mrj") (V ("mmn"))) (("hlt"::("lwl"::("zpg"::("kyc"::("wnn"::("erv"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("ggt")) (("ssl"::("fce"::("zqf"::("ucw"::("ldh"::("jrg"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("hia")) (V ("zwx"))) (("unu"::("ysm"::("ulx"::("grp"::("svr"::("gcb"::(Nil)))))))) = true
=================================================
Progress: 1425


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("kox")) (("keg"::("plp"::("wgj"::("ftb"::("sdq"::("rft"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("mlq")) (("fgh"::("stg"::("tav"::("ida"::("icg"::("okb"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("goy")) (("jqs"::("oas"::("sxt"::("izn"::("acc"::("cmz"::(Nil)))))))) = true
=================================================
Progress: 1426


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string6 : string
lambda1 : lambda
string1 : string
string3 : string
string4 : string
string5 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("dpk")) (("akr"::("cti"::("ljk"::("wrw"::("cpj"::("ksx"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("btx")) (("gyr"::("jcj"::("eme"::("two"::("sao"::("eom"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("pzj")) (("zxt"::("ewa"::("ewk"::("ejy"::("rif"::("ixj"::(Nil)))))))) = true
=================================================
Progress: 1427


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
string5 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
lambda1 : lambda
string1 : string
string2 : string
string5 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("may")) (("lnq"::("ynm"::("qha"::("ujm"::("kfb"::("ucm"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("lqi")) (("ugl"::("etx"::("wwv"::("gbo"::("wry"::("qsr"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("yxb")) (("auo"::("qgk"::("gmj"::("tjr"::("lft"::("mog"::(Nil)))))))) = true
=================================================
Progress: 1428


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("irz")) (C (V ("vtt")) (V ("nbo")))) (("upu"::("nbo"::("bqr"::("tie"::("hit"::("tfn"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("phu")) (("png"::("ciz"::("lrp"::("alr"::("bck"::("fcb"::(Nil)))))))) = true
Prop: sub_check_ta1 (C (V ("tok")) (V ("kfe"))) (("hoj"::("aza"::("eah"::("nuc"::("wqk"::("osi"::(Nil)))))))) = true
=================================================
Progress: 1429


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("onl")) (("ail"::("rtg"::("jfr"::("nqh"::("shv"::("ili"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("bdy")) (("xpj"::("huq"::("huz"::("ilg"::("pyr"::("tsx"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("mnm")) (("xnp"::("qel"::("nee"::("ade"::("guh"::("yzs"::(Nil)))))))) = true
=================================================
Progress: 1430


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string4 : string
string5 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("rmb")) (("ubm"::("xax"::("bkv"::("ipe"::("scw"::("mvw"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("alu")) (("dki"::("uvf"::("ihv"::("fgo"::("ahd"::("qnh"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("mgh")) (("kct"::("dun"::("iyx"::("zxa"::("ceq"::("dpz"::(Nil)))))))) = true
=================================================
Progress: 1431


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string6 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string6 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("nbi")) (("hja"::("xbz"::("pxn"::("zwi"::("xmb"::("yuk"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("blf")) (("twy"::("yjy"::("tbd"::("sax"::("vyo"::("efu"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("woy")) (("srt"::("ukn"::("lmo"::("yhc"::("omo"::("dsd"::(Nil)))))))) = true
=================================================
Progress: 1432


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string5 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string5 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (V ("ccg")) (("obq"::("mrt"::("ifi"::("som"::("rzs"::("mjy"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("jlg")) (("cey"::("dpm"::("jli"::("azv"::("zaf"::("yjr"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("wma")) (("gca"::("pbc"::("igc"::("het"::("ele"::("isk"::(Nil)))))))) = true
=================================================
Progress: 1433


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
---------------------------------------
match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string5 : string
string6 : string
lambda1 : lambda
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: sub_check_ta1 (C (V ("mgj")) (C (V ("iwj")) (P ("kea") (V ("kcj"))))) (("kka"::("dvb"::("vza"::("fgr"::("ugx"::("dkk"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("jcj")) (("ibi"::("dsa"::("bcx"::("gem"::("vmz"::("xlv"::(Nil)))))))) = true
Prop: sub_check_ta1 (V ("lzv")) (("iux"::("nsq"::("ruj"::("dwx"::("vzr"::("ycj"::(Nil)))))))) = true
=================================================
Progress: 1434


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1435


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:18.)
=================================================
Progress: 1436


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
forall (string_list1:string list), if string_eq (string1) (string2) then true else is_mem_ta1 (string_list1) (string2) = is_mem_ta1 (string_list1) (string2)

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 18.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string_eq (string1) (string2) = true
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:18.)
=================================================
Progress: 1437


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1438


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1439


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1440


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:18.)
=================================================
Progress: 1441


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1442


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:18.)
=================================================
Progress: 1443


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1444


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1445


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1446


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1447


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1448


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1449


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1450


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:18.)
=================================================
Progress: 1451


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1452


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:18.)
=================================================
Progress: 1453


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1454


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:18.)
=================================================
Progress: 1455


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1456


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:18.)
=================================================
Progress: 1457


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1458


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1459


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1460


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1461


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string4 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1462


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1463


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1464


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1465


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1466


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:18.)
=================================================
Progress: 1467


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1468


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1469


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1470


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1471


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1472


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1473


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1474


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1475


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1476


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1477


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string4 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1478


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1479


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1480


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1481


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string6) then true else mem (string6) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string5) (string6) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1482


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string6)(rank:18.)
=================================================
Progress: 1483


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1484


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1485


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string6) (string7) then true else mem (string7) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
---------------------------------------
if string_eq (string6) (string7) then true else is_mem_ta1 ((string5::(string4::(string3::(string2::(string1::(Nil))))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string6) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1486


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string5) (string7)(rank:18.)
=================================================
Progress: 1487


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1488


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:18.)
=================================================
Progress: 1489


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string_eq (string1) (string2) = true
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

6 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 18.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:18.)
induction string_list1(rank:27.)
=================================================
Progress: 1490


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1491


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1492


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1493


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:18.)
=================================================
Progress: 1494


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1495


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:18.)
=================================================
Progress: 1496


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1497


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string5 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1498


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1499


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1500


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1501


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1502


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1503


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:18.)
=================================================
Progress: 1504


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1505


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:18.)
=================================================
Progress: 1506


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1507


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:18.)
=================================================
Progress: 1508


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1509


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:18.)
=================================================
Progress: 1510


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1511


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1512


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1513


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string5 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1514


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1515


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1516


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1517


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1518


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1519


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:18.)
=================================================
Progress: 1520


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1521


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1522


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1523


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1524


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1525


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string5 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1526


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1527


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1528


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1529


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string5 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1530


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string4 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1531


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1532


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1533


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1534


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string6) then true else mem (string6) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
---------------------------------------
if string_eq (string4) (string6) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1535


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string6)(rank:18.)
=================================================
Progress: 1536


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1537


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1538


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string5) (string7) then true else mem (string7) ((string4::(string3::(string2::(string1::(Nil)))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
---------------------------------------
if string_eq (string5) (string7) then true else is_mem_ta1 ((string4::(string3::(string2::(string1::(Nil)))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string5) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1539


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string4) (string7)(rank:18.)
=================================================
Progress: 1540


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1541


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:18.)
=================================================
Progress: 1542


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string2)

3 goal(s) more...

6 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 18.)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((string1::string_list1)) = sub_check_ta1 (lambda1) (string_list1)
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
forall (string_list1:string list), true = is_mem_ta1 (string_list1) (string1)

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction string_list1(rank:19.)
=================================================
Progress: 1543


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1544


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
Cond1 : match (if match (if string_eq (string3) (string7) then true else mem (string7) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = false
---------------------------------------
if string_eq (string3) (string7) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string7)(rank:18.)
=================================================
Progress: 1545


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1546


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string4 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:18.)
=================================================
Progress: 1547


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1548


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:18.)
=================================================
Progress: 1549


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string5 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1550


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string5 : string
Cond1 : match (if match (if string_eq (string3) (string7) then true else mem (string7) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = false
---------------------------------------
if string_eq (string3) (string7) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string7)(rank:18.)
=================================================
Progress: 1551


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1552


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
Cond1 : match (if match (if string_eq (string3) (string7) then true else mem (string7) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = false
---------------------------------------
if string_eq (string3) (string7) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string7)(rank:18.)
=================================================
Progress: 1553


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1554


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
Cond1 : match (if match (if string_eq (string3) (string7) then true else mem (string7) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = false
---------------------------------------
if string_eq (string3) (string7) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string7)(rank:18.)
=================================================
Progress: 1555


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1556


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string2 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:18.)
=================================================
Progress: 1557


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1558


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string3 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string4 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:18.)
=================================================
Progress: 1559


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1560


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string2 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string3 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:18.)
=================================================
Progress: 1561


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1562


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string3 : string
string4 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string1 : string
string2 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:18.)
=================================================
Progress: 1563


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1564


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string3) (string7) then true else mem (string7) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = false
---------------------------------------
if string_eq (string3) (string7) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string7)(rank:18.)
=================================================
Progress: 1565


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string5 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1566


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string5 : string
Cond1 : match (if match (if string_eq (string3) (string7) then true else mem (string7) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = false
---------------------------------------
if string_eq (string3) (string7) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string7)(rank:18.)
=================================================
Progress: 1567


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1568


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string3 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string7) then true else mem (string7) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = false
---------------------------------------
if string_eq (string3) (string7) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string7)(rank:18.)
=================================================
Progress: 1569


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1570


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string4 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string2 : string
string3 : string
Cond1 : match (if match (if string_eq (string3) (string7) then true else mem (string7) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = false
---------------------------------------
if string_eq (string3) (string7) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string7)(rank:18.)
=================================================
Progress: 1571


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string6) then true else mem (string6) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
---------------------------------------
if string_eq (string3) (string6) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string3) (string6)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1572


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string), match (ck (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string5::(string4::(string3::(string2::(string1::(Nil))))))) = true
string1 : string
string5 : string
lambda1 : lambda
string6 : string
Base1 : lambda1 = V (string6)
string2 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string2) (string6) then true else mem (string6) ((string1::(Nil))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string5) (string6) = false
Case2 : string_eq (string4) (string6) = false
Case3 : string_eq (string3) (string6) = false
---------------------------------------
if string_eq (string2) (string6) then true else is_mem_ta1 ((string1::(Nil))) (string6) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string2) (string6)(rank:18.)
=================================================
Progress: 1573


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1574


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string1 : string
string2 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string3 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string3) (string7) then true else mem (string7) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = false
---------------------------------------
if string_eq (string3) (string7) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string7)(rank:18.)
=================================================
Progress: 1575


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1576


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string3 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string4 : string
string5 : string
Cond1 : match (if match (if string_eq (string3) (string7) then true else mem (string7) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = false
---------------------------------------
if string_eq (string3) (string7) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string7)(rank:18.)
=================================================
Progress: 1577


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string5 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1578


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string5 : string
Cond1 : match (if match (if string_eq (string3) (string7) then true else mem (string7) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = false
---------------------------------------
if string_eq (string3) (string7) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string7)(rank:18.)
=================================================
Progress: 1579


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1580


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string4 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string2 : string
string5 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string3 : string
string4 : string
Cond1 : match (if match (if string_eq (string3) (string7) then true else mem (string7) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = false
---------------------------------------
if string_eq (string3) (string7) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case string_eq (string3) (string7)(rank:18.)
=================================================
Progress: 1581


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string5 : string
Cond1 : match (if match (if string_eq (string4) (string7) then true else mem (string7) ((string3::(string2::(string1::(Nil))))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
---------------------------------------
if string_eq (string4) (string7) then true else is_mem_ta1 ((string3::(string2::(string1::(Nil))))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
>>> case string_eq (string4) (string7)(rank : 18.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17.)
=================================================
Progress: 1582


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string5 : string
Cond1 : true = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = true
---------------------------------------
true = true

3 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 17.)


1st goal of : forall (lambda1:lambda) (string1:string) (string2:string) (string3:string) (string4:string) (string5:string) (string6:string), match (ck (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))), 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true -> sub_check_ta1 (lambda1) ((string6::(string5::(string4::(string3::(string2::(string1::(Nil)))))))) = true
string3 : string
string4 : string
string6 : string
lambda1 : lambda
string7 : string
Base1 : lambda1 = V (string7)
string1 : string
string2 : string
string5 : string
Cond1 : match (if match (if string_eq (string3) (string7) then true else mem (string7) ((string2::(string1::(Nil)))), true) with
| (true, true) -> true
| (false, false) -> true
| (_, _) -> false then 0 else 0, 0) with
| (Zero, Zero) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero, Pos Z) -> true
| (Zero, Neg Z) -> true
| (Pos Z, Zero) -> true
| (Neg Z, Zero) -> true
| (_, _) -> false = true
Case1 : string_eq (string6) (string7) = false
Case2 : string_eq (string5) (string7) = false
Case3 : string_eq (string4) (string7) = false
---------------------------------------
if string_eq (string3) (string7) then true else is_mem_ta1 ((string2::(string1::(Nil)))) (string7) = true

2 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
