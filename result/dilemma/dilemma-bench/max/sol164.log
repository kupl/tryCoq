Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:int list), max_ta1 (lst) = max (lst)(rank : 0)


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)

---------------------------------------
forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:4)
=================================================
Progress: 2


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)

---------------------------------------
forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction int_list1(rank : 4)


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
max_ta1 ((Nil)) = max ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 3


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
max_ta1 ((Nil)) = max ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : max_ta1 (int_list2) = max (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
max_ta1 ((int1::int_list2)) = max ((int1::int_list2))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 4


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : max_ta1 (int_list2) = max (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
max_ta1 ((int1::int_list2)) = max ((int1::int_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : max_ta1 (int_list2) = max (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
max_ta1 ((int1::int_list2)) = if match (fold (f) (int_list2) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (f) (int_list2) (int1)) then int1 else fold (f) (int_list2) (int1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
New Env

;;
Lemma List
forall (f:any -> any -> any) (int1:int) (int_list2:int list), max_ta1 ((int1::int_list2)) = if match (fold (f) (int_list2) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (f) (int_list2) (int1)) then int1 else fold (f) (int_list2) (int1)
End of Lemma List


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : max_ta1 (int_list2) = max (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
max_ta1 ((int1::int_list2)) = if match (fold (f) (int_list2) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (f) (int_list2) (int1)) then int1 else fold (f) (int_list2) (int1)

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 5


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : max_ta1 (int_list2) = max (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
max_ta1 ((int1::int_list2)) = if match (fold (f) (int_list2) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (f) (int_list2) (int1)) then int1 else fold (f) (int_list2) (int1)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (f:any -> any -> any) (int1:int) (int_list2:int list), max_ta1 ((int1::int_list2)) = if match (fold (f) (int_list2) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (f) (int_list2) (int1)) then int1 else fold (f) (int_list2) (int1)(rank : 0)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)

---------------------------------------
forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any->any->any1(rank:5)
=================================================
Progress: 6


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)

---------------------------------------
forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro any->any->any1(rank : 5)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
---------------------------------------
forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro int1(rank:5)
=================================================
Progress: 7


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
---------------------------------------
forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro int1(rank : 5)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
---------------------------------------
forall (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:6)
=================================================
Progress: 8


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
---------------------------------------
forall (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction int_list1(rank : 6)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
max_ta1 ((int1::(Nil))) = if match (fold (any->any->any1) ((Nil)) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((Nil)) (int1)) then int1 else fold (any->any->any1) ((Nil)) (int1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 9


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
max_ta1 ((int1::(Nil))) = if match (fold (any->any->any1) ((Nil)) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((Nil)) (int1)) then int1 else fold (any->any->any1) ((Nil)) (int1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
int1 = if match (int1, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((Nil)) (int1)) then int1 else fold (any->any->any1) ((Nil)) (int1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (int1, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 10


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
int1 = if match (int1, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((Nil)) (int1)) then int1 else fold (any->any->any1) ((Nil)) (int1)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (int1, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : match (int1, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 11


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : match (int1, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int1

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : match (int1, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = false
---------------------------------------
int1 = if match (int1, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((Nil)) (int1)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case match (int1, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false(rank:7)
=================================================
Progress: 12


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : match (int1, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = false
---------------------------------------
int1 = if match (int1, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((Nil)) (int1)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (int1, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false(rank : 7)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : match (int1, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = false
Case2 : match (int1, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false = true
---------------------------------------
int1 = int1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 13


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : match (int1, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = false
Case2 : match (int1, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false = true
---------------------------------------
int1 = int1

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : match (int1, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = false
Case2 : match (int1, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false = false
---------------------------------------
int1 = int1

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 14


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
Case1 : match (int1, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = false
Case2 : match (int1, int1) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false = false
---------------------------------------
int1 = int1

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : max_ta1 ((int1::int_list2)) = if match (fold (any->any->any1) (int_list2) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list2) (int1)) then int1 else fold (any->any->any1) (int_list2) (int1)
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
max_ta1 ((int1::(int2::int_list2))) = if match (fold (any->any->any1) ((int2::int_list2)) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list2)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list2)) (int1)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 15


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : max_ta1 ((int1::int_list2)) = if match (fold (any->any->any1) (int_list2) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list2) (int1)) then int1 else fold (any->any->any1) (int_list2) (int1)
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
max_ta1 ((int1::(int2::int_list2))) = if match (fold (any->any->any1) ((int2::int_list2)) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list2)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list2)) (int1)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : max_ta1 ((int1::int_list2)) = if match (fold (any->any->any1) (int_list2) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list2) (int1)) then int1 else fold (any->any->any1) (int_list2) (int1)
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (any->any->any1 (int2) (fold (f) (int_list2) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list2)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list2)) (int1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
=================================================
Progress: 16


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : max_ta1 ((int1::int_list2)) = if match (fold (any->any->any1) (int_list2) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list2) (int1)) then int1 else fold (any->any->any1) (int_list2) (int1)
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (any->any->any1 (int2) (fold (f) (int_list2) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list2)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list2)) (int1)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : max_ta1 ((int1::int_list2)) = if match (fold (any->any->any1) (int_list2) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list2) (int1)) then int1 else fold (any->any->any1) (int_list2) (int1)
Inductive1 : int_list1 = (int2::int_list2)
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (any->any->any1 (int2) (fold (f) (int_list2) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list2)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list2)) (int1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
New Env

;;
Lemma List
forall (any->any->any1:any -> any -> any) (f:any -> any -> any) (int1:int) (int2:int) (int_list2:int list), match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (f) (int_list2) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list2)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list2)) (int1)
End of Lemma List


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : max_ta1 ((int1::int_list2)) = if match (fold (any->any->any1) (int_list2) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list2) (int1)) then int1 else fold (any->any->any1) (int_list2) (int1)
Inductive1 : int_list1 = (int2::int_list2)
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (any->any->any1 (int2) (fold (f) (int_list2) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list2)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list2)) (int1)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 17


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = if match (fold (any->any->any1) (int_list1) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list1) (int1)) then int1 else fold (any->any->any1) (int_list1) (int1)
any->any->any1 : any -> any -> any
int1 : int
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : max_ta1 ((int1::int_list2)) = if match (fold (any->any->any1) (int_list2) (int1), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) (int_list2) (int1)) then int1 else fold (any->any->any1) (int_list2) (int1)
Inductive1 : int_list1 = (int2::int_list2)
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (any->any->any1 (int2) (fold (f) (int_list2) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list2)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list2)) (int1)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any->any->any1:any -> any -> any) (f:any -> any -> any) (int1:int) (int2:int) (int_list2:int list), match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (f) (int_list2) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list2)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list2)) (int1)(rank : 0)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

---------------------------------------
forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any->any->any1(rank:7)
=================================================
Progress: 18


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

---------------------------------------
forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro any->any->any1(rank : 7)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
---------------------------------------
forall (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any->any->any2(rank:7)
=================================================
Progress: 19


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
---------------------------------------
forall (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro any->any->any2(rank : 7)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
---------------------------------------
forall (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro int1(rank:7)
=================================================
Progress: 20


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
---------------------------------------
forall (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro int1(rank : 7)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
---------------------------------------
forall (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro int2(rank:7)
=================================================
Progress: 21


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
---------------------------------------
forall (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro int2(rank : 7)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
---------------------------------------
forall (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro int_list1(rank:7)
=================================================
Progress: 22


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
---------------------------------------
forall (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro int_list1(rank : 7)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
---------------------------------------
match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 23


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
---------------------------------------
match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:8)
=================================================
Progress: 24


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
>>> case match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 8)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case1 : match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 25


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case1 : match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int1

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case1 : match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = false
---------------------------------------
int1 = if match (int1, any->any->any1 (int2) (fold (f) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 0
New Env

;;
Lemma List
forall (any->any->any1:any -> any -> any) (f:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (f) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
End of Lemma List


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case1 : match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = false
---------------------------------------
int1 = if match (int1, any->any->any1 (int2) (fold (f) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 26


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else if int_eq (int1) (fold (any->any->any1) ((int2::int_list1)) (int1)) then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case1 : match (any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = false
---------------------------------------
int1 = if match (int1, any->any->any1 (int2) (fold (f) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any->any->any1:any -> any -> any) (f:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (f) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)(rank : 0)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

---------------------------------------
forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any->any->any1(rank:9)
=================================================
Progress: 27


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

---------------------------------------
forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro any->any->any1(rank : 9)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
---------------------------------------
forall (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any->any->any2(rank:9)
=================================================
Progress: 28


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
---------------------------------------
forall (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro any->any->any2(rank : 9)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
---------------------------------------
forall (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int1(rank:9)
=================================================
Progress: 29


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
---------------------------------------
forall (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro int1(rank : 9)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
---------------------------------------
forall (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int2(rank:9)
=================================================
Progress: 30


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
---------------------------------------
forall (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro int2(rank : 9)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
---------------------------------------
forall (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int_list1(rank:9)
=================================================
Progress: 31


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
---------------------------------------
forall (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro int_list1(rank : 9)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
---------------------------------------
match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 32


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
---------------------------------------
match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false(rank:10)
=================================================
Progress: 33


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)

0 goal(s) more...

3 conjecture(s) more...
>>> case match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false(rank : 10)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case1 : match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false = true
---------------------------------------
int1 = int1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 34


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case1 : match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false = true
---------------------------------------
int1 = int1

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case1 : match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false = false
---------------------------------------
int1 = any->any->any1 (int2) (fold (f) (int_list1) (int1))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 0
New Env

;;
Lemma List
forall (f:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (f) (int_list1) (int1))
End of Lemma List


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case1 : match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false = false
---------------------------------------
int1 = any->any->any1 (int2) (fold (f) (int_list1) (int1))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 35


1st goal of : forall (any->any->any1:any -> any -> any) (any->any->any2:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = if match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false then int1 else fold (any->any->any1) ((int2::int_list1)) (int1)
any->any->any1 : any -> any -> any
any->any->any2 : any -> any -> any
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case1 : match (int1, any->any->any1 (int2) (fold (any->any->any2) (int_list1) (int1))) with
| (Zero , Zero ) -> true
| (Pos n1', Pos n2') -> natural_eq (n1') (n2')
| (Neg n1', Neg n2') -> natural_eq (n1') (n2')
| (Zero , Pos Z ) -> true
| (Zero , Neg Z ) -> true
| (Pos Z , Zero ) -> true
| (Neg Z , Zero ) -> true
| (_, _) -> false = false
---------------------------------------
int1 = any->any->any1 (int2) (fold (f) (int_list1) (int1))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (f:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (f) (int_list1) (int1))(rank : 0)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

---------------------------------------
forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro int1(rank:11)
=================================================
Progress: 36


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

---------------------------------------
forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro int1(rank : 11)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
---------------------------------------
forall (any->any->any1:any -> any -> any) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro int2(rank:11)
=================================================
Progress: 37


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
---------------------------------------
forall (any->any->any1:any -> any -> any) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro int2(rank : 11)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
---------------------------------------
forall (any->any->any1:any -> any -> any) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any->any->any1(rank:11)
intro int_list1(rank:11)
induction int_list1(rank:20)
=================================================
Progress: 38


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
---------------------------------------
forall (any->any->any1:any -> any -> any) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any->any->any1(rank : 11)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
any->any->any1 : any -> any -> any
---------------------------------------
forall (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:12)
=================================================
Progress: 39


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
---------------------------------------
forall (any->any->any1:any -> any -> any) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro int_list1(rank : 11)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
---------------------------------------
forall (any->any->any1:any -> any -> any), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 40


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
---------------------------------------
forall (any->any->any1:any -> any -> any), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
forall (any->any->any1:any -> any -> any), int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any->any->any1(rank:11)
=================================================
Progress: 41


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
forall (any->any->any1:any -> any -> any), int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any->any->any1(rank : 11)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
any->any->any1 : any -> any -> any
---------------------------------------
int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
New Env

;;
Lemma List
forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
End of Lemma List


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
any->any->any1 : any -> any -> any
---------------------------------------
int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 42


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
any->any->any1 : any -> any -> any
---------------------------------------
int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))(rank : 0)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

---------------------------------------
forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro int1(rank:13)
=================================================
Progress: 43


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
any->any->any1 : any -> any -> any
---------------------------------------
forall (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
>>> induction int_list1(rank : 12)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
any->any->any1 : any -> any -> any
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
match (max_ta1 ((int2::(Nil))), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) ((Nil)) (int1))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 44


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
any->any->any1 : any -> any -> any
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
match (max_ta1 ((int2::(Nil))), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) ((Nil)) (int1))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
any->any->any1 : any -> any -> any
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12)
=================================================
Progress: 45


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
any->any->any1 : any -> any -> any
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 12)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
any->any->any1 : any -> any -> any
int_list1 : int list
Base1 : int_list1 = (Nil)
Cond1 : match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
New Env

;;
Lemma List
forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)
End of Lemma List


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
any->any->any1 : any -> any -> any
int_list1 : int list
Base1 : int_list1 = (Nil)
Cond1 : match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 46


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
any->any->any1 : any -> any -> any
int_list1 : int list
Base1 : int_list1 = (Nil)
Cond1 : match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

4 conjecture(s) more...
>>> assert forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)(rank : 0)


1st goal of : forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

---------------------------------------
forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro int1(rank:13)
=================================================
Progress: 47


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

---------------------------------------
forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro int1(rank : 13)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
---------------------------------------
forall (any->any->any1:any -> any -> any) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro int2(rank:13)
=================================================
Progress: 48


1st goal of : forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

---------------------------------------
forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

0 goal(s) more...

5 conjecture(s) more...
>>> intro int1(rank : 13)


1st goal of : forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)
int1 : int
---------------------------------------
forall (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro int2(rank:13)
=================================================
Progress: 49


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
---------------------------------------
forall (any->any->any1:any -> any -> any) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro int2(rank : 13)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
---------------------------------------
forall (any->any->any1:any -> any -> any) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any->any->any1(rank:13)
intro int_list1(rank:13)
induction int_list1(rank:22)
=================================================
Progress: 50


1st goal of : forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)
int1 : int
---------------------------------------
forall (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

0 goal(s) more...

5 conjecture(s) more...
>>> intro int2(rank : 13)


1st goal of : forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)
int1 : int
int2 : int
---------------------------------------
match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 51


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
---------------------------------------
forall (any->any->any1:any -> any -> any) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any->any->any1(rank : 13)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
any->any->any1 : any -> any -> any
---------------------------------------
forall (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:14)
=================================================
Progress: 52


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
---------------------------------------
forall (any->any->any1:any -> any -> any) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro int_list1(rank : 13)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
---------------------------------------
forall (any->any->any1:any -> any -> any), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13)
=================================================
Progress: 53


1st goal of : forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)
int1 : int
int2 : int
---------------------------------------
match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)
int1 : int
int2 : int
Cond1 : match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = any->any->any1 (int2) (int1)

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
New Env

;;
Lemma List
forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)
End of Lemma List


1st goal of : forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)
int1 : int
int2 : int
Cond1 : match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = any->any->any1 (int2) (int1)

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 54


1st goal of : forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)
int1 : int
int2 : int
Cond1 : match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = any->any->any1 (int2) (int1)

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)(rank : 0)


1st goal of : forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

---------------------------------------
forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro int1(rank:15)
=================================================
Progress: 55


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
---------------------------------------
forall (any->any->any1:any -> any -> any), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 13)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
forall (any->any->any1:any -> any -> any), int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any->any->any1(rank:13)
=================================================
Progress: 56


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
forall (any->any->any1:any -> any -> any), int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any->any->any1(rank : 13)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Cond1 : match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
any->any->any1 : any -> any -> any
---------------------------------------
int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 57


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
any->any->any1 : any -> any -> any
---------------------------------------
forall (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

5 conjecture(s) more...
>>> induction int_list1(rank : 14)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
any->any->any1 : any -> any -> any
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
match (max_ta1 ((int2::(Nil))), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) ((Nil)) (int1))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14)
=================================================
Progress: 58


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
any->any->any1 : any -> any -> any
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
match (max_ta1 ((int2::(Nil))), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) ((Nil)) (int1))

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
any->any->any1 : any -> any -> any
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14)
=================================================
Progress: 59


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
any->any->any1 : any -> any -> any
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 14)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
any->any->any1 : any -> any -> any
int_list1 : int list
Base1 : int_list1 = (Nil)
Cond1 : match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
=================================================
Progress: 60


1st goal of : forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

---------------------------------------
forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

0 goal(s) more...

6 conjecture(s) more...
>>> intro int1(rank : 15)


1st goal of : forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)
int1 : int
---------------------------------------
forall (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro int2(rank:15)
=================================================
Progress: 61


1st goal of : forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)
int1 : int
---------------------------------------
forall (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

0 goal(s) more...

6 conjecture(s) more...
>>> intro int2(rank : 15)


1st goal of : forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)
int1 : int
int2 : int
---------------------------------------
match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15)
=================================================
Progress: 62


1st goal of : forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)
int1 : int
int2 : int
---------------------------------------
match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

0 goal(s) more...

6 conjecture(s) more...
>>> intro Cond1(rank : 15)


1st goal of : forall (int1:int) (int2:int), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)
int1 : int
int2 : int
Cond1 : match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = any->any->any1 (int2) (int1)

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 63


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
---------------------------------------
forall (any->any->any1:any -> any -> any) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

4 conjecture(s) more...
>>> induction int_list1(rank : 20)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (any->any->any1:any -> any -> any), match (max_ta1 ((int2::(Nil))), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) ((Nil)) (int1))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 64


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (any->any->any1:any -> any -> any), match (max_ta1 ((int2::(Nil))), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) ((Nil)) (int1))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (any->any->any1:any -> any -> any), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12)
=================================================
Progress: 65


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (any->any->any1:any -> any -> any), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 12)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
Cond1 : match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
forall (any->any->any1:any -> any -> any), int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any->any->any1(rank:12)
=================================================
Progress: 66


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
Cond1 : match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
forall (any->any->any1:any -> any -> any), int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

4 conjecture(s) more...
>>> intro any->any->any1(rank : 12)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
Cond1 : match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
any->any->any1 : any -> any -> any
---------------------------------------
int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro any->any->any1
=================================================
Progress: 67


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
---------------------------------------
forall (any->any->any1:any -> any -> any) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))

0 goal(s) more...

5 conjecture(s) more...
>>> induction int_list1(rank : 22)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (any->any->any1:any -> any -> any), match (max_ta1 ((int2::(Nil))), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) ((Nil)) (int1))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14)
=================================================
Progress: 68


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (any->any->any1:any -> any -> any), match (max_ta1 ((int2::(Nil))), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) ((Nil)) (int1))

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (any->any->any1:any -> any -> any), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14)
=================================================
Progress: 69


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (any->any->any1:any -> any -> any), match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 14)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
Cond1 : match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
forall (any->any->any1:any -> any -> any), int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any->any->any1(rank:14)
=================================================
Progress: 70


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
Cond1 : match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
forall (any->any->any1:any -> any -> any), int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

5 conjecture(s) more...
>>> intro any->any->any1(rank : 14)


1st goal of : forall (any->any->any1:any -> any -> any) (int1:int) (int2:int) (int_list1:int list), match (max_ta1 ((int2::int_list1)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true -> int1 = any->any->any1 (int2) (fold (any->any->any1) (int_list1) (int1))
int1 : int
int2 : int
int_list1 : int list
Base1 : int_list1 = (Nil)
Cond1 : match (int2, int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
any->any->any1 : any -> any -> any
---------------------------------------
int1 = any->any->any1 (int2) (int1)

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro any->any->any1
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 211, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 26, characters 12-79
