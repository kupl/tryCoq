Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:int list), max_ta1 (lst) = max (lst)(rank : 0)


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)

---------------------------------------
forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:4)
=================================================
Progress: 2


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)

---------------------------------------
forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction int_list1(rank : 4)


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
max_ta1 ((Nil)) = max ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 3


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
max_ta1 ((Nil)) = max ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : max_ta1 (int_list2) = max (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
max_ta1 ((int1::int_list2)) = max ((int1::int_list2))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 4


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : max_ta1 (int_list2) = max (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
max_ta1 ((int1::int_list2)) = max ((int1::int_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : max_ta1 (int_list2) = max (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
expr list
max_ta1 (int_list2)
max_ta1 ((int1::int_list2))
if match (max_ta1 ((int2::int_list3)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list3))
if match (if match (max_ta1 ((int3::int_list4)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int3::int_list4)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::(int3::int_list4)))
expr list
max (int_list2)
loop (int1) (int_list2)
if match (loop (int1) (int_list3), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list3)
if match (if match (loop (int1) (int_list4), int3) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int3 else loop (int1) (int_list4), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) ((int3::int_list4))
New Env

;;
Lemma List
forall (int1:int) (int_list2:int list), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
End of Lemma List


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : max_ta1 (int_list2) = max (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 5


1st goal of : forall (int_list1:int list), max_ta1 (int_list1) = max (int_list1)
int_list1 : int list
int1 : int
int_list2 : int list
IH1 : max_ta1 (int_list2) = max (int_list2)
Inductive1 : int_list1 = (int1::int_list2)
---------------------------------------
max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (int1:int) (int_list2:int list), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)(rank : 0)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)

---------------------------------------
forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction int_list1(rank:6)
=================================================
Progress: 6


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)

---------------------------------------
forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction int_list1(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (int1:int), max_ta1 ((int1::(Nil))) = loop (int1) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 7


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
Base1 : int_list1 = (Nil)
---------------------------------------
forall (int1:int), max_ta1 ((int1::(Nil))) = loop (int1) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
forall (int1:int), max_ta1 ((int1::(int2::int_list2))) = loop (int1) ((int2::int_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 8


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
forall (int1:int), max_ta1 ((int1::(int2::int_list2))) = loop (int1) ((int2::int_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
forall (int1:int), if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro int1(rank:5)
=================================================
Progress: 9


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
---------------------------------------
forall (int1:int), if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro int1(rank : 5)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
rewrite IH1 in goal at 0(rank:13)
rewrite IH1 in goal at 2(rank:13)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 1(rank:13)
rewrite <- IH1 in goal at 2(rank:13)
rewrite IH1 in goal at 1(rank:13)
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
=================================================
Progress: 10


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 2(rank:14)
rewrite IH1 in goal at 0(rank:14)
rewrite IH1 in goal at 1(rank:14)
=================================================
Progress: 11


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH1 in goal at 0(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
=================================================
Progress: 12


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
New Env

;;
Lemma List
forall (int1:int) (int2:int), int1 = int2
End of Lemma List


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 13


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (int1:int) (int2:int), int1 = int2(rank : 0)


1st goal of : forall (int1:int) (int2:int), int1 = int2

---------------------------------------
forall (int1:int) (int2:int), int1 = int2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro int1(rank:7)
intro int2(rank:7)
=================================================
Progress: 14


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 15


1st goal of : forall (int1:int) (int2:int), int1 = int2

---------------------------------------
forall (int1:int) (int2:int), int1 = int2

0 goal(s) more...

2 conjecture(s) more...
>>> intro int1(rank : 7)


1st goal of : forall (int1:int) (int2:int), int1 = int2
int1 : int
---------------------------------------
forall (int2:int), int1 = int2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro int2(rank:7)
=================================================
Progress: 16


1st goal of : forall (int1:int) (int2:int), int1 = int2

---------------------------------------
forall (int1:int) (int2:int), int1 = int2

0 goal(s) more...

2 conjecture(s) more...
>>> intro int2(rank : 7)


1st goal of : forall (int1:int) (int2:int), int1 = int2
int2 : int
---------------------------------------
forall (int1:int), int1 = int2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
New Env

;;
Lemma List
forall (int1:int) (int2:int), int1 = int2
End of Lemma List


1st goal of : forall (int1:int) (int2:int), int1 = int2
int2 : int
---------------------------------------
forall (int1:int), int1 = int2

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 17


1st goal of : forall (int1:int) (int2:int), int1 = int2
int2 : int
---------------------------------------
forall (int1:int), int1 = int2

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (int1:int) (int2:int), int1 = int2(rank : 0)


1st goal of : forall (int1:int) (int2:int), int1 = int2

---------------------------------------
forall (int1:int) (int2:int), int1 = int2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro int1(rank:9)
intro int2(rank:9)
=================================================
Progress: 18


1st goal of : forall (int1:int) (int2:int), int1 = int2
int1 : int
---------------------------------------
forall (int2:int), int1 = int2

0 goal(s) more...

2 conjecture(s) more...
>>> intro int2(rank : 7)


1st goal of : forall (int1:int) (int2:int), int1 = int2
int1 : int
int2 : int
---------------------------------------
int1 = int2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 19


1st goal of : forall (int1:int) (int2:int), int1 = int2

---------------------------------------
forall (int1:int) (int2:int), int1 = int2

0 goal(s) more...

3 conjecture(s) more...
>>> intro int1(rank : 9)


1st goal of : forall (int1:int) (int2:int), int1 = int2
int1 : int
---------------------------------------
forall (int2:int), int1 = int2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro int2(rank:9)
=================================================
Progress: 20


1st goal of : forall (int1:int) (int2:int), int1 = int2

---------------------------------------
forall (int1:int) (int2:int), int1 = int2

0 goal(s) more...

3 conjecture(s) more...
>>> intro int2(rank : 9)


1st goal of : forall (int1:int) (int2:int), int1 = int2
int2 : int
---------------------------------------
forall (int1:int), int1 = int2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 21


1st goal of : forall (int1:int) (int2:int), int1 = int2
int1 : int
---------------------------------------
forall (int2:int), int1 = int2

0 goal(s) more...

3 conjecture(s) more...
>>> intro int2(rank : 9)


1st goal of : forall (int1:int) (int2:int), int1 = int2
int1 : int
int2 : int
---------------------------------------
int1 = int2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 22


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
rewrite <- IH1 in goal at 3(rank:21)
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
=================================================
Progress: 23


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH1 in goal at 0(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
=================================================
Progress: 24


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH1 in goal at 0(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
=================================================
Progress: 25


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 0
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 26


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 0
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 27


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 13)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
rewrite <- IH1 in goal at 3(rank:13)
rewrite <- IH1 in goal at 2(rank:21)
=================================================
Progress: 28


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 29


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH1 in goal at 0(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
=================================================
Progress: 30


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 31


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 32


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 13)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
rewrite <- IH1 in goal at 2(rank:13)
rewrite <- IH1 in goal at 3(rank:21)
=================================================
Progress: 33


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 34


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH1 in goal at 0(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
=================================================
Progress: 35


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 36


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 37


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
rewrite IH1 in goal at 1(rank:21)
rewrite IH1 in goal at 2(rank:21)
=================================================
Progress: 38


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 2(rank:14)
rewrite IH1 in goal at 0(rank:14)
rewrite IH1 in goal at 1(rank:14)
=================================================
Progress: 39


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 2(rank:14)
rewrite IH1 in goal at 0(rank:14)
rewrite IH1 in goal at 1(rank:14)
=================================================
Progress: 40


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 41


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 42


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 13)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
=================================================
Progress: 43


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 2(rank:14)
rewrite IH1 in goal at 0(rank:14)
rewrite IH1 in goal at 1(rank:14)
=================================================
Progress: 44


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 45


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 46


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 47


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 13)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
=================================================
Progress: 48


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 2(rank:14)
rewrite IH1 in goal at 0(rank:14)
rewrite IH1 in goal at 1(rank:14)
=================================================
Progress: 49


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 50


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 2
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 51


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 52


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 13)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
=================================================
Progress: 53


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 54


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 55


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
rewrite <- IH1 in goal at 3
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 56


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
rewrite <- IH1 in goal at 3
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 57


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 13)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
=================================================
Progress: 58


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 59


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 60


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
rewrite <- IH1 in goal at 2
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 61


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
rewrite <- IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 62


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 63


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 64


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 65


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 66


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 67


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 68


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 69


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 70


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 71


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 72


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 73


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 74


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 75


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 76


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 77


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 78


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 79


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 80


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 81


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 82


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 83


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 2
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 84


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 85


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 86


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 87


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 88


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 89


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 90


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 91


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 92


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 93


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 2
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 94


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 95


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 2
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 96


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 97


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 2
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 98


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 99


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 100


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 101


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
rewrite <- IH1 in goal at 3
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 102


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 103


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
rewrite <- IH1 in goal at 3
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 104


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 105


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
rewrite <- IH1 in goal at 2
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 106


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 107


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
rewrite <- IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 108


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 21)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
=================================================
Progress: 109


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 110


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite <- IH1 in goal at 2(rank:22)
rewrite <- IH1 in goal at 0(rank:22)
rewrite <- IH1 in goal at 1(rank:22)
=================================================
Progress: 111


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 0
rewrite <- IH1 in goal at 3
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 112


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 0
rewrite <- IH1 in goal at 3
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 113


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 114


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 0
rewrite <- IH1 in goal at 3
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 115


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 21)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
=================================================
Progress: 116


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 117


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 118


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
rewrite <- IH1 in goal at 2
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 119


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
rewrite <- IH1 in goal at 2
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 120


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 121


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
rewrite <- IH1 in goal at 2
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 122


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 123


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
rewrite <- IH1 in goal at 2
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 124


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 21)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
=================================================
Progress: 125


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 126


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 127


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
rewrite <- IH1 in goal at 3
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 128


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
rewrite <- IH1 in goal at 3
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 129


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 130


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
rewrite <- IH1 in goal at 3
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 131


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 132


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
rewrite <- IH1 in goal at 3
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 133


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 21)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
=================================================
Progress: 134


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 2(rank:14)
rewrite IH1 in goal at 0(rank:14)
rewrite IH1 in goal at 1(rank:14)
=================================================
Progress: 135


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 136


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
rewrite IH1 in goal at 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 137


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
rewrite IH1 in goal at 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 138


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 139


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
rewrite IH1 in goal at 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 140


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 141


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
rewrite IH1 in goal at 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 142


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 143


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
rewrite IH1 in goal at 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 2
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 144


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 145


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
rewrite IH1 in goal at 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 146


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 21)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:6)
=================================================
Progress: 147


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:22)
=================================================
Progress: 148


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 6)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
rewrite IH1 in goal at 2(rank:14)
rewrite IH1 in goal at 0(rank:14)
rewrite IH1 in goal at 1(rank:14)
=================================================
Progress: 149


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
rewrite IH1 in goal at 2
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 150


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
rewrite IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 151


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 152


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
rewrite IH1 in goal at 2
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 153


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 154


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
rewrite IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 0
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 155


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 156


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
rewrite IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 157


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 14)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 158


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
rewrite IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite IH1 in goal at 2
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 159


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 160


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 161


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 162


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 163


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 164


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 2
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 165


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 166


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 0
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 167


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 168


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 0
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 169


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 170


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 0
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 2
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 171


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 172


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 0
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 173


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 174


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 0
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 175


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 176


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 0
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 2
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 177


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 178


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 179


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 180


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 181


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 182


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 183


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 184


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 2
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 185


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 186


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 187


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 188


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 189


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 190


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 191


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 192


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 2
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 193


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 194


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 195


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 196


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 197


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 198


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
rewrite <- IH1 in goal at 3
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 199


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 200


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
rewrite <- IH1 in goal at 3
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 201


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 202


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
rewrite <- IH1 in goal at 2
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 203


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 204


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
rewrite <- IH1 in goal at 2
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 205


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 206


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 0
rewrite <- IH1 in goal at 3
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 207


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 208


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 0
rewrite <- IH1 in goal at 3
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 209


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 210


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 0
rewrite <- IH1 in goal at 3
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 211


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 212


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 0
rewrite <- IH1 in goal at 3
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 2
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 213


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else loop (int1) (int_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 214


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
rewrite <- IH1 in goal at 2
case match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 215


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 216


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 1
rewrite <- IH1 in goal at 2
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 217


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 218


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
rewrite <- IH1 in goal at 3
case match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 219


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (loop (int1) (int_list2), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 220


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = if match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int2 else max_ta1 ((int1::int_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite IH1 in goal at 2
rewrite <- IH1 in goal at 3
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 221


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (loop (int2) (int_list2), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 222


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
rewrite IH1 in goal at 1
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
=================================================
Progress: 223


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else loop (int2) (int_list2) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 22)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank:7)
=================================================
Progress: 224


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
if match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true then int1 else max_ta1 ((int2::int_list2)) = int2

1 goal(s) more...

1 conjecture(s) more...
>>> case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true(rank : 7)


1st goal of : forall (int1:int) (int_list1:int list), max_ta1 ((int1::int_list1)) = loop (int1) (int_list1)
int_list1 : int list
int2 : int
int_list2 : int list
IH1 : forall (int1:int), max_ta1 ((int1::int_list2)) = loop (int1) (int_list2)
Inductive1 : int_list1 = (int2::int_list2)
int1 : int
Case1 : match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
Case2 : match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true = true
---------------------------------------
int1 = int2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro int1
rewrite <- IH1 in goal at 0
rewrite IH1 in goal at 2
case match (max_ta1 ((int1::int_list2)), int2) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
rewrite <- IH1 in goal at 0
case match (max_ta1 ((int2::int_list2)), int1) with
| (Zero , Pos _) -> true
| (Zero , _) -> false
| (Neg _, Zero ) -> true
| (_, Zero ) -> false
| (Pos n1', Pos n2') -> less_than (n1') (n2')
| (Neg n1', Neg n2') -> less_than (n2') (n1')
| (Pos n1', Neg n2') -> false
| (Neg n1', Pos n2') -> true
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 196, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
