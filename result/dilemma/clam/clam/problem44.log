Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list) (y:any list), reverse ((reverse (x) @ reverse (y))) = (y @ x)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:12)
induction any_list2(rank:12)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse ((reverse ((Nil)) @ reverse (any_list2))) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse ((reverse ((Nil)) @ reverse (any_list2))) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (reverse (any_list2)) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:5)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (reverse (any_list2)) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse (reverse ((Nil))) = ((Nil) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 5


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse (reverse ((Nil))) = ((Nil) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (reverse ((any1::any_list3))) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (reverse ((any1::any_list3))) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4)
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (arg1:any list), reverse ((arg1 @ (any1::(Nil)))) = (any1::reverse (arg1))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (arg1:any list), reverse ((arg1 @ (any1::(Nil)))) = (any1::reverse (arg1))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 9


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 10


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 11


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:5)
rewrite IH1 in goal at 0(rank:13)
=================================================
Progress: 12


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5)
=================================================
Progress: 13


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 14


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite lemma3 in goal at 0(rank:12)
rewrite <- lemma3 in goal at 0(rank:12)
=================================================
Progress: 15


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse ((Nil)))) = ((Nil) @ any_list1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 16


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse ((Nil)))) = ((Nil) @ any_list1)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (Nil))) = any_list1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:5)
=================================================
Progress: 17


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (Nil))) = any_list1

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 18


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse ((reverse ((any1::any_list3)) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 19


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse ((reverse ((any1::any_list3)) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
expr list
reverse ((reverse (any_list3) @ (Nil)))
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil)))
reverse ((((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)))
reverse (((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil)))
expr list
any_list3
(any1::any_list3)
(any1::(any2::any_list4))
(any1::(any2::(any3::any_list5)))
New Env

;;
Lemma List
forall (any1:any) (any_list3:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 20


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list3:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)

---------------------------------------
forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 21


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)

---------------------------------------
forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))) = (any1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 22


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))) = (any1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((reverse ((any2::any_list2)) @ (any1::(Nil))) @ (Nil))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 23


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((reverse ((any2::any_list2)) @ (any1::(Nil))) @ (Nil))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
=================================================
Progress: 24


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5)
=================================================
Progress: 25


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (arg2:any list), reverse (((arg2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((arg2 @ (Nil))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 26


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (arg2:any list), reverse (((arg2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((arg2 @ (Nil))))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 27


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse ((((Nil) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((Nil) @ (Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 28


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse ((((Nil) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((Nil) @ (Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((any2::any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((any2::any_list2) @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 29


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((any2::any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((any2::any_list2) @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 30


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 31


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse ((any_list2 @ (Nil)))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 32


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse ((any_list2 @ (Nil)))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 4
rewrite lemma3 in goal at 1(rank:13)
rewrite lemma3 in goal at 0(rank:21)
rewrite <- lemma3 in goal at 0(rank:13)
rewrite lemma3 in goal at 2(rank:21)
=================================================
Progress: 33


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::reverse (reverse (any_list3))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 34


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::reverse (reverse (any_list3))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse ((reverse ((any1::any_list3)) @ reverse (any_list2))) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 35


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse ((reverse ((any1::any_list3)) @ reverse (any_list2))) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:4)
=================================================
Progress: 36


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ reverse (any_list2))) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ reverse ((Nil)))) = ((Nil) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 37


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ reverse ((Nil)))) = ((Nil) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 38


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (arg3:any list), reverse (((arg3 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((arg3 @ (Nil))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 39


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (arg3:any list), reverse (((arg3 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((arg3 @ (Nil))))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 40


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse ((((Nil) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((Nil) @ (Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 41


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse ((((Nil) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((Nil) @ (Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((any2::any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((any2::any_list2) @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 42


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((any2::any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((any2::any_list2) @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 43


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 44


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse ((any_list2 @ (Nil)))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 45


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse ((any_list2 @ (Nil)))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 4
rewrite lemma3 in goal at 1(rank:13)
rewrite lemma3 in goal at 0(rank:21)
rewrite <- lemma3 in goal at 0(rank:13)
rewrite lemma3 in goal at 2(rank:21)
=================================================
Progress: 46


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil)))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 47


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil)))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 7
Tactic List : 5
rewrite lemma3 in goal at 0(rank:12)
rewrite <- lemma4 in goal at 0(rank:12)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 2(rank:12)
rewrite lemma4 in goal at 0(rank:12)
=================================================
Progress: 48


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::reverse ((reverse (any_list3) @ (Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 2(rank:12)
rewrite <- lemma4 in goal at 0(rank:20)
=================================================
Progress: 49


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 50


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse ((any1::any_list3)))) = ((any1::any_list3) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 5
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 51


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse ((any1::any_list3)))) = ((any1::any_list3) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::(Nil))))) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:11)
rewrite <- lemma4 in goal at 0(rank:11)
rewrite <- lemma4 in goal at 1(rank:19)
rewrite <- lemma4 in goal at 2(rank:11)
induction any_list1(rank:12)
=================================================
Progress: 52


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::(Nil))))) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::(Nil))))) = (any1::reverse ((reverse (any_list1) @ reverse (any_list3))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
induction any_list1(rank:12)
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
rewrite <- lemma4 in goal at 2(rank:19)
=================================================
Progress: 53


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::(Nil))))) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = reverse (((reverse ((any_list3 @ any_list1)) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite lemma3 in goal at 1(rank:11)
rewrite <- lemma4 in goal at 2(rank:11)
rewrite <- lemma4 in goal at 1(rank:19)
rewrite lemma3 in goal at 2(rank:19)
rewrite <- lemma4 in goal at 0(rank:19)
rewrite lemma3 in goal at 0(rank:19)
=================================================
Progress: 54


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::(Nil))))) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::(Nil))))) = reverse (((reverse ((any_list3 @ any_list1)) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
induction any_list1(rank:12)
rewrite lemma3 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 2(rank:19)
=================================================
Progress: 55


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = reverse (((reverse ((any_list3 @ any_list1)) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))))) = reverse (((reverse ((any_list3 @ any_list1)) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
rewrite <- lemma4 in goal at 2(rank:19)
=================================================
Progress: 56


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = reverse (((reverse ((any_list3 @ any_list1)) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = reverse (((reverse ((any_list3 @ any_list1)) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:19)
rewrite lemma3 in goal at 2(rank:19)
rewrite <- IH1 in goal at 0(rank:19)
=================================================
Progress: 57


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::(Nil))))) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (any_list3) @ (any1::(Nil))))) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 58


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (any_list3) @ (any1::(Nil))))) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- lemma4 in goal at 2(rank:12)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- IH1 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 0(rank:20)
=================================================
Progress: 59


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::(Nil))))) = (any1::reverse ((reverse (any_list1) @ reverse (any_list3))))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (any_list3) @ (any1::(Nil))))) = (any1::reverse ((reverse ((Nil)) @ reverse (any_list3))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 60


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (any_list3) @ (any1::(Nil))))) = (any1::reverse ((reverse ((Nil)) @ reverse (any_list3))))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
=================================================
Progress: 61


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::(Nil))))) = reverse (((reverse ((any_list3 @ any_list1)) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (any_list3) @ (any1::(Nil))))) = reverse (((reverse ((any_list3 @ (Nil))) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 62


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (any_list3) @ (any1::(Nil))))) = reverse (((reverse ((any_list3 @ (Nil))) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = reverse (((reverse ((any_list3 @ (Nil))) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite lemma3 in goal at 0(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
rewrite lemma4 in goal at 0(rank:20)
=================================================
Progress: 63


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = reverse (((reverse ((any_list3 @ (Nil))) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:12)
rewrite <- IH1 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
=================================================
Progress: 64


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = reverse (((reverse ((any_list3 @ (Nil))) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::reverse ((reverse ((any_list3 @ (Nil))) @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
=================================================
Progress: 65


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = reverse (((reverse ((any_list3 @ (Nil))) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::reverse ((reverse ((any_list3 @ (Nil))) @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
=================================================
Progress: 66


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::(Nil))))) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:3)
=================================================
Progress: 67


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))))) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:11)
rewrite <- lemma4 in goal at 1(rank:19)
=================================================
Progress: 68


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))))) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))))) = (any1::reverse ((reverse (any_list1) @ reverse (any_list3))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
=================================================
Progress: 69


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::(Nil))))) = (any1::reverse ((reverse (any_list1) @ reverse (any_list3))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = reverse (((reverse (reverse ((reverse (any_list1) @ reverse (any_list3)))) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:19)
rewrite lemma3 in goal at 2(rank:19)
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
=================================================
Progress: 70


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::(Nil))))) = (any1::reverse ((reverse (any_list1) @ reverse (any_list3))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((reverse (any_list1) @ reverse (any_list3))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma4 in goal at 0
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- lemma4 in goal at 1
New Env

;;
Lemma List
forall (any1:any) (arg4:any list) (arg5:any list), reverse ((arg4 @ (arg5 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((arg4 @ arg5)))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((reverse (any_list1) @ reverse (any_list3))))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 71


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((reverse (any_list1) @ reverse (any_list3))))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (arg4:any list) (arg5:any list), reverse ((arg4 @ (arg5 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((arg4 @ arg5)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 72


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ (any1::(Nil))))) = (any1::reverse ((any_list1 @ any_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 73


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ (any1::(Nil))))) = (any1::reverse ((any_list1 @ any_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (((Nil) @ (any_list2 @ (any1::(Nil))))) = (any1::reverse (((Nil) @ any_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 74


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (((Nil) @ (any_list2 @ (any1::(Nil))))) = (any1::reverse (((Nil) @ any_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:7)
=================================================
Progress: 75


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 76


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), reverse ((any_list3 @ (any1::(Nil)))) = (any1::reverse (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any), reverse (((any2::any_list3) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 77


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), reverse ((any_list3 @ (any1::(Nil)))) = (any1::reverse (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any), reverse (((any2::any_list3) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), reverse ((any_list3 @ (any1::(Nil)))) = (any1::reverse (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any), (reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list3) @ (any2::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro any1(rank:6)
rewrite <- lemma4 in goal at 0(rank:22)
rewrite <- lemma4 in goal at 1(rank:22)
rewrite <- lemma4 in goal at 2(rank:22)
rewrite <- lemma4 in goal at 3(rank:22)
rewrite IH1 in goal at 0(rank:14)
=================================================
Progress: 78


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), reverse ((any_list3 @ (any1::(Nil)))) = (any1::reverse (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any), (reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list3) @ (any2::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), reverse ((any_list3 @ (any1::(Nil)))) = (any1::reverse (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
(reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list3) @ (any2::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:14)
rewrite <- lemma4 in goal at 1(rank:22)
rewrite <- lemma4 in goal at 2(rank:22)
rewrite <- lemma4 in goal at 3(rank:22)
rewrite <- lemma4 in goal at 0(rank:22)
=================================================
Progress: 79


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), reverse ((any_list3 @ (any1::(Nil)))) = (any1::reverse (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any), (reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list3) @ (any2::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), reverse ((any_list3 @ (any1::(Nil)))) = (any1::reverse (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any), ((any1::reverse (any_list3)) @ (any2::(Nil))) = (any1::(reverse (any_list3) @ (any2::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 80


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), reverse ((any_list3 @ (any1::(Nil)))) = (any1::reverse (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any), ((any1::reverse (any_list3)) @ (any2::(Nil))) = (any1::(reverse (any_list3) @ (any2::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list3 @ (any_list2 @ (any1::(Nil))))) = (any1::reverse ((any_list3 @ any_list2)))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (((any2::any_list3) @ (any_list2 @ (any1::(Nil))))) = (any1::reverse (((any2::any_list3) @ any_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 9
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 81


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list3 @ (any_list2 @ (any1::(Nil))))) = (any1::reverse ((any_list3 @ any_list2)))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (((any2::any_list3) @ (any_list2 @ (any1::(Nil))))) = (any1::reverse (((any2::any_list3) @ any_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list3 @ (any_list2 @ (any1::(Nil))))) = (any1::reverse ((any_list3 @ any_list2)))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), (reverse ((any_list3 @ (any_list2 @ (any1::(Nil))))) @ (any2::(Nil))) = (any1::(reverse ((any_list3 @ any_list2)) @ (any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 82


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list3 @ (any_list2 @ (any1::(Nil))))) = (any1::reverse ((any_list3 @ any_list2)))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), (reverse ((any_list3 @ (any_list2 @ (any1::(Nil))))) @ (any2::(Nil))) = (any1::(reverse ((any_list3 @ any_list2)) @ (any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list3 @ (any_list2 @ (any1::(Nil))))) = (any1::reverse ((any_list3 @ any_list2)))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any), (reverse ((any_list3 @ ((Nil) @ (any1::(Nil))))) @ (any2::(Nil))) = (any1::(reverse ((any_list3 @ (Nil))) @ (any2::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 83


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list3 @ (any_list2 @ (any1::(Nil))))) = (any1::reverse ((any_list3 @ any_list2)))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any), (reverse ((any_list3 @ ((Nil) @ (any1::(Nil))))) @ (any2::(Nil))) = (any1::(reverse ((any_list3 @ (Nil))) @ (any2::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list3 @ (any_list2 @ (any1::(Nil))))) = (any1::reverse ((any_list3 @ any_list2)))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any), (reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse ((any_list3 @ (Nil))) @ (any2::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro any1(rank:6)
rewrite <- lemma4 in goal at 1(rank:22)
rewrite <- lemma4 in goal at 2(rank:22)
rewrite <- lemma4 in goal at 3(rank:22)
rewrite <- lemma4 in goal at 0(rank:22)
=================================================
Progress: 84


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list3 @ (any_list2 @ (any1::(Nil))))) = (any1::reverse ((any_list3 @ any_list2)))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any), (reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse ((any_list3 @ (Nil))) @ (any2::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((any_list1 @ (any_list2 @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (any1::reverse ((any_list1 @ any_list2)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse ((any_list3 @ (any_list2 @ (any1::(Nil))))) = (any1::reverse ((any_list3 @ any_list2)))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
(reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse ((any_list3 @ (Nil))) @ (any2::(Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- lemma4 in goal at 0(rank:22)
rewrite <- lemma4 in goal at 1(rank:22)
rewrite <- lemma4 in goal at 2(rank:22)
rewrite <- lemma4 in goal at 3(rank:22)
=================================================
Progress: 85


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::(Nil))))) = (any1::reverse ((reverse (any_list1) @ reverse (any_list3))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::(Nil))))) = reverse (((reverse (reverse ((reverse (any_list1) @ reverse (any_list3)))) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
induction any_list1(rank:12)
rewrite lemma3 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 2(rank:19)
=================================================
Progress: 86


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (reverse (any_list3) @ (any1::(Nil))))) = reverse (((reverse (reverse ((reverse (any_list1) @ reverse (any_list3)))) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (any_list3) @ (any1::(Nil))))) = reverse (((reverse (reverse ((reverse ((Nil)) @ reverse (any_list3)))) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 87


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (any_list3) @ (any1::(Nil))))) = reverse (((reverse (reverse ((reverse ((Nil)) @ reverse (any_list3)))) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = reverse (((reverse (reverse (reverse (any_list3))) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:12)
rewrite <- lemma4 in goal at 1(rank:12)
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
rewrite lemma3 in goal at 0(rank:20)
=================================================
Progress: 88


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = reverse (((reverse (reverse (reverse (any_list3))) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:4)
=================================================
Progress: 89


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4)
=================================================
Progress: 90


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil)))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:4)
=================================================
Progress: 91


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil)))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ reverse (((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (any1::(Nil))) @ (Nil))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4)
=================================================
Progress: 92


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ reverse (((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (any1::(Nil))) @ (Nil))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:4)
=================================================
Progress: 93


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4)
=================================================
Progress: 94


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:4)
=================================================
Progress: 95


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4)
=================================================
Progress: 96


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:4)
=================================================
Progress: 97


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4)
=================================================
Progress: 98


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:4)
=================================================
Progress: 99


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4)
=================================================
Progress: 100


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:4)
=================================================
Progress: 101


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4)
=================================================
Progress: 102


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:4)
=================================================
Progress: 103


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (any_list3))) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Dilemma timed out for benchmark clam with problem 44.File "_none_", lines 81-83, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 81-83, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
