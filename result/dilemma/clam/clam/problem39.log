Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list) (y:any list), (reverse (x) @ y) = qreva (x) (y)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:4)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), (reverse ((Nil)) @ any_list2) = qreva ((Nil)) (any_list2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), (reverse ((Nil)) @ any_list2) = qreva ((Nil)) (any_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (reverse ((any1::any_list3)) @ any_list2) = qreva ((any1::any_list3)) (any_list2)

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (reverse ((any1::any_list3)) @ any_list2) = qreva ((any1::any_list3)) (any_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = qreva (any_list3) ((any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:3)
rewrite IH1 in goal at 0(rank:11)
rewrite <- IH1 in goal at 0(rank:11)
=================================================
Progress: 5


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = qreva (any_list3) ((any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> intro any_list2(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = qreva (any_list3) ((any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:11)
rewrite <- IH1 in goal at 0(rank:11)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = qreva (any_list3) ((any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list2) = qreva (any_list3) ((any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 2(rank:3)
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list2) = qreva (any_list3) ((any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
intro any_list2(rank:3)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> intro any_list2(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(qreva (any_list3) ((any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH1 in goal at 2
intro any_list2
Lemma : forall (any1:any) (any_list2:any list) (any_list3:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))
Model : any1: 7, any_list2: (Nil), any_list3: (Nil)
Model : any1: 1, any_list2: (Nil), any_list3: (Nil)
Model : any1: 0, any_list2: (4::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((7::(Nil))) @ (Nil)) = (reverse ((Nil)) @ (7::(Nil)))
(qreva ((Nil)) ((1::(Nil))) @ (Nil)) = (reverse ((Nil)) @ (1::(Nil)))
(qreva ((Nil)) ((0::(Nil))) @ (4::(Nil))) = (reverse ((Nil)) @ (0::(4::(Nil))))
Simplifying took 0.000226 seconds
Result : true
advanced_generalize done


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(qreva (any_list3) ((any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 9


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(qreva (any_list3) ((any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list2:any list) (any_list3:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 10


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva ((Nil)) ((any1::(Nil))) @ any_list1) = (reverse ((Nil)) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 11


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva ((Nil)) ((any1::(Nil))) @ any_list1) = (reverse ((Nil)) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva ((any2::any_list3)) ((any1::(Nil))) @ any_list1) = (reverse ((any2::any_list3)) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 12


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva ((any2::any_list3)) ((any1::(Nil))) @ any_list1) = (reverse ((any2::any_list3)) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((reverse (any_list3) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro any1(rank:5)
intro any_list1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
=================================================
Progress: 13


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((reverse (any_list3) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((reverse (any_list3) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
=================================================
Progress: 14


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((reverse (any_list3) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((reverse (any_list3) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5)
=================================================
Progress: 15


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((reverse (any_list3) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
(qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((reverse (any_list3) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5)
=================================================
Progress: 16


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((reverse (any_list3) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
Lemma : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Model : any1: 4, any2: 0, any_list1: (Nil), any_list3: (0::(Nil))
Model : any1: 0, any2: 2, any_list1: (Nil), any_list3: (0::(Nil))
Model : any1: 1, any2: 8, any_list1: (7::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((0::(Nil))) ((0::(4::(Nil)))) @ (Nil)) = ((qreva ((0::(Nil))) ((0::(Nil))) @ (Nil)) @ (4::(Nil)))
(qreva ((0::(Nil))) ((2::(0::(Nil)))) @ (Nil)) = ((qreva ((0::(Nil))) ((2::(Nil))) @ (Nil)) @ (0::(Nil)))
(qreva ((Nil)) ((8::(1::(Nil)))) @ (7::(Nil))) = ((qreva ((Nil)) ((8::(Nil))) @ (Nil)) @ (1::(7::(Nil))))
Simplifying took 0.000850 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 17


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8)
=================================================
Progress: 18


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
(qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((reverse (any_list3) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
(qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
Lemma : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Model : any1: 0, any2: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 1, any_list1: (2::(7::(Nil))), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((6::(0::(Nil)))) @ (Nil)) = ((qreva ((Nil)) ((6::(Nil))) @ (Nil)) @ (0::(Nil)))
(qreva ((Nil)) ((6::(7::(Nil)))) @ (Nil)) = ((qreva ((Nil)) ((6::(Nil))) @ (Nil)) @ (7::(Nil)))
(qreva ((Nil)) ((1::(4::(Nil)))) @ (2::(7::(Nil)))) = ((qreva ((Nil)) ((1::(Nil))) @ (Nil)) @ (4::(2::(7::(Nil)))))
Simplifying took 0.000778 seconds
Result : true
advanced_generalize done
=================================================
Progress: 19


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (qreva ((Nil)) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva ((Nil)) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 20


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (qreva ((Nil)) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva ((Nil)) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (qreva ((any3::any_list3)) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva ((any3::any_list3)) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 21


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (qreva ((any3::any_list3)) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva ((any3::any_list3)) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:7)
intro any2(rank:7)
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:23)
=================================================
Progress: 22


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any2(rank:7)
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:23)
=================================================
Progress: 23


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:23)
=================================================
Progress: 24


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 25


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:7)
rewrite IH1 in goal at 0(rank:23)
=================================================
Progress: 26


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 27


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 28


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite IH1 in goal at 0
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 7, any2: 0, any3: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 8, any3: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 7, any3: 2, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((1::(0::(7::(Nil))))) @ (Nil)) = (((qreva ((Nil)) ((1::(Nil))) @ (Nil)) @ (0::(Nil))) @ (7::(Nil)))
(qreva ((Nil)) ((0::(8::(4::(Nil))))) @ (Nil)) = (((qreva ((Nil)) ((0::(Nil))) @ (Nil)) @ (8::(Nil))) @ (4::(Nil)))
(qreva ((Nil)) ((2::(7::(8::(Nil))))) @ (Nil)) = (((qreva ((Nil)) ((2::(Nil))) @ (Nil)) @ (7::(Nil))) @ (8::(Nil)))
Simplifying took 0.001098 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 29


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10)
=================================================
Progress: 30


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 31


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite IH1 in goal at 0
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 5, any2: 0, any3: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 5, any3: 2, any_list1: (7::(Nil)), any_list3: (8::(Nil))
Model : any1: 6, any2: 5, any3: 6, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((0::(0::(5::(Nil))))) @ (Nil)) = (((qreva ((Nil)) ((0::(Nil))) @ (Nil)) @ (0::(Nil))) @ (5::(Nil)))
(qreva ((8::(Nil))) ((2::(5::(0::(Nil))))) @ (7::(Nil))) = (((qreva ((8::(Nil))) ((2::(Nil))) @ (Nil)) @ (5::(Nil))) @ (0::(7::(Nil))))
(qreva ((Nil)) ((6::(5::(6::(Nil))))) @ (Nil)) = (((qreva ((Nil)) ((6::(Nil))) @ (Nil)) @ (5::(Nil))) @ (6::(Nil)))
Simplifying took 0.001386 seconds
Result : true
advanced_generalize done
=================================================
Progress: 32


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite IH1 in goal at 0
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 0, any2: 8, any3: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 2, any3: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 0, any3: 3, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((0::(8::(0::(Nil))))) @ (Nil)) = (((qreva ((Nil)) ((0::(Nil))) @ (Nil)) @ (8::(Nil))) @ (0::(Nil)))
(qreva ((Nil)) ((4::(2::(2::(Nil))))) @ (Nil)) = (((qreva ((Nil)) ((4::(Nil))) @ (Nil)) @ (2::(Nil))) @ (2::(Nil)))
(qreva ((Nil)) ((3::(0::(2::(Nil))))) @ (Nil)) = (((qreva ((Nil)) ((3::(Nil))) @ (Nil)) @ (0::(Nil))) @ (2::(Nil)))
Simplifying took 0.000900 seconds
Result : true
advanced_generalize done
=================================================
Progress: 33


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list2) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
(qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite IH1 in goal at 0
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 0, any2: 8, any3: 8, any_list1: (0::(Nil)), any_list3: (4::(Nil))
Model : any1: 2, any2: 7, any3: 1, any_list1: (0::(Nil)), any_list3: (6::(Nil))
Model : any1: 3, any2: 3, any3: 0, any_list1: (6::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((4::(Nil))) ((8::(8::(0::(Nil))))) @ (0::(Nil))) = (((qreva ((4::(Nil))) ((8::(Nil))) @ (Nil)) @ (8::(Nil))) @ (0::(0::(Nil))))
(qreva ((6::(Nil))) ((1::(7::(2::(Nil))))) @ (0::(Nil))) = (((qreva ((6::(Nil))) ((1::(Nil))) @ (Nil)) @ (7::(Nil))) @ (2::(0::(Nil))))
(qreva ((Nil)) ((0::(3::(3::(Nil))))) @ (6::(Nil))) = (((qreva ((Nil)) ((0::(Nil))) @ (Nil)) @ (3::(Nil))) @ (3::(6::(Nil))))
Simplifying took 0.001871 seconds
Result : true
advanced_generalize done
=================================================
Progress: 34


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva ((Nil)) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva ((Nil)) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 35


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva ((Nil)) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva ((Nil)) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva ((any4::any_list3)) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva ((any4::any_list3)) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 36


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva ((any4::any_list3)) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva ((any4::any_list3)) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any1(rank:9)
intro any2(rank:9)
intro any3(rank:9)
intro any_list1(rank:9)
=================================================
Progress: 37


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any2(rank:9)
intro any3(rank:9)
intro any_list1(rank:9)
=================================================
Progress: 38


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any3(rank:9)
intro any_list1(rank:9)
=================================================
Progress: 39


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:9)
=================================================
Progress: 40


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 2, any2: 1, any3: 8, any4: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 0, any3: 1, any4: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 3, any3: 2, any4: 1, any_list1: (Nil), any_list3: (6::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((3::(8::(1::(2::(Nil)))))) @ (Nil)) = (((qreva ((Nil)) ((3::(8::(Nil)))) @ (Nil)) @ (1::(Nil))) @ (2::(Nil)))
(qreva ((Nil)) ((3::(1::(0::(5::(Nil)))))) @ (Nil)) = (((qreva ((Nil)) ((3::(1::(Nil)))) @ (Nil)) @ (0::(Nil))) @ (5::(Nil)))
(qreva ((6::(Nil))) ((1::(2::(3::(5::(Nil)))))) @ (Nil)) = (((qreva ((6::(Nil))) ((1::(2::(Nil)))) @ (Nil)) @ (3::(Nil))) @ (5::(Nil)))
Simplifying took 0.002141 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 41


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 42


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any3(rank:9)
intro any_list1(rank:9)
=================================================
Progress: 43


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:9)
=================================================
Progress: 44


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 0, any2: 5, any3: 8, any4: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 0, any3: 8, any4: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 7, any3: 4, any4: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((0::(8::(5::(0::(Nil)))))) @ (Nil)) = (((qreva ((Nil)) ((0::(8::(Nil)))) @ (Nil)) @ (5::(Nil))) @ (0::(Nil)))
(qreva ((Nil)) ((4::(8::(0::(5::(Nil)))))) @ (Nil)) = (((qreva ((Nil)) ((4::(8::(Nil)))) @ (Nil)) @ (0::(Nil))) @ (5::(Nil)))
(qreva ((Nil)) ((0::(4::(7::(1::(Nil)))))) @ (Nil)) = (((qreva ((Nil)) ((0::(4::(Nil)))) @ (Nil)) @ (7::(Nil))) @ (1::(Nil)))
Simplifying took 0.001679 seconds
Result : true
advanced_generalize done
=================================================
Progress: 45


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:9)
=================================================
Progress: 46


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 1, any2: 3, any3: 4, any4: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 2, any3: 0, any4: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 5, any3: 1, any4: 5, any_list1: (3::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((2::(4::(3::(1::(Nil)))))) @ (Nil)) = (((qreva ((Nil)) ((2::(4::(Nil)))) @ (Nil)) @ (3::(Nil))) @ (1::(Nil)))
(qreva ((Nil)) ((0::(0::(2::(3::(Nil)))))) @ (Nil)) = (((qreva ((Nil)) ((0::(0::(Nil)))) @ (Nil)) @ (2::(Nil))) @ (3::(Nil)))
(qreva ((Nil)) ((5::(1::(5::(2::(Nil)))))) @ (3::(Nil))) = (((qreva ((Nil)) ((5::(1::(Nil)))) @ (Nil)) @ (5::(Nil))) @ (2::(3::(Nil))))
Simplifying took 0.001501 seconds
Result : true
advanced_generalize done
=================================================
Progress: 47


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 2, any2: 0, any3: 1, any4: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 5, any3: 1, any4: 6, any_list1: (Nil), any_list3: (1::(Nil))
Model : any1: 3, any2: 3, any3: 7, any4: 4, any_list1: (6::(5::(Nil))), any_list3: (4::(0::(Nil)))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((7::(1::(0::(2::(Nil)))))) @ (Nil)) = (((qreva ((Nil)) ((7::(1::(Nil)))) @ (Nil)) @ (0::(Nil))) @ (2::(Nil)))
(qreva ((1::(Nil))) ((6::(1::(5::(1::(Nil)))))) @ (Nil)) = (((qreva ((1::(Nil))) ((6::(1::(Nil)))) @ (Nil)) @ (5::(Nil))) @ (1::(Nil)))
(qreva ((4::(0::(Nil)))) ((4::(7::(3::(3::(Nil)))))) @ (6::(5::(Nil)))) = (((qreva ((4::(0::(Nil)))) ((4::(7::(Nil)))) @ (Nil)) @ (3::(Nil))) @ (3::(6::(5::(Nil)))))
Simplifying took 0.003147 seconds
Result : true
advanced_generalize done
=================================================
Progress: 48


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:9)
=================================================
Progress: 49


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 0, any2: 1, any3: 7, any4: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 2, any3: 4, any4: 3, any_list1: (6::(6::(Nil))), any_list3: (Nil)
Model : any1: 2, any2: 4, any3: 4, any4: 6, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((8::(7::(1::(0::(Nil)))))) @ (Nil)) = (((qreva ((Nil)) ((8::(7::(Nil)))) @ (Nil)) @ (1::(Nil))) @ (0::(Nil)))
(qreva ((Nil)) ((3::(4::(2::(2::(Nil)))))) @ (6::(6::(Nil)))) = (((qreva ((Nil)) ((3::(4::(Nil)))) @ (Nil)) @ (2::(Nil))) @ (2::(6::(6::(Nil)))))
(qreva ((Nil)) ((6::(4::(4::(2::(Nil)))))) @ (Nil)) = (((qreva ((Nil)) ((6::(4::(Nil)))) @ (Nil)) @ (4::(Nil))) @ (2::(Nil)))
Simplifying took 0.001907 seconds
Result : true
advanced_generalize done
=================================================
Progress: 50


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 5, any2: 8, any3: 1, any4: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 7, any3: 4, any4: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 6, any3: 0, any4: 1, any_list1: (6::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((5::(1::(8::(5::(Nil)))))) @ (Nil)) = (((qreva ((Nil)) ((5::(1::(Nil)))) @ (Nil)) @ (8::(Nil))) @ (5::(Nil)))
(qreva ((Nil)) ((1::(4::(7::(1::(Nil)))))) @ (Nil)) = (((qreva ((Nil)) ((1::(4::(Nil)))) @ (Nil)) @ (7::(Nil))) @ (1::(Nil)))
(qreva ((Nil)) ((1::(0::(6::(2::(Nil)))))) @ (6::(Nil))) = (((qreva ((Nil)) ((1::(0::(Nil)))) @ (Nil)) @ (6::(Nil))) @ (2::(6::(Nil))))
Simplifying took 0.001882 seconds
Result : true
advanced_generalize done
=================================================
Progress: 51


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 3, any2: 1, any3: 6, any4: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 7, any3: 5, any4: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 4, any3: 1, any4: 3, any_list1: (0::(Nil)), any_list3: (5::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((6::(6::(1::(3::(Nil)))))) @ (Nil)) = (((qreva ((Nil)) ((6::(6::(Nil)))) @ (Nil)) @ (1::(Nil))) @ (3::(Nil)))
(qreva ((Nil)) ((3::(5::(7::(4::(Nil)))))) @ (Nil)) = (((qreva ((Nil)) ((3::(5::(Nil)))) @ (Nil)) @ (7::(Nil))) @ (4::(Nil)))
(qreva ((5::(Nil))) ((3::(1::(4::(8::(Nil)))))) @ (0::(Nil))) = (((qreva ((5::(Nil))) ((3::(1::(Nil)))) @ (Nil)) @ (4::(Nil))) @ (8::(0::(Nil))))
Simplifying took 0.002341 seconds
Result : true
advanced_generalize done
=================================================
Progress: 52


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list2) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1) = (((qreva (any_list3) ((any3::(Nil))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
(qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 1, any2: 3, any3: 0, any4: 7, any_list1: (Nil), any_list3: (1::(Nil))
Model : any1: 7, any2: 3, any3: 4, any4: 4, any_list1: (8::(Nil)), any_list3: (Nil)
Model : any1: 7, any2: 0, any3: 8, any4: 2, any_list1: (8::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((1::(Nil))) ((7::(0::(3::(1::(Nil)))))) @ (Nil)) = (((qreva ((1::(Nil))) ((7::(0::(Nil)))) @ (Nil)) @ (3::(Nil))) @ (1::(Nil)))
(qreva ((Nil)) ((4::(4::(3::(7::(Nil)))))) @ (8::(Nil))) = (((qreva ((Nil)) ((4::(4::(Nil)))) @ (Nil)) @ (3::(Nil))) @ (7::(8::(Nil))))
(qreva ((Nil)) ((2::(8::(0::(7::(Nil)))))) @ (8::(Nil))) = (((qreva ((Nil)) ((2::(8::(Nil)))) @ (Nil)) @ (0::(Nil))) @ (7::(8::(Nil))))
Simplifying took 0.002260 seconds
Result : true
advanced_generalize done
=================================================
Progress: 53


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = qreva (any_list3) ((any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Lemma : forall (any1:any) (any_list2:any list) (arg1:any list), ((arg1 @ (any1::(Nil))) @ any_list2) = (arg1 @ (any1::any_list2))
Model : any1: 0, any_list2: (3::(Nil)), arg1: (Nil)
Model : any1: 3, any_list2: (Nil), arg1: (7::(1::(Nil)))
Model : any1: 7, any_list2: (Nil), arg1: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(((Nil) @ (0::(Nil))) @ (3::(Nil))) = ((Nil) @ (0::(3::(Nil))))
(((7::(1::(Nil))) @ (3::(Nil))) @ (Nil)) = ((7::(1::(Nil))) @ (3::(Nil)))
(((Nil) @ (7::(Nil))) @ (Nil)) = ((Nil) @ (7::(Nil)))
Simplifying took 0.000452 seconds
Result : true
advanced_generalize done


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 54


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list2:any list) (arg1:any list), ((arg1 @ (any1::(Nil))) @ any_list2) = (arg1 @ (any1::any_list2))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 55


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (((Nil) @ (any1::(Nil))) @ any_list1) = ((Nil) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 56


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (((Nil) @ (any1::(Nil))) @ any_list1) = ((Nil) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((any2::any_list3) @ (any1::(Nil))) @ any_list1) = ((any2::any_list3) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 57


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((any2::any_list3) @ (any1::(Nil))) @ any_list1) = ((any2::any_list3) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro any1(rank:5)
rewrite IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 2(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
intro any_list1(rank:5)
=================================================
Progress: 58


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro any_list1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
rewrite <- IH1 in goal at 2(rank:13)
rewrite IH1 in goal at 0(rank:13)
=================================================
Progress: 59


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 2(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
=================================================
Progress: 60


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
(any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 2(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
=================================================
Progress: 61


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = qreva (any_list3) ((any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(qreva (any_list3) ((any1::(Nil))) @ any_list2) = qreva (any_list3) ((any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
rewrite IH1 in goal at 0
Lemma : forall (any1:any) (any_list2:any list) (any_list3:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list2) = qreva (any_list3) ((any1::any_list2))
Model : any1: 3, any_list2: (7::(Nil)), any_list3: (Nil)
Model : any1: 6, any_list2: (Nil), any_list3: (Nil)
Model : any1: 7, any_list2: (Nil), any_list3: (7::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((3::(Nil))) @ (7::(Nil))) = qreva ((Nil)) ((3::(7::(Nil))))
(qreva ((Nil)) ((6::(Nil))) @ (Nil)) = qreva ((Nil)) ((6::(Nil)))
(qreva ((7::(Nil))) ((7::(Nil))) @ (Nil)) = qreva ((7::(Nil))) ((7::(Nil)))
Simplifying took 0.000444 seconds
Result : true
advanced_generalize done


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(qreva (any_list3) ((any1::(Nil))) @ any_list2) = qreva (any_list3) ((any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 62


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(qreva (any_list3) ((any1::(Nil))) @ any_list2) = qreva (any_list3) ((any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list2:any list) (any_list3:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list2) = qreva (any_list3) ((any1::any_list2))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = qreva (any_list2) ((any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = qreva (any_list2) ((any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 63


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = qreva (any_list2) ((any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = qreva (any_list2) ((any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = qreva (any_list2) ((any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva ((Nil)) ((any1::(Nil))) @ any_list1) = qreva ((Nil)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 64


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = qreva (any_list2) ((any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva ((Nil)) ((any1::(Nil))) @ any_list1) = qreva ((Nil)) ((any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = qreva (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = qreva (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva ((any2::any_list3)) ((any1::(Nil))) @ any_list1) = qreva ((any2::any_list3)) ((any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 65


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = qreva (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = qreva (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva ((any2::any_list3)) ((any1::(Nil))) @ any_list1) = qreva ((any2::any_list3)) ((any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = qreva (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = qreva (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = qreva (any_list3) ((any2::(any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro any1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
rewrite <- IH1 in goal at 2(rank:21)
intro any_list1(rank:5)
=================================================
Progress: 66


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = qreva (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = qreva (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = qreva (any_list3) ((any2::(any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = qreva (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = qreva (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = qreva (any_list3) ((any2::(any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
rewrite <- IH1 in goal at 2(rank:21)
=================================================
Progress: 67


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = qreva (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = qreva (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = qreva (any_list3) ((any2::(any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = qreva (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = qreva (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = qreva (any_list3) ((any2::(any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
rewrite <- IH1 in goal at 2(rank:21)
=================================================
Progress: 68


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = qreva (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = qreva (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = qreva (any_list3) ((any2::(any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = qreva (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = qreva (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
(qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = qreva (any_list3) ((any2::(any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
rewrite <- IH1 in goal at 2(rank:21)
=================================================
Progress: 69


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = qreva (any_list3) ((any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
rewrite <- IH1 in goal at 0
Lemma : forall (any1:any) (any_list2:any list) (arg2:any list), ((arg2 @ (any1::(Nil))) @ any_list2) = (arg2 @ (any1::any_list2))
Model : any1: 0, any_list2: (Nil), arg2: (Nil)
Model : any1: 2, any_list2: (Nil), arg2: (Nil)
Model : any1: 0, any_list2: (Nil), arg2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(((Nil) @ (0::(Nil))) @ (Nil)) = ((Nil) @ (0::(Nil)))
(((Nil) @ (2::(Nil))) @ (Nil)) = ((Nil) @ (2::(Nil)))
(((Nil) @ (0::(Nil))) @ (Nil)) = ((Nil) @ (0::(Nil)))
Simplifying took 0.000126 seconds
Result : true
advanced_generalize done


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 70


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list2:any list) (arg2:any list), ((arg2 @ (any1::(Nil))) @ any_list2) = (arg2 @ (any1::any_list2))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 71


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (((Nil) @ (any1::(Nil))) @ any_list1) = ((Nil) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 72


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (((Nil) @ (any1::(Nil))) @ any_list1) = ((Nil) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((any2::any_list3) @ (any1::(Nil))) @ any_list1) = ((any2::any_list3) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 73


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((any2::any_list3) @ (any1::(Nil))) @ any_list1) = ((any2::any_list3) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro any1(rank:5)
rewrite IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 2(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
intro any_list1(rank:5)
=================================================
Progress: 74


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro any_list1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
rewrite <- IH1 in goal at 2(rank:13)
rewrite IH1 in goal at 0(rank:13)
=================================================
Progress: 75


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 2(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
=================================================
Progress: 76


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
(any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 2(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
=================================================
Progress: 77


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva ((Nil)) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva ((Nil)) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 78


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva ((Nil)) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva ((Nil)) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

1 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva ((any5::any_list3)) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva ((any5::any_list3)) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 79


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva ((any5::any_list3)) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva ((any5::any_list3)) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 5
intro any1(rank:11)
intro any3(rank:11)
intro any4(rank:11)
intro any_list1(rank:11)
intro any2(rank:11)
=================================================
Progress: 80


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any2(rank:11)
intro any3(rank:11)
intro any4(rank:11)
intro any_list1(rank:11)
=================================================
Progress: 81


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any3(rank:11)
intro any4(rank:11)
intro any_list1(rank:11)
=================================================
Progress: 82


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any4(rank:11)
intro any_list1(rank:11)
=================================================
Progress: 83


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:11)
=================================================
Progress: 84


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 8, any2: 3, any3: 0, any4: 5, any5: 0, any_list1: (Nil), any_list3: (1::(Nil))
Model : any1: 5, any2: 2, any3: 7, any4: 4, any5: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 6, any2: 7, any3: 8, any4: 0, any5: 0, any_list1: (Nil), any_list3: (2::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((1::(Nil))) ((0::(5::(0::(3::(8::(Nil))))))) @ (Nil)) = (((qreva ((1::(Nil))) ((0::(5::(0::(Nil))))) @ (Nil)) @ (3::(Nil))) @ (8::(Nil)))
(qreva ((Nil)) ((0::(4::(7::(2::(5::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((0::(4::(7::(Nil))))) @ (Nil)) @ (2::(Nil))) @ (5::(Nil)))
(qreva ((2::(Nil))) ((0::(0::(8::(7::(6::(Nil))))))) @ (Nil)) = (((qreva ((2::(Nil))) ((0::(0::(8::(Nil))))) @ (Nil)) @ (7::(Nil))) @ (6::(Nil)))
Simplifying took 0.003405 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 85


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 86


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any3(rank:11)
intro any4(rank:11)
intro any_list1(rank:11)
=================================================
Progress: 87


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any4(rank:11)
intro any_list1(rank:11)
=================================================
Progress: 88


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:11)
=================================================
Progress: 89


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 3, any2: 0, any3: 2, any4: 0, any5: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 0, any3: 4, any4: 3, any5: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 6, any3: 1, any4: 2, any5: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((0::(0::(2::(0::(3::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((0::(0::(2::(Nil))))) @ (Nil)) @ (0::(Nil))) @ (3::(Nil)))
(qreva ((Nil)) ((8::(3::(4::(0::(3::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((8::(3::(4::(Nil))))) @ (Nil)) @ (0::(Nil))) @ (3::(Nil)))
(qreva ((Nil)) ((0::(2::(1::(6::(4::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((0::(2::(1::(Nil))))) @ (Nil)) @ (6::(Nil))) @ (4::(Nil)))
Simplifying took 0.002086 seconds
Result : true
advanced_generalize done
=================================================
Progress: 90


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any4(rank:11)
intro any_list1(rank:11)
=================================================
Progress: 91


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:11)
=================================================
Progress: 92


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 3, any2: 1, any3: 2, any4: 3, any5: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 8, any3: 4, any4: 5, any5: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 8, any3: 1, any4: 1, any5: 3, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((7::(3::(2::(1::(3::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((7::(3::(2::(Nil))))) @ (Nil)) @ (1::(Nil))) @ (3::(Nil)))
(qreva ((Nil)) ((6::(5::(4::(8::(5::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((6::(5::(4::(Nil))))) @ (Nil)) @ (8::(Nil))) @ (5::(Nil)))
(qreva ((Nil)) ((3::(1::(1::(8::(4::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((3::(1::(1::(Nil))))) @ (Nil)) @ (8::(Nil))) @ (4::(Nil)))
Simplifying took 0.002596 seconds
Result : true
advanced_generalize done
=================================================
Progress: 93


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:11)
=================================================
Progress: 94


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 1, any2: 6, any3: 1, any4: 8, any5: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 7, any3: 0, any4: 2, any5: 3, any_list1: (Nil), any_list3: (6::(Nil))
Model : any1: 0, any2: 0, any3: 3, any4: 0, any5: 0, any_list1: (4::(2::(5::(Nil)))), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((2::(8::(1::(6::(1::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((2::(8::(1::(Nil))))) @ (Nil)) @ (6::(Nil))) @ (1::(Nil)))
(qreva ((6::(Nil))) ((3::(2::(0::(7::(0::(Nil))))))) @ (Nil)) = (((qreva ((6::(Nil))) ((3::(2::(0::(Nil))))) @ (Nil)) @ (7::(Nil))) @ (0::(Nil)))
(qreva ((Nil)) ((0::(0::(3::(0::(0::(Nil))))))) @ (4::(2::(5::(Nil))))) = (((qreva ((Nil)) ((0::(0::(3::(Nil))))) @ (Nil)) @ (0::(Nil))) @ (0::(4::(2::(5::(Nil))))))
Simplifying took 0.002798 seconds
Result : true
advanced_generalize done
=================================================
Progress: 95


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 0, any2: 2, any3: 4, any4: 7, any5: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 3, any3: 2, any4: 4, any5: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 5, any3: 0, any4: 4, any5: 5, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((3::(7::(4::(2::(0::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((3::(7::(4::(Nil))))) @ (Nil)) @ (2::(Nil))) @ (0::(Nil)))
(qreva ((Nil)) ((8::(4::(2::(3::(8::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((8::(4::(2::(Nil))))) @ (Nil)) @ (3::(Nil))) @ (8::(Nil)))
(qreva ((Nil)) ((5::(4::(0::(5::(1::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((5::(4::(0::(Nil))))) @ (Nil)) @ (5::(Nil))) @ (1::(Nil)))
Simplifying took 0.002479 seconds
Result : true
advanced_generalize done
=================================================
Progress: 96


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any4(rank:11)
intro any_list1(rank:11)
=================================================
Progress: 97


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:11)
=================================================
Progress: 98


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 2, any2: 0, any3: 7, any4: 7, any5: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 6, any3: 1, any4: 1, any5: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 5, any3: 3, any4: 7, any5: 6, any_list1: (Nil), any_list3: (5::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((6::(7::(7::(0::(2::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((6::(7::(7::(Nil))))) @ (Nil)) @ (0::(Nil))) @ (2::(Nil)))
(qreva ((Nil)) ((0::(1::(1::(6::(3::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((0::(1::(1::(Nil))))) @ (Nil)) @ (6::(Nil))) @ (3::(Nil)))
(qreva ((5::(Nil))) ((6::(7::(3::(5::(2::(Nil))))))) @ (Nil)) = (((qreva ((5::(Nil))) ((6::(7::(3::(Nil))))) @ (Nil)) @ (5::(Nil))) @ (2::(Nil)))
Simplifying took 0.003146 seconds
Result : true
advanced_generalize done
=================================================
Progress: 99


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:11)
=================================================
Progress: 100


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 3, any2: 4, any3: 7, any4: 2, any5: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 3, any3: 0, any4: 8, any5: 5, any_list1: (0::(1::(Nil))), any_list3: (3::(Nil))
Model : any1: 4, any2: 1, any3: 5, any4: 0, any5: 7, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((5::(2::(7::(4::(3::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((5::(2::(7::(Nil))))) @ (Nil)) @ (4::(Nil))) @ (3::(Nil)))
(qreva ((3::(Nil))) ((5::(8::(0::(3::(8::(Nil))))))) @ (0::(1::(Nil)))) = (((qreva ((3::(Nil))) ((5::(8::(0::(Nil))))) @ (Nil)) @ (3::(Nil))) @ (8::(0::(1::(Nil)))))
(qreva ((Nil)) ((7::(0::(5::(1::(4::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((7::(0::(5::(Nil))))) @ (Nil)) @ (1::(Nil))) @ (4::(Nil)))
Simplifying took 0.003235 seconds
Result : true
advanced_generalize done
=================================================
Progress: 101


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 0, any2: 0, any3: 5, any4: 8, any5: 5, any_list1: (Nil), any_list3: (2::(Nil))
Model : any1: 0, any2: 0, any3: 5, any4: 8, any5: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 3, any3: 3, any4: 0, any5: 8, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((2::(Nil))) ((5::(8::(5::(0::(0::(Nil))))))) @ (Nil)) = (((qreva ((2::(Nil))) ((5::(8::(5::(Nil))))) @ (Nil)) @ (0::(Nil))) @ (0::(Nil)))
(qreva ((Nil)) ((4::(8::(5::(0::(0::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((4::(8::(5::(Nil))))) @ (Nil)) @ (0::(Nil))) @ (0::(Nil)))
(qreva ((Nil)) ((8::(0::(3::(3::(0::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((8::(0::(3::(Nil))))) @ (Nil)) @ (3::(Nil))) @ (0::(Nil)))
Simplifying took 0.002807 seconds
Result : true
advanced_generalize done
=================================================
Progress: 102


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:11)
=================================================
Progress: 103


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 4, any2: 6, any3: 5, any4: 4, any5: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 0, any3: 3, any4: 5, any5: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 5, any3: 4, any4: 4, any5: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((8::(4::(5::(6::(4::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((8::(4::(5::(Nil))))) @ (Nil)) @ (6::(Nil))) @ (4::(Nil)))
(qreva ((Nil)) ((1::(5::(3::(0::(0::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((1::(5::(3::(Nil))))) @ (Nil)) @ (0::(Nil))) @ (0::(Nil)))
(qreva ((Nil)) ((0::(4::(4::(5::(5::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((0::(4::(4::(Nil))))) @ (Nil)) @ (5::(Nil))) @ (5::(Nil)))
Simplifying took 0.002527 seconds
Result : true
advanced_generalize done
=================================================
Progress: 104


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 7, any2: 0, any3: 2, any4: 0, any5: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 2, any3: 7, any4: 0, any5: 0, any_list1: (7::(Nil)), any_list3: (Nil)
Model : any1: 6, any2: 8, any3: 8, any4: 6, any5: 4, any_list1: (Nil), any_list3: (3::(5::(Nil)))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((2::(0::(2::(0::(7::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((2::(0::(2::(Nil))))) @ (Nil)) @ (0::(Nil))) @ (7::(Nil)))
(qreva ((Nil)) ((0::(0::(7::(2::(8::(Nil))))))) @ (7::(Nil))) = (((qreva ((Nil)) ((0::(0::(7::(Nil))))) @ (Nil)) @ (2::(Nil))) @ (8::(7::(Nil))))
(qreva ((3::(5::(Nil)))) ((4::(6::(8::(8::(6::(Nil))))))) @ (Nil)) = (((qreva ((3::(5::(Nil)))) ((4::(6::(8::(Nil))))) @ (Nil)) @ (8::(Nil))) @ (6::(Nil)))
Simplifying took 0.004197 seconds
Result : true
advanced_generalize done
=================================================
Progress: 105


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 0, any2: 8, any3: 5, any4: 1, any5: 4, any_list1: (Nil), any_list3: (2::(0::(Nil)))
Model : any1: 6, any2: 4, any3: 6, any4: 0, any5: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 6, any3: 2, any4: 1, any5: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((2::(0::(Nil)))) ((4::(1::(5::(8::(0::(Nil))))))) @ (Nil)) = (((qreva ((2::(0::(Nil)))) ((4::(1::(5::(Nil))))) @ (Nil)) @ (8::(Nil))) @ (0::(Nil)))
(qreva ((Nil)) ((2::(0::(6::(4::(6::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((2::(0::(6::(Nil))))) @ (Nil)) @ (4::(Nil))) @ (6::(Nil)))
(qreva ((Nil)) ((0::(1::(2::(6::(2::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((0::(1::(2::(Nil))))) @ (Nil)) @ (6::(Nil))) @ (2::(Nil)))
Simplifying took 0.003302 seconds
Result : true
advanced_generalize done
=================================================
Progress: 106


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:11)
=================================================
Progress: 107


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 8, any2: 8, any3: 8, any4: 3, any5: 8, any_list1: (7::(Nil)), any_list3: (Nil)
Model : any1: 8, any2: 0, any3: 4, any4: 4, any5: 0, any_list1: (Nil), any_list3: (6::(Nil))
Model : any1: 6, any2: 3, any3: 8, any4: 1, any5: 4, any_list1: (2::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((8::(3::(8::(8::(8::(Nil))))))) @ (7::(Nil))) = (((qreva ((Nil)) ((8::(3::(8::(Nil))))) @ (Nil)) @ (8::(Nil))) @ (8::(7::(Nil))))
(qreva ((6::(Nil))) ((0::(4::(4::(0::(8::(Nil))))))) @ (Nil)) = (((qreva ((6::(Nil))) ((0::(4::(4::(Nil))))) @ (Nil)) @ (0::(Nil))) @ (8::(Nil)))
(qreva ((Nil)) ((4::(1::(8::(3::(6::(Nil))))))) @ (2::(Nil))) = (((qreva ((Nil)) ((4::(1::(8::(Nil))))) @ (Nil)) @ (3::(Nil))) @ (6::(2::(Nil))))
Simplifying took 0.003622 seconds
Result : true
advanced_generalize done
=================================================
Progress: 108


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 5, any2: 7, any3: 0, any4: 0, any5: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 8, any3: 0, any4: 5, any5: 6, any_list1: (1::(Nil)), any_list3: (Nil)
Model : any1: 5, any2: 1, any3: 5, any4: 4, any5: 2, any_list1: (0::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((5::(0::(0::(7::(5::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((5::(0::(0::(Nil))))) @ (Nil)) @ (7::(Nil))) @ (5::(Nil)))
(qreva ((Nil)) ((6::(5::(0::(8::(0::(Nil))))))) @ (1::(Nil))) = (((qreva ((Nil)) ((6::(5::(0::(Nil))))) @ (Nil)) @ (8::(Nil))) @ (0::(1::(Nil))))
(qreva ((Nil)) ((2::(4::(5::(1::(5::(Nil))))))) @ (0::(Nil))) = (((qreva ((Nil)) ((2::(4::(5::(Nil))))) @ (Nil)) @ (1::(Nil))) @ (5::(0::(Nil))))
Simplifying took 0.002624 seconds
Result : true
advanced_generalize done
=================================================
Progress: 109


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 5, any2: 1, any3: 0, any4: 8, any5: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 6, any2: 1, any3: 8, any4: 7, any5: 5, any_list1: (Nil), any_list3: (7::(Nil))
Model : any1: 8, any2: 2, any3: 3, any4: 4, any5: 7, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((1::(8::(0::(1::(5::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((1::(8::(0::(Nil))))) @ (Nil)) @ (1::(Nil))) @ (5::(Nil)))
(qreva ((7::(Nil))) ((5::(7::(8::(1::(6::(Nil))))))) @ (Nil)) = (((qreva ((7::(Nil))) ((5::(7::(8::(Nil))))) @ (Nil)) @ (1::(Nil))) @ (6::(Nil)))
(qreva ((Nil)) ((7::(4::(3::(2::(8::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((7::(4::(3::(Nil))))) @ (Nil)) @ (2::(Nil))) @ (8::(Nil)))
Simplifying took 0.003363 seconds
Result : true
advanced_generalize done
=================================================
Progress: 110


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 8, any2: 6, any3: 2, any4: 5, any5: 7, any_list1: (8::(Nil)), any_list3: (0::(5::(0::(5::(Nil)))))
Model : any1: 2, any2: 8, any3: 0, any4: 6, any5: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 4, any3: 2, any4: 0, any5: 8, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((0::(5::(0::(5::(Nil)))))) ((7::(5::(2::(6::(8::(Nil))))))) @ (8::(Nil))) = (((qreva ((0::(5::(0::(5::(Nil)))))) ((7::(5::(2::(Nil))))) @ (Nil)) @ (6::(Nil))) @ (8::(8::(Nil))))
(qreva ((Nil)) ((0::(6::(0::(8::(2::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((0::(6::(0::(Nil))))) @ (Nil)) @ (8::(Nil))) @ (2::(Nil)))
(qreva ((Nil)) ((8::(0::(2::(4::(3::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((8::(0::(2::(Nil))))) @ (Nil)) @ (4::(Nil))) @ (3::(Nil)))
Simplifying took 0.005354 seconds
Result : true
advanced_generalize done
=================================================
Progress: 111


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list2) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), (qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1) = (((qreva (any_list3) ((any4::(any3::(Nil)))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
(qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1) = (((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (Nil)) @ (any2::(Nil))) @ (any1::any_list1))
Model : any1: 6, any2: 8, any3: 4, any4: 0, any5: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 5, any3: 0, any4: 4, any5: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 5, any3: 7, any4: 0, any5: 1, any_list1: (Nil), any_list3: (0::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((7::(0::(4::(8::(6::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((7::(0::(4::(Nil))))) @ (Nil)) @ (8::(Nil))) @ (6::(Nil)))
(qreva ((Nil)) ((6::(4::(0::(5::(3::(Nil))))))) @ (Nil)) = (((qreva ((Nil)) ((6::(4::(0::(Nil))))) @ (Nil)) @ (5::(Nil))) @ (3::(Nil)))
(qreva ((0::(Nil))) ((1::(0::(7::(5::(5::(Nil))))))) @ (Nil)) = (((qreva ((0::(Nil))) ((1::(0::(7::(Nil))))) @ (Nil)) @ (5::(Nil))) @ (5::(Nil)))
Simplifying took 0.003091 seconds
Result : true
advanced_generalize done
=================================================
Progress: 112


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((reverse (any_list3) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Lemma : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Model : any1: 5, any2: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 6, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((4::(5::(Nil)))) @ (Nil)) = ((qreva ((Nil)) ((4::(Nil))) @ (Nil)) @ (5::(Nil)))
(qreva ((Nil)) ((8::(5::(Nil)))) @ (Nil)) = ((qreva ((Nil)) ((8::(Nil))) @ (Nil)) @ (5::(Nil)))
(qreva ((Nil)) ((6::(0::(Nil)))) @ (Nil)) = ((qreva ((Nil)) ((6::(Nil))) @ (Nil)) @ (0::(Nil)))
Simplifying took 0.000642 seconds
Result : true
advanced_generalize done
=================================================
Progress: 113


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((reverse (any_list3) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (qreva (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (qreva (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite <- IH1 in goal at 0
Lemma : forall (any1:any) (any2:any) (any_list1:any list) (any_list3:any list), (qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1) = ((qreva (any_list3) ((any2::(Nil))) @ (Nil)) @ (any1::any_list1))
Model : any1: 7, any2: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 3, any_list1: (4::(4::(Nil))), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(qreva ((Nil)) ((1::(7::(Nil)))) @ (Nil)) = ((qreva ((Nil)) ((1::(Nil))) @ (Nil)) @ (7::(Nil)))
(qreva ((Nil)) ((6::(7::(Nil)))) @ (Nil)) = ((qreva ((Nil)) ((6::(Nil))) @ (Nil)) @ (7::(Nil)))
(qreva ((Nil)) ((3::(7::(Nil)))) @ (4::(4::(Nil)))) = ((qreva ((Nil)) ((3::(Nil))) @ (Nil)) @ (7::(4::(4::(Nil)))))
Simplifying took 0.000827 seconds
Result : true
advanced_generalize done
=================================================
Progress: 114


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any_list3 @ (any1::any_list1))) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 115


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any_list3 @ (any1::any_list1))) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 15
Tactic List : 6
intro any_list2(rank:3)
rewrite lemma3 in goal at 0(rank:11)
rewrite <- lemma3 in goal at 0(rank:11)
rewrite <- lemma3 in goal at 2(rank:11)
rewrite <- lemma3 in goal at 1(rank:19)
rewrite IH1 in goal at 1(rank:19)
=================================================
Progress: 116


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> intro any_list2(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:11)
rewrite <- lemma3 in goal at 0(rank:11)
rewrite <- lemma3 in goal at 1(rank:19)
rewrite <- lemma3 in goal at 2(rank:11)
rewrite IH1 in goal at 1(rank:19)
=================================================
Progress: 117


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (reverse (any_list3) @ (any1::any_list2)) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0)
=================================================
Progress: 118


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = qreva (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (reverse (any_list3) @ (any1::any_list2)) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0)


No conjecture
Proof Success
Proof
assert forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = qreva (any_list1) (any_list2)
induction any_list1
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
assert forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
induction any_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
Qed
File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
