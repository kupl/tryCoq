Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list) (y:any list), even (plus (x) (y)) = even (plus (y) (x))(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (plus (any_list1) (any_list2)) = even (plus (any_list2) (any_list1))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), even (plus (any_list1) (any_list2)) = even (plus (any_list2) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:12)
induction any_list2(rank:12)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list) (any_list2:any list), even (plus (any_list1) (any_list2)) = even (plus (any_list2) (any_list1))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), even (plus (any_list1) (any_list2)) = even (plus (any_list2) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (plus (any_list1) (any_list2)) = even (plus (any_list2) (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), even (plus ((Nil)) (any_list2)) = even (plus (any_list2) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:5)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list) (any_list2:any list), even (plus (any_list1) (any_list2)) = even (plus (any_list2) (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), even (plus ((Nil)) (any_list2)) = even (plus (any_list2) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (plus (any_list1) (any_list2)) = even (plus (any_list2) (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
even (plus ((Nil)) ((Nil))) = even (plus ((Nil)) ((Nil)))

2 goal(s) more...

0 conjecture(s) more...
Dilemma timed out for benchmark clam with problem 24.File "_none_", lines 81-83, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 81-83, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
