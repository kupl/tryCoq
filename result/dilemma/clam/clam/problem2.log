Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list) (y:any list), len ((x @ y)) = len ((y @ x))(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:12)
induction any_list2(rank:12)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), len (((Nil) @ any_list2)) = len ((any_list2 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), len (((Nil) @ any_list2)) = len ((any_list2 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), len (any_list2) = len ((any_list2 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:5)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), len (any_list2) = len ((any_list2 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
len ((Nil)) = len (((Nil) @ (Nil)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 5


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
len ((Nil)) = len (((Nil) @ (Nil)))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : len (any_list3) = len ((any_list3 @ (Nil)))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
len ((any1::any_list3)) = len (((any1::any_list3) @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : len (any_list3) = len ((any_list3 @ (Nil)))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
len ((any1::any_list3)) = len (((any1::any_list3) @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : len (any_list3) = len ((any_list3 @ (Nil)))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
SUCC (len (any_list3)) = SUCC (len ((any_list3 @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:12)
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), len ((any_list1 @ (Nil))) = len (((Nil) @ any_list1))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), len ((any_list1 @ (Nil))) = len (((Nil) @ any_list1))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), len ((any_list1 @ (Nil))) = len (any_list1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:5)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), len ((any_list1 @ (Nil))) = len (any_list1)

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
len (((Nil) @ (Nil))) = len ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 10


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
len (((Nil) @ (Nil))) = len ((Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len ((any_list3 @ (Nil))) = len (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
len (((any1::any_list3) @ (Nil))) = len ((any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 11


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len ((any_list3 @ (Nil))) = len (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
len (((any1::any_list3) @ (Nil))) = len ((any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len ((any_list3 @ (Nil))) = len (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
SUCC (len ((any_list3 @ (Nil)))) = SUCC (len (any_list3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:12)
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 12


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : len (any_list3) = len ((any_list3 @ (Nil)))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
SUCC (len (any_list3)) = SUCC (len ((any_list3 @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : len (any_list3) = len ((any_list3 @ (Nil)))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
SUCC (len ((any_list3 @ (Nil)))) = SUCC (len ((any_list3 @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 13


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : len (any_list3) = len ((any_list3 @ (Nil)))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
SUCC (len ((any_list3 @ (Nil)))) = SUCC (len ((any_list3 @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len ((any_list3 @ any_list2)) = len ((any_list2 @ any_list3))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (((any1::any_list3) @ any_list2)) = len ((any_list2 @ (any1::any_list3)))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 14


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len ((any_list3 @ any_list2)) = len ((any_list2 @ any_list3))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (((any1::any_list3) @ any_list2)) = len ((any_list2 @ (any1::any_list3)))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len ((any_list3 @ any_list2)) = len ((any_list2 @ any_list3))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), SUCC (len ((any_list3 @ any_list2))) = len ((any_list2 @ (any1::any_list3)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:11)
induction any_list2(rank:12)
=================================================
Progress: 15


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len ((any_list3 @ any_list2)) = len ((any_list2 @ any_list3))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), SUCC (len ((any_list3 @ any_list2))) = len ((any_list2 @ (any1::any_list3)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len ((any_list3 @ any_list2)) = len ((any_list2 @ any_list3))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), SUCC (len ((any_list2 @ any_list3))) = len ((any_list2 @ (any1::any_list3)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:4)
=================================================
Progress: 16


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len ((any_list3 @ any_list2)) = len ((any_list2 @ any_list3))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), SUCC (len ((any_list2 @ any_list3))) = len ((any_list2 @ (any1::any_list3)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len ((any_list3 @ any_list2)) = len ((any_list2 @ any_list3))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
SUCC (len (((Nil) @ any_list3))) = len (((Nil) @ (any1::any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 17


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len ((any_list3 @ any_list2)) = len ((any_list2 @ any_list3))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
SUCC (len (((Nil) @ any_list3))) = len (((Nil) @ (any1::any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len ((any_list3 @ any_list2)) = len ((any_list2 @ any_list3))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : SUCC (len ((any_list4 @ any_list3))) = len ((any_list4 @ (any1::any_list3)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
SUCC (len (((any2::any_list4) @ any_list3))) = len (((any2::any_list4) @ (any1::any_list3)))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 18


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len ((any_list3 @ any_list2)) = len ((any_list2 @ any_list3))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : SUCC (len ((any_list4 @ any_list3))) = len ((any_list4 @ (any1::any_list3)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
SUCC (len (((any2::any_list4) @ any_list3))) = len (((any2::any_list4) @ (any1::any_list3)))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len ((any_list3 @ any_list2)) = len ((any_list2 @ any_list3))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : SUCC (len ((any_list4 @ any_list3))) = len ((any_list4 @ (any1::any_list3)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
SUCC (SUCC (len ((any_list4 @ any_list3)))) = SUCC (len ((any_list4 @ (any1::any_list3))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:11)
rewrite <- IH1 in goal at 0(rank:19)
rewrite <- IH2 in goal at 0(rank:11)
=================================================
Progress: 19


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len ((any_list3 @ any_list2)) = len ((any_list2 @ any_list3))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : SUCC (len ((any_list4 @ any_list3))) = len ((any_list4 @ (any1::any_list3)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
SUCC (SUCC (len ((any_list4 @ any_list3)))) = SUCC (len ((any_list4 @ (any1::any_list3))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len ((any_list3 @ any_list2)) = len ((any_list2 @ any_list3))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : SUCC (len ((any_list4 @ any_list3))) = len ((any_list4 @ (any1::any_list3)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
SUCC (len ((any_list4 @ (any1::any_list3)))) = SUCC (len ((any_list4 @ (any1::any_list3))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0)
=================================================
Progress: 20


1st goal of : forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len ((any_list3 @ any_list2)) = len ((any_list2 @ any_list3))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : SUCC (len ((any_list4 @ any_list3))) = len ((any_list4 @ (any1::any_list3)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
SUCC (len ((any_list4 @ (any1::any_list3)))) = SUCC (len ((any_list4 @ (any1::any_list3))))

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0)


No conjecture
Proof Success
Proof
assert forall (any_list1:any list) (any_list2:any list), len ((any_list1 @ any_list2)) = len ((any_list2 @ any_list1))
induction any_list1
simpl in goal
induction any_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
induction any_list2
reflexivity
simpl in goal
rewrite IH2 in goal at 0
reflexivity
Qed
File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
