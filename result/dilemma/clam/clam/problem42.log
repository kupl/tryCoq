Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list) (y:any list), reverse (qreva (x) (reverse (y))) = (y @ x)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:12)
induction any_list2(rank:12)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((Nil)) (reverse (any_list2))) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((Nil)) (reverse (any_list2))) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (reverse (any_list2)) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:5)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (reverse (any_list2)) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse (reverse ((Nil))) = ((Nil) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 5


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse (reverse ((Nil))) = ((Nil) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (reverse ((any1::any_list3))) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (reverse ((any1::any_list3))) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4)
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (arg1:any list), reverse ((arg1 @ (any1::(Nil)))) = (any1::reverse (arg1))
Model : any1: 0, arg1: (Nil)
Model : any1: 6, arg1: (Nil)
Model : any1: 1, arg1: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse (((Nil) @ (0::(Nil)))) = (0::reverse ((Nil)))
reverse (((Nil) @ (6::(Nil)))) = (6::reverse ((Nil)))
reverse (((Nil) @ (1::(Nil)))) = (1::reverse ((Nil)))
Simplifying took 0.000187 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (arg1:any list), reverse ((arg1 @ (any1::(Nil)))) = (any1::reverse (arg1))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (arg1:any list), reverse ((arg1 @ (any1::(Nil)))) = (any1::reverse (arg1))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 9


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 10


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 11


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:5)
rewrite IH1 in goal at 0(rank:13)
=================================================
Progress: 12


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5)
=================================================
Progress: 13


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 14


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite lemma3 in goal at 0(rank:12)
rewrite <- lemma3 in goal at 0(rank:12)
=================================================
Progress: 15


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (qreva (any_list1) (reverse ((Nil)))) = ((Nil) @ any_list1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 16


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (qreva (any_list1) (reverse ((Nil)))) = ((Nil) @ any_list1)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:5)
=================================================
Progress: 17


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
reverse (qreva ((Nil)) ((Nil))) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 18


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
reverse (qreva ((Nil)) ((Nil))) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse (qreva (any_list3) ((Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (qreva ((any1::any_list3)) ((Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 19


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse (qreva (any_list3) ((Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (qreva ((any1::any_list3)) ((Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse (qreva (any_list3) ((Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
advanced_generalize done
Lemma : forall (any_list3:any list), mk_rhs1 ((Nil)) (any_list3) = any_list3
Model : any_list3: (Nil)
Model : any_list3: (Nil)
Model : any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
let rec mk_rhs1 arg_2 arg_3 =
match (arg_2) with
| Nil  -> arg_3
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_3))
prop list:
mk_rhs1 ((Nil)) ((Nil)) = (Nil)
mk_rhs1 ((Nil)) ((Nil)) = (Nil)
mk_rhs1 ((Nil)) ((Nil)) = (Nil)
Simplifying took 0.000031 seconds
Result : true
Lemma : forall (tl:any list) (hd:any) (any_list3:any list), mk_rhs1 ((hd::tl)) (any_list3) = mk_rhs1 (tl) ((hd::any_list3))
Model : tl: (Nil), hd: 1, any_list3: (8::(Nil))
Model : tl: (Nil), hd: 0, any_list3: (Nil)
Model : tl: (Nil), hd: 8, any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
let rec mk_rhs1 arg_2 arg_3 =
match (arg_2) with
| Nil  -> arg_3
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_3))
prop list:
mk_rhs1 ((1::(Nil))) ((8::(Nil))) = mk_rhs1 ((Nil)) ((1::(8::(Nil))))
mk_rhs1 ((0::(Nil))) ((Nil)) = mk_rhs1 ((Nil)) ((0::(Nil)))
mk_rhs1 ((8::(Nil))) ((Nil)) = mk_rhs1 ((Nil)) ((8::(Nil)))
Simplifying took 0.000247 seconds
Result : true
Lemma : forall (any_list3:any list) (lst:any list), reverse (qreva (any_list3) (lst)) = mk_rhs1 (lst) (any_list3)
Model : any_list3: (Nil), lst: (Nil)
Model : any_list3: (Nil), lst: (Nil)
Model : any_list3: (Nil), lst: (Nil)
Substituting variables...
Simplifying conditions and property...
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
let rec mk_rhs1 arg_2 arg_3 =
match (arg_2) with
| Nil  -> arg_3
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_3))
prop list:
reverse (qreva ((Nil)) ((Nil))) = mk_rhs1 ((Nil)) ((Nil))
reverse (qreva ((Nil)) ((Nil))) = mk_rhs1 ((Nil)) ((Nil))
reverse (qreva ((Nil)) ((Nil))) = mk_rhs1 ((Nil)) ((Nil))
Simplifying took 0.000050 seconds
Result : true
New Env
let rec mk_rhs1 arg_2 arg_3 =
match (arg_2) with
| Nil  -> arg_3
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_3))
;;
Lemma List
forall (any_list3:any list), mk_rhs1 ((Nil)) (any_list3) = any_list3
forall (tl:any list) (hd:any) (any_list3:any list), mk_rhs1 ((hd::tl)) (any_list3) = mk_rhs1 (tl) ((hd::any_list3))
forall (any_list3:any list) (lst:any list), reverse (qreva (any_list3) (lst)) = mk_rhs1 (lst) (any_list3)
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse (qreva (any_list3) ((Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 20


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse (qreva (any_list3) ((Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list3:any list) (lst:any list), reverse (qreva (any_list3) (lst)) = mk_rhs1 (lst) (any_list3)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 21


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((Nil)) (any_list2)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 22


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((Nil)) (any_list2)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (any_list2) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list2(rank:15)
intro any_list2(rank:22)
=================================================
Progress: 23


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::reverse (reverse (any_list3))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 24


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (any_list3)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::reverse (reverse (any_list3))) = (any1::reverse (reverse (any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (reverse (any_list2))) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 25


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (reverse (any_list2))) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva (any_list3) ((any1::reverse (any_list2)))) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list2(rank:12)
rewrite <- lemma3 in goal at 0(rank:19)
=================================================
Progress: 26


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva (any_list3) ((any1::reverse (any_list2)))) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::reverse ((Nil))))) = ((Nil) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 27


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::reverse ((Nil))))) = ((Nil) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
advanced_generalize done
Lemma : forall (any1:any) (any_list3:any list), reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)
Model : any1: 5, any_list3: (3::(3::(7::(Nil))))
Model : any1: 0, any_list3: (Nil)
Model : any1: 3, any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse (qreva ((3::(3::(7::(Nil))))) ((5::(Nil)))) = (5::(3::(3::(7::(Nil)))))
reverse (qreva ((Nil)) ((0::(Nil)))) = (0::(Nil))
reverse (qreva ((Nil)) ((3::(Nil)))) = (3::(Nil))
Simplifying took 0.001069 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any_list3:any list), reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 28


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list3:any list), reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)

---------------------------------------
forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 29


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)

---------------------------------------
forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (qreva ((Nil)) ((any1::(Nil)))) = (any1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 30


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (qreva ((Nil)) ((any1::(Nil)))) = (any1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (qreva ((any2::any_list2)) ((any1::(Nil)))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 31


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (qreva ((any2::any_list2)) ((any1::(Nil)))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (qreva (any_list2) ((any2::(any1::(Nil))))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
=================================================
Progress: 32


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (qreva (any_list2) ((any2::(any1::(Nil))))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse (qreva (any_list2) ((any2::(any1::(Nil))))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5)
=================================================
Progress: 33


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse (qreva (any_list2) ((any2::(any1::(Nil))))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse (qreva (any_list2) ((any2::(any1::(Nil))))) = (any1::reverse (qreva (any_list2) ((any2::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:5)
=================================================
Progress: 34


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse (qreva (any_list2) ((any2::(any1::(Nil))))) = (any1::reverse (qreva (any_list2) ((any2::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse (qreva (any_list2) ((any2::(any1::(Nil))))) = reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite <- IH1 in goal at 0
rewrite <- lemma3 in goal at 0
advanced_generalize done
Lemma : forall (any2:any) (any_list2:any list) (arg4:any list), reverse (qreva (any_list2) ((any2::arg4))) = reverse ((qreva (any_list2) ((any2::(Nil))) @ arg4))
Model : any2: 0, any_list2: (Nil), arg4: (Nil)
Model : any2: 2, any_list2: (Nil), arg4: (Nil)
Model : any2: 0, any_list2: (Nil), arg4: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse (qreva ((Nil)) ((0::(Nil)))) = reverse ((qreva ((Nil)) ((0::(Nil))) @ (Nil)))
reverse (qreva ((Nil)) ((2::(Nil)))) = reverse ((qreva ((Nil)) ((2::(Nil))) @ (Nil)))
reverse (qreva ((Nil)) ((0::(Nil)))) = reverse ((qreva ((Nil)) ((0::(Nil))) @ (Nil)))
Simplifying took 0.000282 seconds
Result : true
New Env

;;
Lemma List
forall (any2:any) (any_list2:any list) (arg4:any list), reverse (qreva (any_list2) ((any2::arg4))) = reverse ((qreva (any_list2) ((any2::(Nil))) @ arg4))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse (qreva (any_list2) ((any2::(any1::(Nil))))) = reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 35


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse (qreva (any_list2) ((any2::(any1::(Nil))))) = reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any2:any) (any_list2:any list) (arg4:any list), reverse (qreva (any_list2) ((any2::arg4))) = reverse ((qreva (any_list2) ((any2::(Nil))) @ arg4))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 36


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (qreva ((Nil)) ((any1::any_list2))) = reverse ((qreva ((Nil)) ((any1::(Nil))) @ any_list2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 37


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (qreva ((Nil)) ((any1::any_list2))) = reverse ((qreva ((Nil)) ((any1::(Nil))) @ any_list2))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (qreva ((any2::any_list3)) ((any1::any_list2))) = reverse ((qreva ((any2::any_list3)) ((any1::(Nil))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 38


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (qreva ((any2::any_list3)) ((any1::any_list2))) = reverse ((qreva ((any2::any_list3)) ((any1::(Nil))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any1(rank:7)
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:23)
=================================================
Progress: 39


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list2:any list), reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:23)
=================================================
Progress: 40


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 41


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list2:any list), reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 42


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
rewrite IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))
Model : any1: 2, any2: 7, any_list2: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 5, any_list2: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 6, any_list2: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((7::(Nil))) @ (2::(Nil)))) = reverse ((qreva ((Nil)) ((7::(2::(Nil)))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(Nil))) @ (4::(Nil)))) = reverse ((qreva ((Nil)) ((5::(4::(Nil)))) @ (Nil)))
reverse ((qreva ((Nil)) ((6::(Nil))) @ (8::(Nil)))) = reverse ((qreva ((Nil)) ((6::(8::(Nil)))) @ (Nil)))
Simplifying took 0.001470 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 43


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10)
=================================================
Progress: 44


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
rewrite IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))
Model : any1: 8, any2: 0, any_list2: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 4, any_list2: (Nil), any_list3: (2::(Nil))
Model : any1: 7, any2: 6, any_list2: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(Nil))) @ (8::(Nil)))) = reverse ((qreva ((Nil)) ((0::(8::(Nil)))) @ (Nil)))
reverse ((qreva ((2::(Nil))) ((4::(Nil))) @ (4::(Nil)))) = reverse ((qreva ((2::(Nil))) ((4::(4::(Nil)))) @ (Nil)))
reverse ((qreva ((Nil)) ((6::(Nil))) @ (7::(Nil)))) = reverse ((qreva ((Nil)) ((6::(7::(Nil)))) @ (Nil)))
Simplifying took 0.001752 seconds
Result : true
=================================================
Progress: 45


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva ((Nil)) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva ((Nil)) ((any2::(any1::(Nil)))) @ any_list1))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 46


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva ((Nil)) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva ((Nil)) ((any2::(any1::(Nil)))) @ any_list1))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva ((any3::any_list3)) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva ((any3::any_list3)) ((any2::(any1::(Nil)))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 47


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva ((any3::any_list3)) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva ((any3::any_list3)) ((any2::(any1::(Nil)))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any1(rank:9)
intro any2(rank:9)
intro any_list1(rank:9)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 48


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any2(rank:9)
intro any_list1(rank:9)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 49


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:9)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 50


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:9)
=================================================
Progress: 51


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:9)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 52


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:9)
=================================================
Progress: 53


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:9)
=================================================
Progress: 54


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Model : any1: 6, any2: 4, any3: 8, any_list1: (Nil), any_list3: (1::(6::(Nil)))
Model : any1: 0, any2: 8, any3: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 7, any3: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((1::(6::(Nil)))) ((8::(Nil))) @ (4::(6::(Nil))))) = reverse ((qreva ((1::(6::(Nil)))) ((8::(4::(6::(Nil))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(Nil))) @ (8::(0::(Nil))))) = reverse ((qreva ((Nil)) ((0::(8::(0::(Nil))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(Nil))) @ (7::(5::(Nil))))) = reverse ((qreva ((Nil)) ((0::(7::(5::(Nil))))) @ (Nil)))
Simplifying took 0.004180 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 55


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 56


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:9)
=================================================
Progress: 57


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Model : any1: 0, any2: 0, any3: 6, any_list1: (6::(Nil)), any_list3: (Nil)
Model : any1: 7, any2: 6, any3: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 8, any3: 2, any_list1: (5::(0::(Nil))), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((6::(Nil))) @ (0::(0::(6::(Nil)))))) = reverse ((qreva ((Nil)) ((6::(0::(0::(Nil))))) @ (6::(Nil))))
reverse ((qreva ((Nil)) ((5::(Nil))) @ (6::(7::(Nil))))) = reverse ((qreva ((Nil)) ((5::(6::(7::(Nil))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(Nil))) @ (8::(5::(5::(0::(Nil))))))) = reverse ((qreva ((Nil)) ((2::(8::(5::(Nil))))) @ (5::(0::(Nil)))))
Simplifying took 0.004562 seconds
Result : true
=================================================
Progress: 58


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Model : any1: 8, any2: 3, any3: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 8, any3: 3, any_list1: (Nil), any_list3: (5::(Nil))
Model : any1: 6, any2: 2, any3: 3, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((3::(Nil))) @ (3::(8::(Nil))))) = reverse ((qreva ((Nil)) ((3::(3::(8::(Nil))))) @ (Nil)))
reverse ((qreva ((5::(Nil))) ((3::(Nil))) @ (8::(8::(Nil))))) = reverse ((qreva ((5::(Nil))) ((3::(8::(8::(Nil))))) @ (Nil)))
reverse ((qreva ((Nil)) ((3::(Nil))) @ (2::(6::(Nil))))) = reverse ((qreva ((Nil)) ((3::(2::(6::(Nil))))) @ (Nil)))
Simplifying took 0.003429 seconds
Result : true
=================================================
Progress: 59


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
reverse ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Model : any1: 7, any2: 3, any3: 4, any_list1: (0::(Nil)), any_list3: (1::(Nil))
Model : any1: 0, any2: 4, any3: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 0, any3: 5, any_list1: (2::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((1::(Nil))) ((4::(Nil))) @ (3::(7::(0::(Nil)))))) = reverse ((qreva ((1::(Nil))) ((4::(3::(7::(Nil))))) @ (0::(Nil))))
reverse ((qreva ((Nil)) ((4::(Nil))) @ (4::(0::(Nil))))) = reverse ((qreva ((Nil)) ((4::(4::(0::(Nil))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(Nil))) @ (0::(8::(2::(Nil)))))) = reverse ((qreva ((Nil)) ((5::(0::(8::(Nil))))) @ (2::(Nil))))
Simplifying took 0.003694 seconds
Result : true
=================================================
Progress: 60


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva ((Nil)) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva ((Nil)) ((any3::(any2::(any1::(Nil))))) @ any_list1))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 61


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva ((Nil)) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva ((Nil)) ((any3::(any2::(any1::(Nil))))) @ any_list1))

1 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva ((any4::any_list3)) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva ((any4::any_list3)) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 62


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva ((any4::any_list3)) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva ((any4::any_list3)) ((any3::(any2::(any1::(Nil))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any1(rank:11)
intro any2(rank:11)
intro any3(rank:11)
intro any_list1(rank:11)
=================================================
Progress: 63


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any2(rank:11)
intro any3(rank:11)
intro any_list1(rank:11)
=================================================
Progress: 64


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any3(rank:11)
intro any_list1(rank:11)
=================================================
Progress: 65


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:11)
=================================================
Progress: 66


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Model : any1: 5, any2: 0, any3: 4, any4: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 8, any3: 0, any4: 4, any_list1: (Nil), any_list3: (5::(Nil))
Model : any1: 0, any2: 4, any3: 2, any4: 3, any_list1: (Nil), any_list3: (1::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((5::(4::(Nil)))) @ (0::(5::(Nil))))) = reverse ((qreva ((Nil)) ((5::(4::(0::(5::(Nil)))))) @ (Nil)))
reverse ((qreva ((5::(Nil))) ((4::(0::(Nil)))) @ (8::(0::(Nil))))) = reverse ((qreva ((5::(Nil))) ((4::(0::(8::(0::(Nil)))))) @ (Nil)))
reverse ((qreva ((1::(Nil))) ((3::(2::(Nil)))) @ (4::(0::(Nil))))) = reverse ((qreva ((1::(Nil))) ((3::(2::(4::(0::(Nil)))))) @ (Nil)))
Simplifying took 0.004835 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 67


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 68


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any3(rank:11)
intro any_list1(rank:11)
=================================================
Progress: 69


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:11)
=================================================
Progress: 70


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Model : any1: 7, any2: 3, any3: 3, any4: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 1, any3: 0, any4: 2, any_list1: (Nil), any_list3: (7::(Nil))
Model : any1: 7, any2: 4, any3: 1, any4: 8, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((6::(3::(Nil)))) @ (3::(7::(Nil))))) = reverse ((qreva ((Nil)) ((6::(3::(3::(7::(Nil)))))) @ (Nil)))
reverse ((qreva ((7::(Nil))) ((2::(0::(Nil)))) @ (1::(0::(Nil))))) = reverse ((qreva ((7::(Nil))) ((2::(0::(1::(0::(Nil)))))) @ (Nil)))
reverse ((qreva ((Nil)) ((8::(1::(Nil)))) @ (4::(7::(Nil))))) = reverse ((qreva ((Nil)) ((8::(1::(4::(7::(Nil)))))) @ (Nil)))
Simplifying took 0.004423 seconds
Result : true
=================================================
Progress: 71


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:11)
=================================================
Progress: 72


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Model : any1: 4, any2: 8, any3: 8, any4: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 7, any3: 3, any4: 0, any_list1: (Nil), any_list3: (4::(Nil))
Model : any1: 7, any2: 4, any3: 8, any4: 2, any_list1: (0::(8::(Nil))), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((4::(8::(Nil)))) @ (8::(4::(Nil))))) = reverse ((qreva ((Nil)) ((4::(8::(8::(4::(Nil)))))) @ (Nil)))
reverse ((qreva ((4::(Nil))) ((0::(3::(Nil)))) @ (7::(0::(Nil))))) = reverse ((qreva ((4::(Nil))) ((0::(3::(7::(0::(Nil)))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(8::(Nil)))) @ (4::(7::(0::(8::(Nil))))))) = reverse ((qreva ((Nil)) ((2::(8::(4::(7::(Nil)))))) @ (0::(8::(Nil)))))
Simplifying took 0.006879 seconds
Result : true
=================================================
Progress: 73


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Model : any1: 3, any2: 3, any3: 0, any4: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 8, any3: 3, any4: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 3, any3: 1, any4: 1, any_list1: (5::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((5::(0::(Nil)))) @ (3::(3::(Nil))))) = reverse ((qreva ((Nil)) ((5::(0::(3::(3::(Nil)))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(3::(Nil)))) @ (8::(7::(Nil))))) = reverse ((qreva ((Nil)) ((2::(3::(8::(7::(Nil)))))) @ (Nil)))
reverse ((qreva ((Nil)) ((1::(1::(Nil)))) @ (3::(8::(5::(Nil)))))) = reverse ((qreva ((Nil)) ((1::(1::(3::(8::(Nil)))))) @ (5::(Nil))))
Simplifying took 0.005055 seconds
Result : true
=================================================
Progress: 74


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:11)
=================================================
Progress: 75


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Model : any1: 1, any2: 0, any3: 6, any4: 4, any_list1: (Nil), any_list3: (5::(Nil))
Model : any1: 3, any2: 6, any3: 4, any4: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 1, any3: 0, any4: 6, any_list1: (Nil), any_list3: (0::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((5::(Nil))) ((4::(6::(Nil)))) @ (0::(1::(Nil))))) = reverse ((qreva ((5::(Nil))) ((4::(6::(0::(1::(Nil)))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(4::(Nil)))) @ (6::(3::(Nil))))) = reverse ((qreva ((Nil)) ((2::(4::(6::(3::(Nil)))))) @ (Nil)))
reverse ((qreva ((0::(Nil))) ((6::(0::(Nil)))) @ (1::(8::(Nil))))) = reverse ((qreva ((0::(Nil))) ((6::(0::(1::(8::(Nil)))))) @ (Nil)))
Simplifying took 0.005732 seconds
Result : true
=================================================
Progress: 76


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Model : any1: 7, any2: 2, any3: 3, any4: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 0, any3: 0, any4: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 6, any3: 2, any4: 5, any_list1: (Nil), any_list3: (8::(6::(8::(7::(Nil)))))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((5::(3::(Nil)))) @ (2::(7::(Nil))))) = reverse ((qreva ((Nil)) ((5::(3::(2::(7::(Nil)))))) @ (Nil)))
reverse ((qreva ((Nil)) ((6::(0::(Nil)))) @ (0::(8::(Nil))))) = reverse ((qreva ((Nil)) ((6::(0::(0::(8::(Nil)))))) @ (Nil)))
reverse ((qreva ((8::(6::(8::(7::(Nil)))))) ((5::(2::(Nil)))) @ (6::(5::(Nil))))) = reverse ((qreva ((8::(6::(8::(7::(Nil)))))) ((5::(2::(6::(5::(Nil)))))) @ (Nil)))
Simplifying took 0.011636 seconds
Result : true
=================================================
Progress: 77


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Model : any1: 5, any2: 0, any3: 7, any4: 7, any_list1: (Nil), any_list3: (5::(Nil))
Model : any1: 0, any2: 8, any3: 6, any4: 2, any_list1: (3::(Nil)), any_list3: (Nil)
Model : any1: 2, any2: 1, any3: 0, any4: 1, any_list1: (Nil), any_list3: (5::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((5::(Nil))) ((7::(7::(Nil)))) @ (0::(5::(Nil))))) = reverse ((qreva ((5::(Nil))) ((7::(7::(0::(5::(Nil)))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(6::(Nil)))) @ (8::(0::(3::(Nil)))))) = reverse ((qreva ((Nil)) ((2::(6::(8::(0::(Nil)))))) @ (3::(Nil))))
reverse ((qreva ((5::(Nil))) ((1::(0::(Nil)))) @ (1::(2::(Nil))))) = reverse ((qreva ((5::(Nil))) ((1::(0::(1::(2::(Nil)))))) @ (Nil)))
Simplifying took 0.006008 seconds
Result : true
=================================================
Progress: 78


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Model : any1: 8, any2: 8, any3: 4, any4: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 1, any3: 7, any4: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 4, any3: 6, any4: 8, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(4::(Nil)))) @ (8::(8::(Nil))))) = reverse ((qreva ((Nil)) ((0::(4::(8::(8::(Nil)))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(7::(Nil)))) @ (1::(3::(Nil))))) = reverse ((qreva ((Nil)) ((2::(7::(1::(3::(Nil)))))) @ (Nil)))
reverse ((qreva ((Nil)) ((8::(6::(Nil)))) @ (4::(2::(Nil))))) = reverse ((qreva ((Nil)) ((8::(6::(4::(2::(Nil)))))) @ (Nil)))
Simplifying took 0.004391 seconds
Result : true
=================================================
Progress: 79


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (qreva (any_list2) ((any2::(any1::(Nil))))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (qreva (any_list2) ((any2::(any1::(Nil))))) = (any1::reverse (qreva (any_list2) ((any2::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:5)
=================================================
Progress: 80


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (qreva (any_list2) ((any2::(any1::(Nil))))) = (any1::reverse (qreva (any_list2) ((any2::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (qreva (any_list2) ((any2::(any1::(Nil))))) = reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- lemma3 in goal at 0
advanced_generalize done
Lemma : forall (any2:any) (any_list2:any list) (arg5:any list), reverse (qreva (any_list2) ((any2::arg5))) = reverse ((qreva (any_list2) ((any2::(Nil))) @ arg5))
Model : any2: 1, any_list2: (Nil), arg5: (Nil)
Model : any2: 6, any_list2: (0::(0::(Nil))), arg5: (Nil)
Model : any2: 3, any_list2: (Nil), arg5: (0::(2::(Nil)))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse (qreva ((Nil)) ((1::(Nil)))) = reverse ((qreva ((Nil)) ((1::(Nil))) @ (Nil)))
reverse (qreva ((0::(0::(Nil)))) ((6::(Nil)))) = reverse ((qreva ((0::(0::(Nil)))) ((6::(Nil))) @ (Nil)))
reverse (qreva ((Nil)) ((3::(0::(2::(Nil)))))) = reverse ((qreva ((Nil)) ((3::(Nil))) @ (0::(2::(Nil)))))
Simplifying took 0.001318 seconds
Result : true
New Env

;;
Lemma List
forall (any2:any) (any_list2:any list) (arg5:any list), reverse (qreva (any_list2) ((any2::arg5))) = reverse ((qreva (any_list2) ((any2::(Nil))) @ arg5))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (qreva (any_list2) ((any2::(any1::(Nil))))) = reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 81


1st goal of : forall (any1:any) (any_list1:any list), reverse (qreva (any_list1) ((any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (qreva (any_list2) ((any2::(any1::(Nil))))) = reverse ((qreva (any_list2) ((any2::(Nil))) @ (any1::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any2:any) (any_list2:any list) (arg5:any list), reverse (qreva (any_list2) ((any2::arg5))) = reverse ((qreva (any_list2) ((any2::(Nil))) @ arg5))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 82


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (qreva ((Nil)) ((any1::any_list2))) = reverse ((qreva ((Nil)) ((any1::(Nil))) @ any_list2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 83


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (qreva ((Nil)) ((any1::any_list2))) = reverse ((qreva ((Nil)) ((any1::(Nil))) @ any_list2))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (qreva ((any2::any_list3)) ((any1::any_list2))) = reverse ((qreva ((any2::any_list3)) ((any1::(Nil))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 84


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (qreva ((any2::any_list3)) ((any1::any_list2))) = reverse ((qreva ((any2::any_list3)) ((any1::(Nil))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any1(rank:7)
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:23)
=================================================
Progress: 85


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list2:any list), reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:23)
=================================================
Progress: 86


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 87


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list2:any list), reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 88


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
rewrite IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))
Model : any1: 5, any2: 0, any_list2: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 1, any_list2: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 0, any_list2: (0::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(Nil))) @ (5::(Nil)))) = reverse ((qreva ((Nil)) ((0::(5::(Nil)))) @ (Nil)))
reverse ((qreva ((Nil)) ((1::(Nil))) @ (0::(Nil)))) = reverse ((qreva ((Nil)) ((1::(0::(Nil)))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(Nil))) @ (8::(0::(Nil))))) = reverse ((qreva ((Nil)) ((0::(8::(Nil)))) @ (0::(Nil))))
Simplifying took 0.001258 seconds
Result : true
=================================================
Progress: 89


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
reverse (qreva (any_list3) ((any2::(any1::any_list2)))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) ((any1::any_list2))) = reverse ((qreva (any_list1) ((any1::(Nil))) @ any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = reverse ((qreva (any_list3) ((any1::(Nil))) @ any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
rewrite IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) = reverse ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2))
Model : any1: 2, any2: 1, any_list2: (6::(Nil)), any_list3: (Nil)
Model : any1: 2, any2: 0, any_list2: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 2, any_list2: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((1::(Nil))) @ (2::(6::(Nil))))) = reverse ((qreva ((Nil)) ((1::(2::(Nil)))) @ (6::(Nil))))
reverse ((qreva ((Nil)) ((0::(Nil))) @ (2::(Nil)))) = reverse ((qreva ((Nil)) ((0::(2::(Nil)))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(Nil))) @ (2::(Nil)))) = reverse ((qreva ((Nil)) ((2::(2::(Nil)))) @ (Nil)))
Simplifying took 0.001320 seconds
Result : true
=================================================
Progress: 90


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list2(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva ((Nil)) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva ((Nil)) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 91


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva ((Nil)) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva ((Nil)) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva ((any5::any_list3)) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva ((any5::any_list3)) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 92


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva ((any5::any_list3)) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva ((any5::any_list3)) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 5
intro any1(rank:13)
intro any3(rank:13)
intro any4(rank:13)
intro any_list1(rank:13)
intro any2(rank:13)
=================================================
Progress: 93


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any2(rank:13)
intro any3(rank:13)
intro any4(rank:13)
intro any_list1(rank:13)
=================================================
Progress: 94


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any2(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any3(rank:13)
intro any4(rank:13)
intro any_list1(rank:13)
=================================================
Progress: 95


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any3(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any4(rank:13)
intro any_list1(rank:13)
=================================================
Progress: 96


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:13)
=================================================
Progress: 97


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Model : any1: 0, any2: 4, any3: 7, any4: 4, any5: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 0, any3: 4, any4: 7, any5: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 6, any3: 0, any4: 2, any5: 4, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((3::(4::(7::(Nil))))) @ (4::(0::(Nil))))) = reverse ((qreva ((Nil)) ((3::(4::(7::(4::(0::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(7::(4::(Nil))))) @ (0::(0::(Nil))))) = reverse ((qreva ((Nil)) ((2::(7::(4::(0::(0::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((4::(2::(0::(Nil))))) @ (6::(5::(Nil))))) = reverse ((qreva ((Nil)) ((4::(2::(0::(6::(5::(Nil))))))) @ (Nil)))
Simplifying took 0.005732 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 98


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:16)
=================================================
Progress: 99


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any2(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any3(rank:13)
intro any4(rank:13)
intro any_list1(rank:13)
=================================================
Progress: 100


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any3(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any4(rank:13)
intro any_list1(rank:13)
=================================================
Progress: 101


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:13)
=================================================
Progress: 102


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Model : any1: 3, any2: 4, any3: 6, any4: 3, any5: 8, any_list1: (4::(Nil)), any_list3: (Nil)
Model : any1: 0, any2: 2, any3: 3, any4: 7, any5: 7, any_list1: (6::(Nil)), any_list3: (Nil)
Model : any1: 3, any2: 0, any3: 1, any4: 7, any5: 8, any_list1: (Nil), any_list3: (7::(7::(7::(Nil))))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((8::(3::(6::(Nil))))) @ (4::(3::(4::(Nil)))))) = reverse ((qreva ((Nil)) ((8::(3::(6::(4::(3::(Nil))))))) @ (4::(Nil))))
reverse ((qreva ((Nil)) ((7::(7::(3::(Nil))))) @ (2::(0::(6::(Nil)))))) = reverse ((qreva ((Nil)) ((7::(7::(3::(2::(0::(Nil))))))) @ (6::(Nil))))
reverse ((qreva ((7::(7::(7::(Nil))))) ((8::(7::(1::(Nil))))) @ (0::(3::(Nil))))) = reverse ((qreva ((7::(7::(7::(Nil))))) ((8::(7::(1::(0::(3::(Nil))))))) @ (Nil)))
Simplifying took 0.013581 seconds
Result : true
=================================================
Progress: 103


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any3(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any4(rank:13)
intro any_list1(rank:13)
=================================================
Progress: 104


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:13)
=================================================
Progress: 105


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Model : any1: 5, any2: 8, any3: 6, any4: 8, any5: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 7, any3: 7, any4: 7, any5: 0, any_list1: (3::(Nil)), any_list3: (Nil)
Model : any1: 8, any2: 0, any3: 5, any4: 7, any5: 7, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((3::(8::(6::(Nil))))) @ (8::(5::(Nil))))) = reverse ((qreva ((Nil)) ((3::(8::(6::(8::(5::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(7::(7::(Nil))))) @ (7::(7::(3::(Nil)))))) = reverse ((qreva ((Nil)) ((0::(7::(7::(7::(7::(Nil))))))) @ (3::(Nil))))
reverse ((qreva ((Nil)) ((7::(7::(5::(Nil))))) @ (0::(8::(Nil))))) = reverse ((qreva ((Nil)) ((7::(7::(5::(0::(8::(Nil))))))) @ (Nil)))
Simplifying took 0.008943 seconds
Result : true
=================================================
Progress: 106


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:13)
=================================================
Progress: 107


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Model : any1: 1, any2: 8, any3: 1, any4: 0, any5: 3, any_list1: (3::(Nil)), any_list3: (7::(Nil))
Model : any1: 0, any2: 0, any3: 8, any4: 5, any5: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 6, any2: 8, any3: 3, any4: 8, any5: 4, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((7::(Nil))) ((3::(0::(1::(Nil))))) @ (8::(1::(3::(Nil)))))) = reverse ((qreva ((7::(Nil))) ((3::(0::(1::(8::(1::(Nil))))))) @ (3::(Nil))))
reverse ((qreva ((Nil)) ((4::(5::(8::(Nil))))) @ (0::(0::(Nil))))) = reverse ((qreva ((Nil)) ((4::(5::(8::(0::(0::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((4::(8::(3::(Nil))))) @ (8::(6::(Nil))))) = reverse ((qreva ((Nil)) ((4::(8::(3::(8::(6::(Nil))))))) @ (Nil)))
Simplifying took 0.009267 seconds
Result : true
=================================================
Progress: 108


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Model : any1: 6, any2: 0, any3: 2, any4: 6, any5: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 2, any3: 3, any4: 0, any5: 5, any_list1: (Nil), any_list3: (5::(1::(0::(Nil))))
Model : any1: 1, any2: 7, any3: 0, any4: 7, any5: 3, any_list1: (Nil), any_list3: (6::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(6::(2::(Nil))))) @ (0::(6::(Nil))))) = reverse ((qreva ((Nil)) ((0::(6::(2::(0::(6::(Nil))))))) @ (Nil)))
reverse ((qreva ((5::(1::(0::(Nil))))) ((5::(0::(3::(Nil))))) @ (2::(2::(Nil))))) = reverse ((qreva ((5::(1::(0::(Nil))))) ((5::(0::(3::(2::(2::(Nil))))))) @ (Nil)))
reverse ((qreva ((6::(Nil))) ((3::(7::(0::(Nil))))) @ (7::(1::(Nil))))) = reverse ((qreva ((6::(Nil))) ((3::(7::(0::(7::(1::(Nil))))))) @ (Nil)))
Simplifying took 0.010985 seconds
Result : true
=================================================
Progress: 109


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any3(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any4(rank:13)
intro any_list1(rank:13)
=================================================
Progress: 110


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:13)
=================================================
Progress: 111


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Model : any1: 6, any2: 0, any3: 0, any4: 6, any5: 3, any_list1: (3::(Nil)), any_list3: (Nil)
Model : any1: 2, any2: 7, any3: 8, any4: 6, any5: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 1, any3: 7, any4: 0, any5: 5, any_list1: (Nil), any_list3: (5::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((3::(6::(0::(Nil))))) @ (0::(6::(3::(Nil)))))) = reverse ((qreva ((Nil)) ((3::(6::(0::(0::(6::(Nil))))))) @ (3::(Nil))))
reverse ((qreva ((Nil)) ((6::(6::(8::(Nil))))) @ (7::(2::(Nil))))) = reverse ((qreva ((Nil)) ((6::(6::(8::(7::(2::(Nil))))))) @ (Nil)))
reverse ((qreva ((5::(Nil))) ((5::(0::(7::(Nil))))) @ (1::(2::(Nil))))) = reverse ((qreva ((5::(Nil))) ((5::(0::(7::(1::(2::(Nil))))))) @ (Nil)))
Simplifying took 0.008552 seconds
Result : true
=================================================
Progress: 112


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:13)
=================================================
Progress: 113


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Model : any1: 1, any2: 3, any3: 1, any4: 1, any5: 4, any_list1: (3::(Nil)), any_list3: (Nil)
Model : any1: 8, any2: 1, any3: 6, any4: 1, any5: 4, any_list1: (3::(Nil)), any_list3: (Nil)
Model : any1: 1, any2: 3, any3: 5, any4: 2, any5: 0, any_list1: (Nil), any_list3: (7::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((4::(1::(1::(Nil))))) @ (3::(1::(3::(Nil)))))) = reverse ((qreva ((Nil)) ((4::(1::(1::(3::(1::(Nil))))))) @ (3::(Nil))))
reverse ((qreva ((Nil)) ((4::(1::(6::(Nil))))) @ (1::(8::(3::(Nil)))))) = reverse ((qreva ((Nil)) ((4::(1::(6::(1::(8::(Nil))))))) @ (3::(Nil))))
reverse ((qreva ((7::(Nil))) ((0::(2::(5::(Nil))))) @ (3::(1::(Nil))))) = reverse ((qreva ((7::(Nil))) ((0::(2::(5::(3::(1::(Nil))))))) @ (Nil)))
Simplifying took 0.008647 seconds
Result : true
=================================================
Progress: 114


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Model : any1: 4, any2: 2, any3: 0, any4: 0, any5: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 3, any3: 3, any4: 4, any5: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 6, any2: 0, any3: 6, any4: 1, any5: 8, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((8::(0::(0::(Nil))))) @ (2::(4::(Nil))))) = reverse ((qreva ((Nil)) ((8::(0::(0::(2::(4::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(4::(3::(Nil))))) @ (3::(1::(Nil))))) = reverse ((qreva ((Nil)) ((2::(4::(3::(3::(1::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((8::(1::(6::(Nil))))) @ (0::(6::(Nil))))) = reverse ((qreva ((Nil)) ((8::(1::(6::(0::(6::(Nil))))))) @ (Nil)))
Simplifying took 0.005533 seconds
Result : true
=================================================
Progress: 115


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:13)
=================================================
Progress: 116


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Model : any1: 0, any2: 0, any3: 5, any4: 7, any5: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 7, any3: 0, any4: 2, any5: 7, any_list1: (Nil), any_list3: (8::(Nil))
Model : any1: 6, any2: 2, any3: 2, any4: 6, any5: 5, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(7::(5::(Nil))))) @ (0::(0::(Nil))))) = reverse ((qreva ((Nil)) ((0::(7::(5::(0::(0::(Nil))))))) @ (Nil)))
reverse ((qreva ((8::(Nil))) ((7::(2::(0::(Nil))))) @ (7::(7::(Nil))))) = reverse ((qreva ((8::(Nil))) ((7::(2::(0::(7::(7::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(6::(2::(Nil))))) @ (2::(6::(Nil))))) = reverse ((qreva ((Nil)) ((5::(6::(2::(2::(6::(Nil))))))) @ (Nil)))
Simplifying took 0.007828 seconds
Result : true
=================================================
Progress: 117


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Model : any1: 1, any2: 4, any3: 1, any4: 0, any5: 2, any_list1: (8::(Nil)), any_list3: (Nil)
Model : any1: 0, any2: 7, any3: 2, any4: 4, any5: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 4, any3: 0, any4: 5, any5: 8, any_list1: (3::(2::(Nil))), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((2::(0::(1::(Nil))))) @ (4::(1::(8::(Nil)))))) = reverse ((qreva ((Nil)) ((2::(0::(1::(4::(1::(Nil))))))) @ (8::(Nil))))
reverse ((qreva ((Nil)) ((5::(4::(2::(Nil))))) @ (7::(0::(Nil))))) = reverse ((qreva ((Nil)) ((5::(4::(2::(7::(0::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((8::(5::(0::(Nil))))) @ (4::(0::(3::(2::(Nil))))))) = reverse ((qreva ((Nil)) ((8::(5::(0::(4::(0::(Nil))))))) @ (3::(2::(Nil)))))
Simplifying took 0.008672 seconds
Result : true
=================================================
Progress: 118


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Model : any1: 2, any2: 2, any3: 7, any4: 1, any5: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 6, any3: 3, any4: 8, any5: 2, any_list1: (0::(Nil)), any_list3: (Nil)
Model : any1: 0, any2: 1, any3: 2, any4: 3, any5: 8, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((7::(1::(7::(Nil))))) @ (2::(2::(Nil))))) = reverse ((qreva ((Nil)) ((7::(1::(7::(2::(2::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(8::(3::(Nil))))) @ (6::(1::(0::(Nil)))))) = reverse ((qreva ((Nil)) ((2::(8::(3::(6::(1::(Nil))))))) @ (0::(Nil))))
reverse ((qreva ((Nil)) ((8::(3::(2::(Nil))))) @ (1::(0::(Nil))))) = reverse ((qreva ((Nil)) ((8::(3::(2::(1::(0::(Nil))))))) @ (Nil)))
Simplifying took 0.006440 seconds
Result : true
=================================================
Progress: 119


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:13)
=================================================
Progress: 120


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Model : any1: 4, any2: 0, any3: 0, any4: 4, any5: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 2, any3: 7, any4: 4, any5: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 3, any3: 8, any4: 0, any5: 1, any_list1: (7::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((2::(4::(0::(Nil))))) @ (0::(4::(Nil))))) = reverse ((qreva ((Nil)) ((2::(4::(0::(0::(4::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(4::(7::(Nil))))) @ (2::(3::(Nil))))) = reverse ((qreva ((Nil)) ((0::(4::(7::(2::(3::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((1::(0::(8::(Nil))))) @ (3::(2::(7::(Nil)))))) = reverse ((qreva ((Nil)) ((1::(0::(8::(3::(2::(Nil))))))) @ (7::(Nil))))
Simplifying took 0.006536 seconds
Result : true
=================================================
Progress: 121


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Model : any1: 0, any2: 0, any3: 4, any4: 4, any5: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 6, any3: 8, any4: 6, any5: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 4, any3: 0, any4: 0, any5: 7, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((6::(4::(4::(Nil))))) @ (0::(0::(Nil))))) = reverse ((qreva ((Nil)) ((6::(4::(4::(0::(0::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(6::(8::(Nil))))) @ (6::(5::(Nil))))) = reverse ((qreva ((Nil)) ((0::(6::(8::(6::(5::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((7::(0::(0::(Nil))))) @ (4::(0::(Nil))))) = reverse ((qreva ((Nil)) ((7::(0::(0::(4::(0::(Nil))))))) @ (Nil)))
Simplifying took 0.005701 seconds
Result : true
=================================================
Progress: 122


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Model : any1: 7, any2: 3, any3: 7, any4: 2, any5: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 4, any3: 4, any4: 5, any5: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 6, any3: 7, any4: 0, any5: 1, any_list1: (4::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((8::(2::(7::(Nil))))) @ (3::(7::(Nil))))) = reverse ((qreva ((Nil)) ((8::(2::(7::(3::(7::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((3::(5::(4::(Nil))))) @ (4::(3::(Nil))))) = reverse ((qreva ((Nil)) ((3::(5::(4::(4::(3::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((1::(0::(7::(Nil))))) @ (6::(4::(4::(Nil)))))) = reverse ((qreva ((Nil)) ((1::(0::(7::(6::(4::(Nil))))))) @ (4::(Nil))))
Simplifying took 0.007651 seconds
Result : true
=================================================
Progress: 123


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Model : any1: 3, any2: 2, any3: 4, any4: 1, any5: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 1, any3: 6, any4: 0, any5: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 0, any3: 5, any4: 2, any5: 0, any_list1: (Nil), any_list3: (0::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(1::(4::(Nil))))) @ (2::(3::(Nil))))) = reverse ((qreva ((Nil)) ((0::(1::(4::(2::(3::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((1::(0::(6::(Nil))))) @ (1::(0::(Nil))))) = reverse ((qreva ((Nil)) ((1::(0::(6::(1::(0::(Nil))))))) @ (Nil)))
reverse ((qreva ((0::(Nil))) ((0::(2::(5::(Nil))))) @ (0::(0::(Nil))))) = reverse ((qreva ((0::(Nil))) ((0::(2::(5::(0::(0::(Nil))))))) @ (Nil)))
Simplifying took 0.005425 seconds
Result : true
=================================================
Progress: 124


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Model : any1: 2, any2: 1, any3: 0, any4: 3, any5: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 7, any3: 0, any4: 7, any5: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 1, any3: 2, any4: 8, any5: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(3::(0::(Nil))))) @ (1::(2::(Nil))))) = reverse ((qreva ((Nil)) ((0::(3::(0::(1::(2::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((1::(7::(0::(Nil))))) @ (7::(7::(Nil))))) = reverse ((qreva ((Nil)) ((1::(7::(0::(7::(7::(Nil))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(8::(2::(Nil))))) @ (1::(1::(Nil))))) = reverse ((qreva ((Nil)) ((0::(8::(2::(1::(1::(Nil))))))) @ (Nil)))
Simplifying took 0.005662 seconds
Result : true
=================================================
Progress: 125


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (any_list2) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 15)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = mk_rhs1 ((Nil)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 126


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = mk_rhs1 ((Nil)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((any1::any_list3)) = mk_rhs1 ((any1::any_list3)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 127


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((any1::any_list3)) = mk_rhs1 ((any1::any_list3)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:6)
=================================================
Progress: 128


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(mk_rhs1 (any_list3) ((Nil)) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
advanced_generalize done
Lemma : forall (any_list3:any list) (arg6:any list), (mk_rhs1 (any_list3) ((Nil)) @ arg6) = mk_rhs1 (any_list3) (arg6)
Model : any_list3: (Nil), arg6: (7::(0::(Nil)))
Model : any_list3: (Nil), arg6: (Nil)
Model : any_list3: (Nil), arg6: (Nil)
Substituting variables...
Simplifying conditions and property...
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
let rec mk_rhs1 arg_2 arg_3 =
match (arg_2) with
| Nil  -> arg_3
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_3))
prop list:
(mk_rhs1 ((Nil)) ((Nil)) @ (7::(0::(Nil)))) = mk_rhs1 ((Nil)) ((7::(0::(Nil))))
(mk_rhs1 ((Nil)) ((Nil)) @ (Nil)) = mk_rhs1 ((Nil)) ((Nil))
(mk_rhs1 ((Nil)) ((Nil)) @ (Nil)) = mk_rhs1 ((Nil)) ((Nil))
Simplifying took 0.000111 seconds
Result : true
New Env

;;
Lemma List
forall (any_list3:any list) (arg6:any list), (mk_rhs1 (any_list3) ((Nil)) @ arg6) = mk_rhs1 (any_list3) (arg6)
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(mk_rhs1 (any_list3) ((Nil)) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 129


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(mk_rhs1 (any_list3) ((Nil)) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any_list3:any list) (arg6:any list), (mk_rhs1 (any_list3) ((Nil)) @ arg6) = mk_rhs1 (any_list3) (arg6)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 130


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 ((Nil)) ((Nil)) @ any_list2) = mk_rhs1 ((Nil)) (any_list2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 131


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 ((Nil)) ((Nil)) @ any_list2) = mk_rhs1 ((Nil)) (any_list2)

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 ((any1::any_list3)) ((Nil)) @ any_list2) = mk_rhs1 ((any1::any_list3)) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 132


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 ((any1::any_list3)) ((Nil)) @ any_list2) = mk_rhs1 ((any1::any_list3)) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any_list2(rank:7)
rewrite <- IH1 in goal at 0(rank:23)
rewrite <- IH1 in goal at 1(rank:23)
rewrite <- IH1 in goal at 2(rank:23)
=================================================
Progress: 133


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:23)
rewrite <- IH1 in goal at 1(rank:23)
rewrite <- IH1 in goal at 2(rank:23)
=================================================
Progress: 134


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva ((Nil)) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva ((Nil)) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 135


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva ((Nil)) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva ((Nil)) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva ((any6::any_list3)) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva ((any6::any_list3)) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 136


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva ((any6::any_list3)) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva ((any6::any_list3)) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 6
intro any1(rank:15)
intro any3(rank:15)
intro any4(rank:15)
intro any5(rank:15)
intro any_list1(rank:15)
intro any2(rank:15)
=================================================
Progress: 137


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any2(rank:15)
intro any4(rank:15)
intro any5(rank:15)
intro any_list1(rank:15)
intro any3(rank:15)
=================================================
Progress: 138


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any2(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any3(rank:15)
intro any4(rank:15)
intro any5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 139


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any3(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any4(rank:15)
intro any5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 140


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any4(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 141


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:15)
=================================================
Progress: 142


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 7, any2: 0, any3: 4, any4: 1, any5: 1, any6: 1, any_list1: (Nil), any_list3: (6::(Nil))
Model : any1: 3, any2: 8, any3: 3, any4: 4, any5: 6, any6: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 3, any3: 0, any4: 0, any5: 4, any6: 8, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((6::(Nil))) ((1::(1::(1::(4::(Nil)))))) @ (0::(7::(Nil))))) = reverse ((qreva ((6::(Nil))) ((1::(1::(1::(4::(0::(7::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((4::(6::(4::(3::(Nil)))))) @ (8::(3::(Nil))))) = reverse ((qreva ((Nil)) ((4::(6::(4::(3::(8::(3::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((8::(4::(0::(0::(Nil)))))) @ (3::(0::(Nil))))) = reverse ((qreva ((Nil)) ((8::(4::(0::(0::(3::(0::(Nil)))))))) @ (Nil)))
Simplifying took 0.010674 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 143


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:18)
=================================================
Progress: 144


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any2(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any3(rank:15)
intro any4(rank:15)
intro any5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 145


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any3(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any4(rank:15)
intro any5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 146


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any4(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 147


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:15)
=================================================
Progress: 148


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 7, any2: 0, any3: 0, any4: 1, any5: 6, any6: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 0, any3: 0, any4: 2, any5: 3, any6: 0, any_list1: (8::(Nil)), any_list3: (Nil)
Model : any1: 8, any2: 2, any3: 5, any4: 4, any5: 7, any6: 5, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((1::(6::(1::(0::(Nil)))))) @ (0::(7::(Nil))))) = reverse ((qreva ((Nil)) ((1::(6::(1::(0::(0::(7::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(3::(2::(0::(Nil)))))) @ (0::(4::(8::(Nil)))))) = reverse ((qreva ((Nil)) ((0::(3::(2::(0::(0::(4::(Nil)))))))) @ (8::(Nil))))
reverse ((qreva ((Nil)) ((5::(7::(4::(5::(Nil)))))) @ (2::(8::(Nil))))) = reverse ((qreva ((Nil)) ((5::(7::(4::(5::(2::(8::(Nil)))))))) @ (Nil)))
Simplifying took 0.010091 seconds
Result : true
=================================================
Progress: 149


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any3(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any4(rank:15)
intro any5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 150


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any4(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 151


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:15)
=================================================
Progress: 152


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 4, any2: 8, any3: 5, any4: 7, any5: 8, any6: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 6, any3: 5, any4: 7, any5: 2, any6: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 2, any3: 4, any4: 2, any5: 3, any6: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((2::(8::(7::(5::(Nil)))))) @ (8::(4::(Nil))))) = reverse ((qreva ((Nil)) ((2::(8::(7::(5::(8::(4::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(2::(7::(5::(Nil)))))) @ (6::(1::(Nil))))) = reverse ((qreva ((Nil)) ((5::(2::(7::(5::(6::(1::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(3::(2::(4::(Nil)))))) @ (2::(8::(Nil))))) = reverse ((qreva ((Nil)) ((0::(3::(2::(4::(2::(8::(Nil)))))))) @ (Nil)))
Simplifying took 0.010734 seconds
Result : true
=================================================
Progress: 153


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any4(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 154


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:15)
=================================================
Progress: 155


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 0, any2: 0, any3: 2, any4: 7, any5: 0, any6: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 0, any3: 7, any4: 8, any5: 4, any6: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 0, any3: 6, any4: 3, any5: 1, any6: 2, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(0::(7::(2::(Nil)))))) @ (0::(0::(Nil))))) = reverse ((qreva ((Nil)) ((0::(0::(7::(2::(0::(0::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((7::(4::(8::(7::(Nil)))))) @ (0::(4::(Nil))))) = reverse ((qreva ((Nil)) ((7::(4::(8::(7::(0::(4::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(1::(3::(6::(Nil)))))) @ (0::(8::(Nil))))) = reverse ((qreva ((Nil)) ((2::(1::(3::(6::(0::(8::(Nil)))))))) @ (Nil)))
Simplifying took 0.008753 seconds
Result : true
=================================================
Progress: 156


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:15)
=================================================
Progress: 157


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 0, any2: 6, any3: 6, any4: 6, any5: 0, any6: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 2, any3: 3, any4: 3, any5: 4, any6: 0, any_list1: (1::(Nil)), any_list3: (Nil)
Model : any1: 0, any2: 8, any3: 6, any4: 8, any5: 0, any6: 2, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((4::(0::(6::(6::(Nil)))))) @ (6::(0::(Nil))))) = reverse ((qreva ((Nil)) ((4::(0::(6::(6::(6::(0::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(4::(3::(3::(Nil)))))) @ (2::(4::(1::(Nil)))))) = reverse ((qreva ((Nil)) ((0::(4::(3::(3::(2::(4::(Nil)))))))) @ (1::(Nil))))
reverse ((qreva ((Nil)) ((2::(0::(8::(6::(Nil)))))) @ (8::(0::(Nil))))) = reverse ((qreva ((Nil)) ((2::(0::(8::(6::(8::(0::(Nil)))))))) @ (Nil)))
Simplifying took 0.010690 seconds
Result : true
=================================================
Progress: 158


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any5 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 5, any2: 3, any3: 2, any4: 7, any5: 1, any6: 5, any_list1: (6::(Nil)), any_list3: (Nil)
Model : any1: 3, any2: 8, any3: 2, any4: 2, any5: 7, any6: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 8, any3: 5, any4: 2, any5: 3, any6: 6, any_list1: (Nil), any_list3: (3::(4::(Nil)))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((5::(1::(7::(2::(Nil)))))) @ (3::(5::(6::(Nil)))))) = reverse ((qreva ((Nil)) ((5::(1::(7::(2::(3::(5::(Nil)))))))) @ (6::(Nil))))
reverse ((qreva ((Nil)) ((4::(7::(2::(2::(Nil)))))) @ (8::(3::(Nil))))) = reverse ((qreva ((Nil)) ((4::(7::(2::(2::(8::(3::(Nil)))))))) @ (Nil)))
reverse ((qreva ((3::(4::(Nil)))) ((6::(3::(2::(5::(Nil)))))) @ (8::(1::(Nil))))) = reverse ((qreva ((3::(4::(Nil)))) ((6::(3::(2::(5::(8::(1::(Nil)))))))) @ (Nil)))
Simplifying took 0.014600 seconds
Result : true
=================================================
Progress: 159


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any3(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any4(rank:15)
intro any5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 160


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any4(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 161


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any5 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:15)
=================================================
Progress: 162


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 8, any2: 1, any3: 0, any4: 0, any5: 3, any6: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 3, any3: 3, any4: 1, any5: 2, any6: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 7, any3: 2, any4: 6, any5: 2, any6: 0, any_list1: (Nil), any_list3: (4::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(3::(0::(0::(Nil)))))) @ (1::(8::(Nil))))) = reverse ((qreva ((Nil)) ((0::(3::(0::(0::(1::(8::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((6::(2::(1::(3::(Nil)))))) @ (3::(8::(Nil))))) = reverse ((qreva ((Nil)) ((6::(2::(1::(3::(3::(8::(Nil)))))))) @ (Nil)))
reverse ((qreva ((4::(Nil))) ((0::(2::(6::(2::(Nil)))))) @ (7::(5::(Nil))))) = reverse ((qreva ((4::(Nil))) ((0::(2::(6::(2::(7::(5::(Nil)))))))) @ (Nil)))
Simplifying took 0.012030 seconds
Result : true
=================================================
Progress: 163


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any4(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 164


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any3 : any
any5 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:15)
=================================================
Progress: 165


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 5, any2: 8, any3: 3, any4: 6, any5: 8, any6: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 3, any3: 5, any4: 0, any5: 8, any6: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 5, any3: 1, any4: 4, any5: 0, any6: 8, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(8::(6::(3::(Nil)))))) @ (8::(5::(Nil))))) = reverse ((qreva ((Nil)) ((0::(8::(6::(3::(8::(5::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((8::(8::(0::(5::(Nil)))))) @ (3::(4::(Nil))))) = reverse ((qreva ((Nil)) ((8::(8::(0::(5::(3::(4::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((8::(0::(4::(1::(Nil)))))) @ (5::(8::(Nil))))) = reverse ((qreva ((Nil)) ((8::(0::(4::(1::(5::(8::(Nil)))))))) @ (Nil)))
Simplifying took 0.010368 seconds
Result : true
=================================================
Progress: 166


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:15)
=================================================
Progress: 167


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 4, any2: 7, any3: 1, any4: 0, any5: 8, any6: 0, any_list1: (5::(Nil)), any_list3: (Nil)
Model : any1: 8, any2: 0, any3: 7, any4: 2, any5: 7, any6: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 3, any3: 7, any4: 4, any5: 7, any6: 1, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(8::(0::(1::(Nil)))))) @ (7::(4::(5::(Nil)))))) = reverse ((qreva ((Nil)) ((0::(8::(0::(1::(7::(4::(Nil)))))))) @ (5::(Nil))))
reverse ((qreva ((Nil)) ((1::(7::(2::(7::(Nil)))))) @ (0::(8::(Nil))))) = reverse ((qreva ((Nil)) ((1::(7::(2::(7::(0::(8::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((1::(7::(4::(7::(Nil)))))) @ (3::(7::(Nil))))) = reverse ((qreva ((Nil)) ((1::(7::(4::(7::(3::(7::(Nil)))))))) @ (Nil)))
Simplifying took 0.011353 seconds
Result : true
=================================================
Progress: 168


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 5, any2: 1, any3: 4, any4: 3, any5: 3, any6: 8, any_list1: (Nil), any_list3: (2::(0::(4::(8::(Nil)))))
Model : any1: 0, any2: 7, any3: 4, any4: 0, any5: 7, any6: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 1, any3: 2, any4: 5, any5: 0, any6: 3, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((2::(0::(4::(8::(Nil)))))) ((8::(3::(3::(4::(Nil)))))) @ (1::(5::(Nil))))) = reverse ((qreva ((2::(0::(4::(8::(Nil)))))) ((8::(3::(3::(4::(1::(5::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(7::(0::(4::(Nil)))))) @ (7::(0::(Nil))))) = reverse ((qreva ((Nil)) ((5::(7::(0::(4::(7::(0::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((3::(0::(5::(2::(Nil)))))) @ (1::(5::(Nil))))) = reverse ((qreva ((Nil)) ((3::(0::(5::(2::(1::(5::(Nil)))))))) @ (Nil)))
Simplifying took 0.016682 seconds
Result : true
=================================================
Progress: 169


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any4(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 170


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:15)
=================================================
Progress: 171


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 0, any2: 1, any3: 5, any4: 1, any5: 7, any6: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 6, any2: 6, any3: 7, any4: 0, any5: 1, any6: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 5, any3: 2, any4: 2, any5: 1, any6: 2, any_list1: (3::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((1::(7::(1::(5::(Nil)))))) @ (1::(0::(Nil))))) = reverse ((qreva ((Nil)) ((1::(7::(1::(5::(1::(0::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(1::(0::(7::(Nil)))))) @ (6::(6::(Nil))))) = reverse ((qreva ((Nil)) ((0::(1::(0::(7::(6::(6::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(1::(2::(2::(Nil)))))) @ (5::(7::(3::(Nil)))))) = reverse ((qreva ((Nil)) ((2::(1::(2::(2::(5::(7::(Nil)))))))) @ (3::(Nil))))
Simplifying took 0.010022 seconds
Result : true
=================================================
Progress: 172


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:15)
=================================================
Progress: 173


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 4, any2: 0, any3: 2, any4: 6, any5: 6, any6: 0, any_list1: (Nil), any_list3: (5::(0::(0::(Nil))))
Model : any1: 0, any2: 0, any3: 7, any4: 0, any5: 0, any6: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 6, any2: 0, any3: 3, any4: 8, any5: 5, any6: 7, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((5::(0::(0::(Nil))))) ((0::(6::(6::(2::(Nil)))))) @ (0::(4::(Nil))))) = reverse ((qreva ((5::(0::(0::(Nil))))) ((0::(6::(6::(2::(0::(4::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(0::(0::(7::(Nil)))))) @ (0::(0::(Nil))))) = reverse ((qreva ((Nil)) ((2::(0::(0::(7::(0::(0::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((7::(5::(8::(3::(Nil)))))) @ (0::(6::(Nil))))) = reverse ((qreva ((Nil)) ((7::(5::(8::(3::(0::(6::(Nil)))))))) @ (Nil)))
Simplifying took 0.012941 seconds
Result : true
=================================================
Progress: 174


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 1, any2: 0, any3: 0, any4: 5, any5: 5, any6: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 3, any3: 0, any4: 8, any5: 7, any6: 5, any_list1: (Nil), any_list3: (1::(Nil))
Model : any1: 1, any2: 4, any3: 4, any4: 6, any5: 5, any6: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((2::(5::(5::(0::(Nil)))))) @ (0::(1::(Nil))))) = reverse ((qreva ((Nil)) ((2::(5::(5::(0::(0::(1::(Nil)))))))) @ (Nil)))
reverse ((qreva ((1::(Nil))) ((5::(7::(8::(0::(Nil)))))) @ (3::(8::(Nil))))) = reverse ((qreva ((1::(Nil))) ((5::(7::(8::(0::(3::(8::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(5::(6::(4::(Nil)))))) @ (4::(1::(Nil))))) = reverse ((qreva ((Nil)) ((0::(5::(6::(4::(4::(1::(Nil)))))))) @ (Nil)))
Simplifying took 0.010564 seconds
Result : true
=================================================
Progress: 175


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:15)
=================================================
Progress: 176


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 0, any2: 0, any3: 0, any4: 5, any5: 0, any6: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 6, any3: 7, any4: 7, any5: 6, any6: 8, any_list1: (3::(Nil)), any_list3: (Nil)
Model : any1: 3, any2: 1, any3: 7, any4: 0, any5: 8, any6: 0, any_list1: (6::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((3::(0::(5::(0::(Nil)))))) @ (0::(0::(Nil))))) = reverse ((qreva ((Nil)) ((3::(0::(5::(0::(0::(0::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((8::(6::(7::(7::(Nil)))))) @ (6::(2::(3::(Nil)))))) = reverse ((qreva ((Nil)) ((8::(6::(7::(7::(6::(2::(Nil)))))))) @ (3::(Nil))))
reverse ((qreva ((Nil)) ((0::(8::(0::(7::(Nil)))))) @ (1::(3::(6::(Nil)))))) = reverse ((qreva ((Nil)) ((0::(8::(0::(7::(1::(3::(Nil)))))))) @ (6::(Nil))))
Simplifying took 0.011381 seconds
Result : true
=================================================
Progress: 177


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any3 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 4, any2: 7, any3: 7, any4: 3, any5: 6, any6: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 6, any3: 3, any4: 8, any5: 1, any6: 6, any_list1: (Nil), any_list3: (5::(Nil))
Model : any1: 7, any2: 2, any3: 6, any4: 6, any5: 5, any6: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((7::(6::(3::(7::(Nil)))))) @ (7::(4::(Nil))))) = reverse ((qreva ((Nil)) ((7::(6::(3::(7::(7::(4::(Nil)))))))) @ (Nil)))
reverse ((qreva ((5::(Nil))) ((6::(1::(8::(3::(Nil)))))) @ (6::(4::(Nil))))) = reverse ((qreva ((5::(Nil))) ((6::(1::(8::(3::(6::(4::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(5::(6::(6::(Nil)))))) @ (2::(7::(Nil))))) = reverse ((qreva ((Nil)) ((0::(5::(6::(6::(2::(7::(Nil)))))))) @ (Nil)))
Simplifying took 0.012510 seconds
Result : true
=================================================
Progress: 178


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any4 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 1, any2: 8, any3: 0, any4: 4, any5: 4, any6: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 6, any3: 5, any4: 7, any5: 1, any6: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 6, any3: 0, any4: 4, any5: 4, any6: 7, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((5::(4::(4::(0::(Nil)))))) @ (8::(1::(Nil))))) = reverse ((qreva ((Nil)) ((5::(4::(4::(0::(8::(1::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((3::(1::(7::(5::(Nil)))))) @ (6::(3::(Nil))))) = reverse ((qreva ((Nil)) ((3::(1::(7::(5::(6::(3::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((7::(4::(4::(0::(Nil)))))) @ (6::(2::(Nil))))) = reverse ((qreva ((Nil)) ((7::(4::(4::(0::(6::(2::(Nil)))))))) @ (Nil)))
Simplifying took 0.009258 seconds
Result : true
=================================================
Progress: 179


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any4(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 180


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:15)
=================================================
Progress: 181


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 4, any2: 0, any3: 1, any4: 0, any5: 4, any6: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 8, any3: 3, any4: 3, any5: 4, any6: 0, any_list1: (2::(Nil)), any_list3: (Nil)
Model : any1: 0, any2: 0, any3: 1, any4: 6, any5: 8, any6: 3, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((2::(4::(0::(1::(Nil)))))) @ (0::(4::(Nil))))) = reverse ((qreva ((Nil)) ((2::(4::(0::(1::(0::(4::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(4::(3::(3::(Nil)))))) @ (8::(0::(2::(Nil)))))) = reverse ((qreva ((Nil)) ((0::(4::(3::(3::(8::(0::(Nil)))))))) @ (2::(Nil))))
reverse ((qreva ((Nil)) ((3::(8::(6::(1::(Nil)))))) @ (0::(0::(Nil))))) = reverse ((qreva ((Nil)) ((3::(8::(6::(1::(0::(0::(Nil)))))))) @ (Nil)))
Simplifying took 0.008881 seconds
Result : true
=================================================
Progress: 182


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:15)
=================================================
Progress: 183


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 8, any2: 2, any3: 0, any4: 4, any5: 2, any6: 8, any_list1: (6::(Nil)), any_list3: (Nil)
Model : any1: 5, any2: 6, any3: 4, any4: 8, any5: 0, any6: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 1, any3: 5, any4: 5, any5: 1, any6: 7, any_list1: (Nil), any_list3: (7::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((8::(2::(4::(0::(Nil)))))) @ (2::(8::(6::(Nil)))))) = reverse ((qreva ((Nil)) ((8::(2::(4::(0::(2::(8::(Nil)))))))) @ (6::(Nil))))
reverse ((qreva ((Nil)) ((8::(0::(8::(4::(Nil)))))) @ (6::(5::(Nil))))) = reverse ((qreva ((Nil)) ((8::(0::(8::(4::(6::(5::(Nil)))))))) @ (Nil)))
reverse ((qreva ((7::(Nil))) ((7::(1::(5::(5::(Nil)))))) @ (1::(2::(Nil))))) = reverse ((qreva ((7::(Nil))) ((7::(1::(5::(5::(1::(2::(Nil)))))))) @ (Nil)))
Simplifying took 0.012431 seconds
Result : true
=================================================
Progress: 184


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any5 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 0, any2: 0, any3: 8, any4: 0, any5: 4, any6: 0, any_list1: (5::(Nil)), any_list3: (Nil)
Model : any1: 5, any2: 0, any3: 7, any4: 3, any5: 2, any6: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 8, any3: 8, any4: 0, any5: 8, any6: 2, any_list1: (Nil), any_list3: (0::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(4::(0::(8::(Nil)))))) @ (0::(0::(5::(Nil)))))) = reverse ((qreva ((Nil)) ((0::(4::(0::(8::(0::(0::(Nil)))))))) @ (5::(Nil))))
reverse ((qreva ((Nil)) ((8::(2::(3::(7::(Nil)))))) @ (0::(5::(Nil))))) = reverse ((qreva ((Nil)) ((8::(2::(3::(7::(0::(5::(Nil)))))))) @ (Nil)))
reverse ((qreva ((0::(Nil))) ((2::(8::(0::(8::(Nil)))))) @ (8::(3::(Nil))))) = reverse ((qreva ((0::(Nil))) ((2::(8::(0::(8::(8::(3::(Nil)))))))) @ (Nil)))
Simplifying took 0.011890 seconds
Result : true
=================================================
Progress: 185


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:15)
=================================================
Progress: 186


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 0, any2: 4, any3: 1, any4: 5, any5: 2, any6: 5, any_list1: (0::(2::(Nil))), any_list3: (Nil)
Model : any1: 3, any2: 8, any3: 5, any4: 0, any5: 5, any6: 0, any_list1: (7::(0::(Nil))), any_list3: (Nil)
Model : any1: 7, any2: 4, any3: 2, any4: 6, any5: 0, any6: 6, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((5::(2::(5::(1::(Nil)))))) @ (4::(0::(0::(2::(Nil))))))) = reverse ((qreva ((Nil)) ((5::(2::(5::(1::(4::(0::(Nil)))))))) @ (0::(2::(Nil)))))
reverse ((qreva ((Nil)) ((0::(5::(0::(5::(Nil)))))) @ (8::(3::(7::(0::(Nil))))))) = reverse ((qreva ((Nil)) ((0::(5::(0::(5::(8::(3::(Nil)))))))) @ (7::(0::(Nil)))))
reverse ((qreva ((Nil)) ((6::(0::(6::(2::(Nil)))))) @ (4::(7::(Nil))))) = reverse ((qreva ((Nil)) ((6::(0::(6::(2::(4::(7::(Nil)))))))) @ (Nil)))
Simplifying took 0.013213 seconds
Result : true
=================================================
Progress: 187


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any3 : any
any5 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any3 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 6, any2: 6, any3: 3, any4: 2, any5: 6, any6: 1, any_list1: (Nil), any_list3: (0::(Nil))
Model : any1: 3, any2: 6, any3: 6, any4: 3, any5: 4, any6: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 6, any2: 0, any3: 1, any4: 1, any5: 4, any6: 2, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((0::(Nil))) ((1::(6::(2::(3::(Nil)))))) @ (6::(6::(Nil))))) = reverse ((qreva ((0::(Nil))) ((1::(6::(2::(3::(6::(6::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(4::(3::(6::(Nil)))))) @ (6::(3::(Nil))))) = reverse ((qreva ((Nil)) ((2::(4::(3::(6::(6::(3::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(4::(1::(1::(Nil)))))) @ (0::(6::(Nil))))) = reverse ((qreva ((Nil)) ((2::(4::(1::(1::(0::(6::(Nil)))))))) @ (Nil)))
Simplifying took 0.010646 seconds
Result : true
=================================================
Progress: 188


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any4 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 0, any2: 0, any3: 6, any4: 5, any5: 2, any6: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 1, any3: 5, any4: 4, any5: 3, any6: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 5, any3: 0, any4: 0, any5: 0, any6: 5, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(2::(5::(6::(Nil)))))) @ (0::(0::(Nil))))) = reverse ((qreva ((Nil)) ((0::(2::(5::(6::(0::(0::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(3::(4::(5::(Nil)))))) @ (1::(4::(Nil))))) = reverse ((qreva ((Nil)) ((5::(3::(4::(5::(1::(4::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(0::(0::(0::(Nil)))))) @ (5::(1::(Nil))))) = reverse ((qreva ((Nil)) ((5::(0::(0::(0::(5::(1::(Nil)))))))) @ (Nil)))
Simplifying took 0.008090 seconds
Result : true
=================================================
Progress: 189


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:15)
=================================================
Progress: 190


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 3, any2: 6, any3: 0, any4: 2, any5: 4, any6: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 5, any3: 5, any4: 6, any5: 3, any6: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 6, any3: 2, any4: 4, any5: 0, any6: 4, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((2::(4::(2::(0::(Nil)))))) @ (6::(3::(Nil))))) = reverse ((qreva ((Nil)) ((2::(4::(2::(0::(6::(3::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((6::(3::(6::(5::(Nil)))))) @ (5::(1::(Nil))))) = reverse ((qreva ((Nil)) ((6::(3::(6::(5::(5::(1::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((4::(0::(4::(2::(Nil)))))) @ (6::(5::(Nil))))) = reverse ((qreva ((Nil)) ((4::(0::(4::(2::(6::(5::(Nil)))))))) @ (Nil)))
Simplifying took 0.009709 seconds
Result : true
=================================================
Progress: 191


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any3 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 2, any2: 0, any3: 4, any4: 0, any5: 1, any6: 4, any_list1: (0::(Nil)), any_list3: (Nil)
Model : any1: 3, any2: 0, any3: 0, any4: 7, any5: 2, any6: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 6, any3: 0, any4: 3, any5: 0, any6: 7, any_list1: (0::(Nil)), any_list3: (2::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((4::(1::(0::(4::(Nil)))))) @ (0::(2::(0::(Nil)))))) = reverse ((qreva ((Nil)) ((4::(1::(0::(4::(0::(2::(Nil)))))))) @ (0::(Nil))))
reverse ((qreva ((Nil)) ((0::(2::(7::(0::(Nil)))))) @ (0::(3::(Nil))))) = reverse ((qreva ((Nil)) ((0::(2::(7::(0::(0::(3::(Nil)))))))) @ (Nil)))
reverse ((qreva ((2::(Nil))) ((7::(0::(3::(0::(Nil)))))) @ (6::(3::(0::(Nil)))))) = reverse ((qreva ((2::(Nil))) ((7::(0::(3::(0::(6::(3::(Nil)))))))) @ (0::(Nil))))
Simplifying took 0.010019 seconds
Result : true
=================================================
Progress: 192


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any4 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 7, any2: 1, any3: 4, any4: 7, any5: 3, any6: 0, any_list1: (Nil), any_list3: (4::(Nil))
Model : any1: 0, any2: 6, any3: 1, any4: 3, any5: 4, any6: 5, any_list1: (Nil), any_list3: (8::(Nil))
Model : any1: 0, any2: 8, any3: 5, any4: 0, any5: 0, any6: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((4::(Nil))) ((0::(3::(7::(4::(Nil)))))) @ (1::(7::(Nil))))) = reverse ((qreva ((4::(Nil))) ((0::(3::(7::(4::(1::(7::(Nil)))))))) @ (Nil)))
reverse ((qreva ((8::(Nil))) ((5::(4::(3::(1::(Nil)))))) @ (6::(0::(Nil))))) = reverse ((qreva ((8::(Nil))) ((5::(4::(3::(1::(6::(0::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(0::(0::(5::(Nil)))))) @ (8::(0::(Nil))))) = reverse ((qreva ((Nil)) ((0::(0::(0::(5::(8::(0::(Nil)))))))) @ (Nil)))
Simplifying took 0.011552 seconds
Result : true
=================================================
Progress: 193


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any3 : any
any4 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 3, any2: 0, any3: 8, any4: 0, any5: 0, any6: 5, any_list1: (6::(Nil)), any_list3: (Nil)
Model : any1: 7, any2: 0, any3: 8, any4: 6, any5: 4, any6: 5, any_list1: (1::(Nil)), any_list3: (Nil)
Model : any1: 5, any2: 1, any3: 6, any4: 0, any5: 0, any6: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((5::(0::(0::(8::(Nil)))))) @ (0::(3::(6::(Nil)))))) = reverse ((qreva ((Nil)) ((5::(0::(0::(8::(0::(3::(Nil)))))))) @ (6::(Nil))))
reverse ((qreva ((Nil)) ((5::(4::(6::(8::(Nil)))))) @ (0::(7::(1::(Nil)))))) = reverse ((qreva ((Nil)) ((5::(4::(6::(8::(0::(7::(Nil)))))))) @ (1::(Nil))))
reverse ((qreva ((Nil)) ((0::(0::(0::(6::(Nil)))))) @ (1::(5::(Nil))))) = reverse ((qreva ((Nil)) ((0::(0::(0::(6::(1::(5::(Nil)))))))) @ (Nil)))
Simplifying took 0.011023 seconds
Result : true
=================================================
Progress: 194


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:15)
=================================================
Progress: 195


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any5:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 7, any2: 0, any3: 7, any4: 7, any5: 2, any6: 0, any_list1: (0::(0::(Nil))), any_list3: (Nil)
Model : any1: 1, any2: 3, any3: 1, any4: 4, any5: 1, any6: 1, any_list1: (Nil), any_list3: (2::(Nil))
Model : any1: 2, any2: 0, any3: 3, any4: 1, any5: 5, any6: 0, any_list1: (5::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(2::(7::(7::(Nil)))))) @ (0::(7::(0::(0::(Nil))))))) = reverse ((qreva ((Nil)) ((0::(2::(7::(7::(0::(7::(Nil)))))))) @ (0::(0::(Nil)))))
reverse ((qreva ((2::(Nil))) ((1::(1::(4::(1::(Nil)))))) @ (3::(1::(Nil))))) = reverse ((qreva ((2::(Nil))) ((1::(1::(4::(1::(3::(1::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(5::(1::(3::(Nil)))))) @ (0::(2::(5::(Nil)))))) = reverse ((qreva ((Nil)) ((0::(5::(1::(3::(0::(2::(Nil)))))))) @ (5::(Nil))))
Simplifying took 0.012787 seconds
Result : true
=================================================
Progress: 196


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any3 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any4:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 0, any2: 4, any3: 2, any4: 0, any5: 4, any6: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 0, any3: 4, any4: 8, any5: 8, any6: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 7, any3: 2, any4: 8, any5: 3, any6: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(4::(0::(2::(Nil)))))) @ (4::(0::(Nil))))) = reverse ((qreva ((Nil)) ((0::(4::(0::(2::(4::(0::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(8::(8::(4::(Nil)))))) @ (0::(7::(Nil))))) = reverse ((qreva ((Nil)) ((5::(8::(8::(4::(0::(7::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(3::(8::(2::(Nil)))))) @ (7::(5::(Nil))))) = reverse ((qreva ((Nil)) ((0::(3::(8::(2::(7::(5::(Nil)))))))) @ (Nil)))
Simplifying took 0.009671 seconds
Result : true
=================================================
Progress: 197


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any4 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any3:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 7, any2: 0, any3: 0, any4: 3, any5: 0, any6: 0, any_list1: (8::(Nil)), any_list3: (Nil)
Model : any1: 1, any2: 8, any3: 5, any4: 8, any5: 1, any6: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 6, any3: 7, any4: 6, any5: 0, any6: 3, any_list1: (Nil), any_list3: (3::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(0::(3::(0::(Nil)))))) @ (0::(7::(8::(Nil)))))) = reverse ((qreva ((Nil)) ((0::(0::(3::(0::(0::(7::(Nil)))))))) @ (8::(Nil))))
reverse ((qreva ((Nil)) ((1::(1::(8::(5::(Nil)))))) @ (8::(1::(Nil))))) = reverse ((qreva ((Nil)) ((1::(1::(8::(5::(8::(1::(Nil)))))))) @ (Nil)))
reverse ((qreva ((3::(Nil))) ((3::(0::(6::(7::(Nil)))))) @ (6::(8::(Nil))))) = reverse ((qreva ((3::(Nil))) ((3::(0::(6::(7::(6::(8::(Nil)))))))) @ (Nil)))
Simplifying took 0.012511 seconds
Result : true
=================================================
Progress: 198


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any3 : any
any4 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any2:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 0, any2: 6, any3: 0, any4: 8, any5: 3, any6: 4, any_list1: (2::(Nil)), any_list3: (Nil)
Model : any1: 7, any2: 2, any3: 8, any4: 5, any5: 4, any6: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 5, any3: 8, any4: 6, any5: 2, any6: 8, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((4::(3::(8::(0::(Nil)))))) @ (6::(0::(2::(Nil)))))) = reverse ((qreva ((Nil)) ((4::(3::(8::(0::(6::(0::(Nil)))))))) @ (2::(Nil))))
reverse ((qreva ((Nil)) ((7::(4::(5::(8::(Nil)))))) @ (2::(7::(Nil))))) = reverse ((qreva ((Nil)) ((7::(4::(5::(8::(2::(7::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((8::(2::(6::(8::(Nil)))))) @ (5::(2::(Nil))))) = reverse ((qreva ((Nil)) ((8::(2::(6::(8::(5::(2::(Nil)))))))) @ (Nil)))
Simplifying took 0.011852 seconds
Result : true
=================================================
Progress: 199


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any2 : any
any3 : any
any4 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any1:any), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 2, any2: 1, any3: 7, any4: 3, any5: 0, any6: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 0, any3: 3, any4: 3, any5: 7, any6: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 1, any3: 6, any4: 6, any5: 5, any6: 6, any_list1: (1::(8::(Nil))), any_list3: (2::(1::(2::(Nil))))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((3::(0::(3::(7::(Nil)))))) @ (1::(2::(Nil))))) = reverse ((qreva ((Nil)) ((3::(0::(3::(7::(1::(2::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((3::(7::(3::(3::(Nil)))))) @ (0::(7::(Nil))))) = reverse ((qreva ((Nil)) ((3::(7::(3::(3::(0::(7::(Nil)))))))) @ (Nil)))
reverse ((qreva ((2::(1::(2::(Nil))))) ((6::(5::(6::(6::(Nil)))))) @ (1::(5::(1::(8::(Nil))))))) = reverse ((qreva ((2::(1::(2::(Nil))))) ((6::(5::(6::(6::(1::(5::(Nil)))))))) @ (1::(8::(Nil)))))
Simplifying took 0.020452 seconds
Result : true
=================================================
Progress: 200


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
any_list2 : any list
any6 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1))
Inductive1 : any_list2 = (any6::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
any_list1 : any list
---------------------------------------
reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Model : any1: 3, any2: 4, any3: 4, any4: 0, any5: 8, any6: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 2, any3: 1, any4: 3, any5: 3, any6: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 3, any3: 6, any4: 1, any5: 1, any6: 0, any_list1: (3::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((3::(8::(0::(4::(Nil)))))) @ (4::(3::(Nil))))) = reverse ((qreva ((Nil)) ((3::(8::(0::(4::(4::(3::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((1::(3::(3::(1::(Nil)))))) @ (2::(5::(Nil))))) = reverse ((qreva ((Nil)) ((1::(3::(3::(1::(2::(5::(Nil)))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(1::(1::(6::(Nil)))))) @ (3::(0::(3::(Nil)))))) = reverse ((qreva ((Nil)) ((0::(1::(1::(6::(3::(0::(Nil)))))))) @ (3::(Nil))))
Simplifying took 0.009121 seconds
Result : true
=================================================
Progress: 201


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> induction any_list2(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva ((Nil)) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva ((Nil)) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17)
=================================================
Progress: 202


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva ((Nil)) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva ((Nil)) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

1 goal(s) more...

7 conjecture(s) more...
>>> reflexivity(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva ((any7::any_list3)) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva ((any7::any_list3)) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17)
=================================================
Progress: 203


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva ((any7::any_list3)) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva ((any7::any_list3)) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 7
intro any1(rank:17)
intro any3(rank:17)
intro any5(rank:17)
intro any6(rank:17)
intro any_list1(rank:17)
intro any4(rank:17)
intro any2(rank:17)
=================================================
Progress: 204


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 6
intro any2(rank:17)
intro any4(rank:17)
intro any5(rank:17)
intro any6(rank:17)
intro any_list1(rank:17)
intro any3(rank:17)
=================================================
Progress: 205


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any2(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 5
intro any3(rank:17)
intro any5(rank:17)
intro any6(rank:17)
intro any_list1(rank:17)
intro any4(rank:17)
=================================================
Progress: 206


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any3(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 4
intro any4(rank:17)
intro any5(rank:17)
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 207


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro any5(rank:17)
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 208


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 209


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 210


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 4, any2: 6, any3: 1, any4: 8, any5: 1, any6: 0, any7: 3, any_list1: (Nil), any_list3: (0::(Nil))
Model : any1: 1, any2: 0, any3: 2, any4: 1, any5: 2, any6: 6, any7: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 6, any2: 6, any3: 4, any4: 7, any5: 4, any6: 6, any7: 1, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((0::(Nil))) ((3::(0::(1::(8::(1::(Nil))))))) @ (6::(4::(Nil))))) = reverse ((qreva ((0::(Nil))) ((3::(0::(1::(8::(1::(6::(4::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(6::(2::(1::(2::(Nil))))))) @ (0::(1::(Nil))))) = reverse ((qreva ((Nil)) ((5::(6::(2::(1::(2::(0::(1::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((1::(6::(4::(7::(4::(Nil))))))) @ (6::(6::(Nil))))) = reverse ((qreva ((Nil)) ((1::(6::(4::(7::(4::(6::(6::(Nil))))))))) @ (Nil)))
Simplifying took 0.014333 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 211


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:20)
=================================================
Progress: 212


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any2(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 5
intro any3(rank:17)
intro any5(rank:17)
intro any6(rank:17)
intro any_list1(rank:17)
intro any4(rank:17)
=================================================
Progress: 213


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any3(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 4
intro any4(rank:17)
intro any5(rank:17)
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 214


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro any5(rank:17)
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 215


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 216


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 217


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 8, any2: 7, any3: 6, any4: 0, any5: 3, any6: 6, any7: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 6, any2: 1, any3: 5, any4: 1, any5: 7, any6: 7, any7: 0, any_list1: (1::(Nil)), any_list3: (Nil)
Model : any1: 3, any2: 4, any3: 0, any4: 5, any5: 7, any6: 1, any7: 1, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((7::(6::(3::(0::(6::(Nil))))))) @ (7::(8::(Nil))))) = reverse ((qreva ((Nil)) ((7::(6::(3::(0::(6::(7::(8::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(7::(7::(1::(5::(Nil))))))) @ (1::(6::(1::(Nil)))))) = reverse ((qreva ((Nil)) ((0::(7::(7::(1::(5::(1::(6::(Nil))))))))) @ (1::(Nil))))
reverse ((qreva ((Nil)) ((1::(1::(7::(5::(0::(Nil))))))) @ (4::(3::(Nil))))) = reverse ((qreva ((Nil)) ((1::(1::(7::(5::(0::(4::(3::(Nil))))))))) @ (Nil)))
Simplifying took 0.014759 seconds
Result : true
=================================================
Progress: 218


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any3(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 4
intro any4(rank:17)
intro any5(rank:17)
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 219


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro any5(rank:17)
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 220


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 221


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 222


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 1, any2: 0, any3: 4, any4: 4, any5: 2, any6: 2, any7: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 3, any3: 6, any4: 8, any5: 8, any6: 8, any7: 0, any_list1: (Nil), any_list3: (4::(Nil))
Model : any1: 0, any2: 2, any3: 0, any4: 5, any5: 3, any6: 2, any7: 5, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((6::(2::(2::(4::(4::(Nil))))))) @ (0::(1::(Nil))))) = reverse ((qreva ((Nil)) ((6::(2::(2::(4::(4::(0::(1::(Nil))))))))) @ (Nil)))
reverse ((qreva ((4::(Nil))) ((0::(8::(8::(8::(6::(Nil))))))) @ (3::(3::(Nil))))) = reverse ((qreva ((4::(Nil))) ((0::(8::(8::(8::(6::(3::(3::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(2::(3::(5::(0::(Nil))))))) @ (2::(0::(Nil))))) = reverse ((qreva ((Nil)) ((5::(2::(3::(5::(0::(2::(0::(Nil))))))))) @ (Nil)))
Simplifying took 0.014325 seconds
Result : true
=================================================
Progress: 223


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro any5(rank:17)
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 224


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 225


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 226


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 6, any2: 0, any3: 8, any4: 5, any5: 0, any6: 5, any7: 7, any_list1: (4::(7::(Nil))), any_list3: (Nil)
Model : any1: 2, any2: 6, any3: 1, any4: 3, any5: 0, any6: 5, any7: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 8, any3: 5, any4: 3, any5: 3, any6: 2, any7: 0, any_list1: (7::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((7::(5::(0::(5::(8::(Nil))))))) @ (0::(6::(4::(7::(Nil))))))) = reverse ((qreva ((Nil)) ((7::(5::(0::(5::(8::(0::(6::(Nil))))))))) @ (4::(7::(Nil)))))
reverse ((qreva ((Nil)) ((8::(5::(0::(3::(1::(Nil))))))) @ (6::(2::(Nil))))) = reverse ((qreva ((Nil)) ((8::(5::(0::(3::(1::(6::(2::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(2::(3::(3::(5::(Nil))))))) @ (8::(7::(7::(Nil)))))) = reverse ((qreva ((Nil)) ((0::(2::(3::(3::(5::(8::(7::(Nil))))))))) @ (7::(Nil))))
Simplifying took 0.019031 seconds
Result : true
=================================================
Progress: 227


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 228


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 229


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 1, any2: 0, any3: 0, any4: 7, any5: 5, any6: 6, any7: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 2, any3: 8, any4: 8, any5: 0, any6: 6, any7: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 7, any3: 6, any4: 8, any5: 4, any6: 1, any7: 8, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((8::(6::(5::(7::(0::(Nil))))))) @ (0::(1::(Nil))))) = reverse ((qreva ((Nil)) ((8::(6::(5::(7::(0::(0::(1::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((6::(6::(0::(8::(8::(Nil))))))) @ (2::(4::(Nil))))) = reverse ((qreva ((Nil)) ((6::(6::(0::(8::(8::(2::(4::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((8::(1::(4::(8::(6::(Nil))))))) @ (7::(5::(Nil))))) = reverse ((qreva ((Nil)) ((8::(1::(4::(8::(6::(7::(5::(Nil))))))))) @ (Nil)))
Simplifying took 0.014751 seconds
Result : true
=================================================
Progress: 230


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 231


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any5 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 0, any2: 4, any3: 7, any4: 3, any5: 0, any6: 5, any7: 1, any_list1: (Nil), any_list3: (3::(6::(Nil)))
Model : any1: 5, any2: 5, any3: 0, any4: 6, any5: 2, any6: 3, any7: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 6, any3: 6, any4: 0, any5: 3, any6: 8, any7: 2, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((3::(6::(Nil)))) ((1::(5::(0::(3::(7::(Nil))))))) @ (4::(0::(Nil))))) = reverse ((qreva ((3::(6::(Nil)))) ((1::(5::(0::(3::(7::(4::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((6::(3::(2::(6::(0::(Nil))))))) @ (5::(5::(Nil))))) = reverse ((qreva ((Nil)) ((6::(3::(2::(6::(0::(5::(5::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(8::(3::(0::(6::(Nil))))))) @ (6::(0::(Nil))))) = reverse ((qreva ((Nil)) ((2::(8::(3::(0::(6::(6::(0::(Nil))))))))) @ (Nil)))
Simplifying took 0.016460 seconds
Result : true
=================================================
Progress: 232


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any6 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 2, any2: 6, any3: 5, any4: 7, any5: 8, any6: 5, any7: 6, any_list1: (1::(3::(Nil))), any_list3: (Nil)
Model : any1: 3, any2: 3, any3: 7, any4: 2, any5: 1, any6: 6, any7: 0, any_list1: (6::(Nil)), any_list3: (Nil)
Model : any1: 0, any2: 5, any3: 4, any4: 3, any5: 4, any6: 4, any7: 1, any_list1: (Nil), any_list3: (0::(2::(Nil)))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((6::(5::(8::(7::(5::(Nil))))))) @ (6::(2::(1::(3::(Nil))))))) = reverse ((qreva ((Nil)) ((6::(5::(8::(7::(5::(6::(2::(Nil))))))))) @ (1::(3::(Nil)))))
reverse ((qreva ((Nil)) ((0::(6::(1::(2::(7::(Nil))))))) @ (3::(3::(6::(Nil)))))) = reverse ((qreva ((Nil)) ((0::(6::(1::(2::(7::(3::(3::(Nil))))))))) @ (6::(Nil))))
reverse ((qreva ((0::(2::(Nil)))) ((1::(4::(4::(3::(4::(Nil))))))) @ (5::(0::(Nil))))) = reverse ((qreva ((0::(2::(Nil)))) ((1::(4::(4::(3::(4::(5::(0::(Nil))))))))) @ (Nil)))
Simplifying took 0.022041 seconds
Result : true
=================================================
Progress: 233


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any3(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 4
intro any4(rank:17)
intro any5(rank:17)
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 234


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro any5(rank:17)
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 235


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any5 : any
---------------------------------------
forall (any3:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 236


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any6 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 237


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 8, any2: 3, any3: 8, any4: 3, any5: 8, any6: 3, any7: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 6, any3: 3, any4: 7, any5: 0, any6: 3, any7: 6, any_list1: (Nil), any_list3: (1::(Nil))
Model : any1: 1, any2: 3, any3: 0, any4: 7, any5: 0, any6: 5, any7: 7, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((6::(3::(8::(3::(8::(Nil))))))) @ (3::(8::(Nil))))) = reverse ((qreva ((Nil)) ((6::(3::(8::(3::(8::(3::(8::(Nil))))))))) @ (Nil)))
reverse ((qreva ((1::(Nil))) ((6::(3::(0::(7::(3::(Nil))))))) @ (6::(7::(Nil))))) = reverse ((qreva ((1::(Nil))) ((6::(3::(0::(7::(3::(6::(7::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((7::(5::(0::(7::(0::(Nil))))))) @ (3::(1::(Nil))))) = reverse ((qreva ((Nil)) ((7::(5::(0::(7::(0::(3::(1::(Nil))))))))) @ (Nil)))
Simplifying took 0.015609 seconds
Result : true
=================================================
Progress: 238


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro any5(rank:17)
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 239


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any5 : any
---------------------------------------
forall (any2:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 240


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any6 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 241


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 8, any2: 8, any3: 8, any4: 8, any5: 3, any6: 8, any7: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 3, any3: 0, any4: 2, any5: 8, any6: 8, any7: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 3, any3: 6, any4: 8, any5: 1, any6: 4, any7: 6, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((2::(8::(3::(8::(8::(Nil))))))) @ (8::(8::(Nil))))) = reverse ((qreva ((Nil)) ((2::(8::(3::(8::(8::(8::(8::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(8::(8::(2::(0::(Nil))))))) @ (3::(3::(Nil))))) = reverse ((qreva ((Nil)) ((5::(8::(8::(2::(0::(3::(3::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((6::(4::(1::(8::(6::(Nil))))))) @ (3::(4::(Nil))))) = reverse ((qreva ((Nil)) ((6::(4::(1::(8::(6::(3::(4::(Nil))))))))) @ (Nil)))
Simplifying took 0.016038 seconds
Result : true
=================================================
Progress: 242


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 243


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any4 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 244


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 0, any2: 6, any3: 8, any4: 6, any5: 6, any6: 7, any7: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 0, any3: 3, any4: 8, any5: 8, any6: 5, any7: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 6, any2: 6, any3: 7, any4: 6, any5: 2, any6: 0, any7: 0, any_list1: (2::(3::(Nil))), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(7::(6::(6::(8::(Nil))))))) @ (6::(0::(Nil))))) = reverse ((qreva ((Nil)) ((0::(7::(6::(6::(8::(6::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((4::(5::(8::(8::(3::(Nil))))))) @ (0::(3::(Nil))))) = reverse ((qreva ((Nil)) ((4::(5::(8::(8::(3::(0::(3::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(0::(2::(6::(7::(Nil))))))) @ (6::(6::(2::(3::(Nil))))))) = reverse ((qreva ((Nil)) ((0::(0::(2::(6::(7::(6::(6::(Nil))))))))) @ (2::(3::(Nil)))))
Simplifying took 0.018654 seconds
Result : true
=================================================
Progress: 245


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 246


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 3, any2: 5, any3: 3, any4: 0, any5: 3, any6: 0, any7: 0, any_list1: (7::(Nil)), any_list3: (Nil)
Model : any1: 3, any2: 5, any3: 0, any4: 1, any5: 0, any6: 8, any7: 3, any_list1: (Nil), any_list3: (2::(Nil))
Model : any1: 8, any2: 8, any3: 0, any4: 5, any5: 4, any6: 1, any7: 4, any_list1: (4::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(0::(3::(0::(3::(Nil))))))) @ (5::(3::(7::(Nil)))))) = reverse ((qreva ((Nil)) ((0::(0::(3::(0::(3::(5::(3::(Nil))))))))) @ (7::(Nil))))
reverse ((qreva ((2::(Nil))) ((3::(8::(0::(1::(0::(Nil))))))) @ (5::(3::(Nil))))) = reverse ((qreva ((2::(Nil))) ((3::(8::(0::(1::(0::(5::(3::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((4::(1::(4::(5::(0::(Nil))))))) @ (8::(8::(4::(Nil)))))) = reverse ((qreva ((Nil)) ((4::(1::(4::(5::(0::(8::(8::(Nil))))))))) @ (4::(Nil))))
Simplifying took 0.017410 seconds
Result : true
=================================================
Progress: 247


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 2, any2: 2, any3: 2, any4: 6, any5: 4, any6: 5, any7: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 6, any2: 5, any3: 6, any4: 1, any5: 4, any6: 5, any7: 4, any_list1: (Nil), any_list3: (4::(Nil))
Model : any1: 4, any2: 0, any3: 0, any4: 3, any5: 3, any6: 8, any7: 3, any_list1: (1::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((8::(5::(4::(6::(2::(Nil))))))) @ (2::(2::(Nil))))) = reverse ((qreva ((Nil)) ((8::(5::(4::(6::(2::(2::(2::(Nil))))))))) @ (Nil)))
reverse ((qreva ((4::(Nil))) ((4::(5::(4::(1::(6::(Nil))))))) @ (5::(6::(Nil))))) = reverse ((qreva ((4::(Nil))) ((4::(5::(4::(1::(6::(5::(6::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((3::(8::(3::(3::(0::(Nil))))))) @ (0::(4::(1::(Nil)))))) = reverse ((qreva ((Nil)) ((3::(8::(3::(3::(0::(0::(4::(Nil))))))))) @ (1::(Nil))))
Simplifying took 0.016269 seconds
Result : true
=================================================
Progress: 248


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro any5(rank:17)
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 249


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 250


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any6 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 251


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 7, any2: 3, any3: 7, any4: 3, any5: 4, any6: 7, any7: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 5, any3: 3, any4: 4, any5: 7, any6: 8, any7: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 8, any3: 2, any4: 8, any5: 6, any6: 7, any7: 1, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(7::(4::(3::(7::(Nil))))))) @ (3::(7::(Nil))))) = reverse ((qreva ((Nil)) ((0::(7::(4::(3::(7::(3::(7::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(8::(7::(4::(3::(Nil))))))) @ (5::(7::(Nil))))) = reverse ((qreva ((Nil)) ((5::(8::(7::(4::(3::(5::(7::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((1::(7::(6::(8::(2::(Nil))))))) @ (8::(3::(Nil))))) = reverse ((qreva ((Nil)) ((1::(7::(6::(8::(2::(8::(3::(Nil))))))))) @ (Nil)))
Simplifying took 0.016379 seconds
Result : true
=================================================
Progress: 252


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 253


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 254


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 3, any2: 8, any3: 4, any4: 7, any5: 0, any6: 7, any7: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 3, any3: 0, any4: 5, any5: 5, any6: 0, any7: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 4, any3: 3, any4: 5, any5: 5, any6: 1, any7: 7, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((5::(7::(0::(7::(4::(Nil))))))) @ (8::(3::(Nil))))) = reverse ((qreva ((Nil)) ((5::(7::(0::(7::(4::(8::(3::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((4::(0::(5::(5::(0::(Nil))))))) @ (3::(7::(Nil))))) = reverse ((qreva ((Nil)) ((4::(0::(5::(5::(0::(3::(7::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((7::(1::(5::(5::(3::(Nil))))))) @ (4::(0::(Nil))))) = reverse ((qreva ((Nil)) ((7::(1::(5::(5::(3::(4::(0::(Nil))))))))) @ (Nil)))
Simplifying took 0.013629 seconds
Result : true
=================================================
Progress: 255


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 256


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 8, any2: 7, any3: 4, any4: 7, any5: 7, any6: 8, any7: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 0, any3: 4, any4: 8, any5: 2, any6: 5, any7: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 6, any3: 2, any4: 0, any5: 4, any6: 0, any7: 1, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((6::(8::(7::(7::(4::(Nil))))))) @ (7::(8::(Nil))))) = reverse ((qreva ((Nil)) ((6::(8::(7::(7::(4::(7::(8::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((7::(5::(2::(8::(4::(Nil))))))) @ (0::(2::(Nil))))) = reverse ((qreva ((Nil)) ((7::(5::(2::(8::(4::(0::(2::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((1::(0::(4::(0::(2::(Nil))))))) @ (6::(3::(Nil))))) = reverse ((qreva ((Nil)) ((1::(0::(4::(0::(2::(6::(3::(Nil))))))))) @ (Nil)))
Simplifying took 0.014366 seconds
Result : true
=================================================
Progress: 257


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 2, any2: 0, any3: 8, any4: 4, any5: 4, any6: 0, any7: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 0, any3: 0, any4: 1, any5: 7, any6: 4, any7: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 2, any3: 2, any4: 7, any5: 5, any6: 4, any7: 1, any_list1: (0::(Nil)), any_list3: (8::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((7::(0::(4::(4::(8::(Nil))))))) @ (0::(2::(Nil))))) = reverse ((qreva ((Nil)) ((7::(0::(4::(4::(8::(0::(2::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(4::(7::(1::(0::(Nil))))))) @ (0::(8::(Nil))))) = reverse ((qreva ((Nil)) ((0::(4::(7::(1::(0::(0::(8::(Nil))))))))) @ (Nil)))
reverse ((qreva ((8::(Nil))) ((1::(4::(5::(7::(2::(Nil))))))) @ (2::(5::(0::(Nil)))))) = reverse ((qreva ((8::(Nil))) ((1::(4::(5::(7::(2::(2::(5::(Nil))))))))) @ (0::(Nil))))
Simplifying took 0.016372 seconds
Result : true
=================================================
Progress: 258


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 259


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 260


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 7, any2: 5, any3: 2, any4: 0, any5: 2, any6: 4, any7: 5, any_list1: (5::(Nil)), any_list3: (7::(Nil))
Model : any1: 0, any2: 3, any3: 2, any4: 7, any5: 0, any6: 1, any7: 4, any_list1: (8::(Nil)), any_list3: (Nil)
Model : any1: 6, any2: 3, any3: 6, any4: 4, any5: 2, any6: 7, any7: 4, any_list1: (0::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((7::(Nil))) ((5::(4::(2::(0::(2::(Nil))))))) @ (5::(7::(5::(Nil)))))) = reverse ((qreva ((7::(Nil))) ((5::(4::(2::(0::(2::(5::(7::(Nil))))))))) @ (5::(Nil))))
reverse ((qreva ((Nil)) ((4::(1::(0::(7::(2::(Nil))))))) @ (3::(0::(8::(Nil)))))) = reverse ((qreva ((Nil)) ((4::(1::(0::(7::(2::(3::(0::(Nil))))))))) @ (8::(Nil))))
reverse ((qreva ((Nil)) ((4::(7::(2::(4::(6::(Nil))))))) @ (3::(6::(0::(Nil)))))) = reverse ((qreva ((Nil)) ((4::(7::(2::(4::(6::(3::(6::(Nil))))))))) @ (0::(Nil))))
Simplifying took 0.019686 seconds
Result : true
=================================================
Progress: 261


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 262


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 0, any2: 5, any3: 7, any4: 5, any5: 2, any6: 1, any7: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 1, any3: 1, any4: 0, any5: 5, any6: 8, any7: 1, any_list1: (Nil), any_list3: (5::(Nil))
Model : any1: 0, any2: 0, any3: 7, any4: 0, any5: 8, any6: 7, any7: 4, any_list1: (6::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((2::(1::(2::(5::(7::(Nil))))))) @ (5::(0::(Nil))))) = reverse ((qreva ((Nil)) ((2::(1::(2::(5::(7::(5::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((5::(Nil))) ((1::(8::(5::(0::(1::(Nil))))))) @ (1::(0::(Nil))))) = reverse ((qreva ((5::(Nil))) ((1::(8::(5::(0::(1::(1::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((4::(7::(8::(0::(7::(Nil))))))) @ (0::(0::(6::(Nil)))))) = reverse ((qreva ((Nil)) ((4::(7::(8::(0::(7::(0::(0::(Nil))))))))) @ (6::(Nil))))
Simplifying took 0.014782 seconds
Result : true
=================================================
Progress: 263


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 2, any2: 3, any3: 4, any4: 3, any5: 3, any6: 0, any7: 6, any_list1: (7::(Nil)), any_list3: (Nil)
Model : any1: 7, any2: 4, any3: 5, any4: 1, any5: 6, any6: 4, any7: 0, any_list1: (Nil), any_list3: (0::(Nil))
Model : any1: 6, any2: 3, any3: 8, any4: 7, any5: 0, any6: 7, any7: 6, any_list1: (2::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((6::(0::(3::(3::(4::(Nil))))))) @ (3::(2::(7::(Nil)))))) = reverse ((qreva ((Nil)) ((6::(0::(3::(3::(4::(3::(2::(Nil))))))))) @ (7::(Nil))))
reverse ((qreva ((0::(Nil))) ((0::(4::(6::(1::(5::(Nil))))))) @ (4::(7::(Nil))))) = reverse ((qreva ((0::(Nil))) ((0::(4::(6::(1::(5::(4::(7::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((6::(7::(0::(7::(8::(Nil))))))) @ (3::(6::(2::(Nil)))))) = reverse ((qreva ((Nil)) ((6::(7::(0::(7::(8::(3::(6::(Nil))))))))) @ (2::(Nil))))
Simplifying took 0.018688 seconds
Result : true
=================================================
Progress: 264


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 265


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any4 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 3, any2: 8, any3: 5, any4: 2, any5: 7, any6: 4, any7: 3, any_list1: (0::(Nil)), any_list3: (Nil)
Model : any1: 6, any2: 0, any3: 1, any4: 3, any5: 7, any6: 0, any7: 5, any_list1: (2::(Nil)), any_list3: (Nil)
Model : any1: 4, any2: 0, any3: 6, any4: 2, any5: 0, any6: 6, any7: 8, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((3::(4::(7::(2::(5::(Nil))))))) @ (8::(3::(0::(Nil)))))) = reverse ((qreva ((Nil)) ((3::(4::(7::(2::(5::(8::(3::(Nil))))))))) @ (0::(Nil))))
reverse ((qreva ((Nil)) ((5::(0::(7::(3::(1::(Nil))))))) @ (0::(6::(2::(Nil)))))) = reverse ((qreva ((Nil)) ((5::(0::(7::(3::(1::(0::(6::(Nil))))))))) @ (2::(Nil))))
reverse ((qreva ((Nil)) ((8::(6::(0::(2::(6::(Nil))))))) @ (0::(4::(Nil))))) = reverse ((qreva ((Nil)) ((8::(6::(0::(2::(6::(0::(4::(Nil))))))))) @ (Nil)))
Simplifying took 0.016004 seconds
Result : true
=================================================
Progress: 266


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any4 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 2, any2: 0, any3: 2, any4: 7, any5: 8, any6: 6, any7: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 7, any3: 3, any4: 5, any5: 1, any6: 8, any7: 2, any_list1: (3::(8::(Nil))), any_list3: (Nil)
Model : any1: 5, any2: 7, any3: 1, any4: 7, any5: 4, any6: 2, any7: 1, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((2::(6::(8::(7::(2::(Nil))))))) @ (0::(2::(Nil))))) = reverse ((qreva ((Nil)) ((2::(6::(8::(7::(2::(0::(2::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(8::(1::(5::(3::(Nil))))))) @ (7::(1::(3::(8::(Nil))))))) = reverse ((qreva ((Nil)) ((2::(8::(1::(5::(3::(7::(1::(Nil))))))))) @ (3::(8::(Nil)))))
reverse ((qreva ((Nil)) ((1::(2::(4::(7::(1::(Nil))))))) @ (7::(5::(Nil))))) = reverse ((qreva ((Nil)) ((1::(2::(4::(7::(1::(7::(5::(Nil))))))))) @ (Nil)))
Simplifying took 0.017691 seconds
Result : true
=================================================
Progress: 267


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any5 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any5
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 3, any2: 8, any3: 6, any4: 5, any5: 2, any6: 7, any7: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 1, any3: 4, any4: 0, any5: 2, any6: 6, any7: 8, any_list1: (Nil), any_list3: (0::(Nil))
Model : any1: 3, any2: 5, any3: 4, any4: 2, any5: 0, any6: 3, any7: 8, any_list1: (0::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((1::(7::(2::(5::(6::(Nil))))))) @ (8::(3::(Nil))))) = reverse ((qreva ((Nil)) ((1::(7::(2::(5::(6::(8::(3::(Nil))))))))) @ (Nil)))
reverse ((qreva ((0::(Nil))) ((8::(6::(2::(0::(4::(Nil))))))) @ (1::(8::(Nil))))) = reverse ((qreva ((0::(Nil))) ((8::(6::(2::(0::(4::(1::(8::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((8::(3::(0::(2::(4::(Nil))))))) @ (5::(3::(0::(Nil)))))) = reverse ((qreva ((Nil)) ((8::(3::(0::(2::(4::(5::(3::(Nil))))))))) @ (0::(Nil))))
Simplifying took 0.016403 seconds
Result : true
=================================================
Progress: 268


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro any5(rank:17)
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 269


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 270


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any6 : any
---------------------------------------
forall (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 271


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 2, any2: 8, any3: 1, any4: 4, any5: 3, any6: 0, any7: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 6, any2: 5, any3: 7, any4: 0, any5: 0, any6: 0, any7: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 2, any3: 8, any4: 8, any5: 8, any6: 8, any7: 6, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((3::(0::(3::(4::(1::(Nil))))))) @ (8::(2::(Nil))))) = reverse ((qreva ((Nil)) ((3::(0::(3::(4::(1::(8::(2::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(0::(0::(0::(7::(Nil))))))) @ (5::(6::(Nil))))) = reverse ((qreva ((Nil)) ((0::(0::(0::(0::(7::(5::(6::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((6::(8::(8::(8::(8::(Nil))))))) @ (2::(0::(Nil))))) = reverse ((qreva ((Nil)) ((6::(8::(8::(8::(8::(2::(0::(Nil))))))))) @ (Nil)))
Simplifying took 0.013856 seconds
Result : true
=================================================
Progress: 272


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any3:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 273


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any4 : any
any6 : any
---------------------------------------
forall (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 274


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 1, any2: 1, any3: 1, any4: 5, any5: 6, any6: 0, any7: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 1, any3: 6, any4: 1, any5: 7, any6: 8, any7: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 4, any3: 6, any4: 6, any5: 5, any6: 5, any7: 1, any_list1: (3::(Nil)), any_list3: (4::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((6::(0::(6::(5::(1::(Nil))))))) @ (1::(1::(Nil))))) = reverse ((qreva ((Nil)) ((6::(0::(6::(5::(1::(1::(1::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(8::(7::(1::(6::(Nil))))))) @ (1::(4::(Nil))))) = reverse ((qreva ((Nil)) ((0::(8::(7::(1::(6::(1::(4::(Nil))))))))) @ (Nil)))
reverse ((qreva ((4::(Nil))) ((1::(5::(5::(6::(6::(Nil))))))) @ (4::(4::(3::(Nil)))))) = reverse ((qreva ((4::(Nil))) ((1::(5::(5::(6::(6::(4::(4::(Nil))))))))) @ (3::(Nil))))
Simplifying took 0.016981 seconds
Result : true
=================================================
Progress: 275


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any5 : any
---------------------------------------
forall (any3:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any5 : any
any6 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 276


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any5 : any
---------------------------------------
forall (any3:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 2, any2: 0, any3: 8, any4: 2, any5: 1, any6: 6, any7: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 6, any2: 1, any3: 4, any4: 0, any5: 1, any6: 5, any7: 6, any_list1: (Nil), any_list3: (0::(Nil))
Model : any1: 6, any2: 3, any3: 7, any4: 2, any5: 8, any6: 5, any7: 1, any_list1: (Nil), any_list3: (7::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((8::(6::(1::(2::(8::(Nil))))))) @ (0::(2::(Nil))))) = reverse ((qreva ((Nil)) ((8::(6::(1::(2::(8::(0::(2::(Nil))))))))) @ (Nil)))
reverse ((qreva ((0::(Nil))) ((6::(5::(1::(0::(4::(Nil))))))) @ (1::(6::(Nil))))) = reverse ((qreva ((0::(Nil))) ((6::(5::(1::(0::(4::(1::(6::(Nil))))))))) @ (Nil)))
reverse ((qreva ((7::(Nil))) ((1::(5::(8::(2::(7::(Nil))))))) @ (3::(6::(Nil))))) = reverse ((qreva ((7::(Nil))) ((1::(5::(8::(2::(7::(3::(6::(Nil))))))))) @ (Nil)))
Simplifying took 0.017076 seconds
Result : true
=================================================
Progress: 277


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any6 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any) (any5:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 6, any2: 8, any3: 6, any4: 2, any5: 6, any6: 2, any7: 8, any_list1: (3::(Nil)), any_list3: (Nil)
Model : any1: 0, any2: 0, any3: 0, any4: 0, any5: 5, any6: 5, any7: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 2, any3: 0, any4: 5, any5: 3, any6: 1, any7: 1, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((8::(2::(6::(2::(6::(Nil))))))) @ (8::(6::(3::(Nil)))))) = reverse ((qreva ((Nil)) ((8::(2::(6::(2::(6::(8::(6::(Nil))))))))) @ (3::(Nil))))
reverse ((qreva ((Nil)) ((4::(5::(5::(0::(0::(Nil))))))) @ (0::(0::(Nil))))) = reverse ((qreva ((Nil)) ((4::(5::(5::(0::(0::(0::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((1::(1::(3::(5::(0::(Nil))))))) @ (2::(4::(Nil))))) = reverse ((qreva ((Nil)) ((1::(1::(3::(5::(0::(2::(4::(Nil))))))))) @ (Nil)))
Simplifying took 0.013727 seconds
Result : true
=================================================
Progress: 278


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 279


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any2:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 280


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 1, any2: 6, any3: 2, any4: 5, any5: 6, any6: 0, any7: 2, any_list1: (2::(Nil)), any_list3: (Nil)
Model : any1: 3, any2: 5, any3: 3, any4: 0, any5: 4, any6: 2, any7: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 4, any3: 0, any4: 1, any5: 3, any6: 5, any7: 6, any_list1: (Nil), any_list3: (2::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((2::(0::(6::(5::(2::(Nil))))))) @ (6::(1::(2::(Nil)))))) = reverse ((qreva ((Nil)) ((2::(0::(6::(5::(2::(6::(1::(Nil))))))))) @ (2::(Nil))))
reverse ((qreva ((Nil)) ((0::(2::(4::(0::(3::(Nil))))))) @ (5::(3::(Nil))))) = reverse ((qreva ((Nil)) ((0::(2::(4::(0::(3::(5::(3::(Nil))))))))) @ (Nil)))
reverse ((qreva ((2::(Nil))) ((6::(5::(3::(1::(0::(Nil))))))) @ (4::(5::(Nil))))) = reverse ((qreva ((2::(Nil))) ((6::(5::(3::(1::(0::(4::(5::(Nil))))))))) @ (Nil)))
Simplifying took 0.014785 seconds
Result : true
=================================================
Progress: 281


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any5 : any
---------------------------------------
forall (any2:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 282


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any5 : any
---------------------------------------
forall (any2:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 4, any2: 3, any3: 8, any4: 4, any5: 2, any6: 6, any7: 1, any_list1: (Nil), any_list3: (4::(Nil))
Model : any1: 4, any2: 6, any3: 2, any4: 1, any5: 3, any6: 5, any7: 2, any_list1: (0::(Nil)), any_list3: (Nil)
Model : any1: 3, any2: 2, any3: 0, any4: 8, any5: 1, any6: 5, any7: 2, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((4::(Nil))) ((1::(6::(2::(4::(8::(Nil))))))) @ (3::(4::(Nil))))) = reverse ((qreva ((4::(Nil))) ((1::(6::(2::(4::(8::(3::(4::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(5::(3::(1::(2::(Nil))))))) @ (6::(4::(0::(Nil)))))) = reverse ((qreva ((Nil)) ((2::(5::(3::(1::(2::(6::(4::(Nil))))))))) @ (0::(Nil))))
reverse ((qreva ((Nil)) ((2::(5::(1::(8::(0::(Nil))))))) @ (2::(3::(Nil))))) = reverse ((qreva ((Nil)) ((2::(5::(1::(8::(0::(2::(3::(Nil))))))))) @ (Nil)))
Simplifying took 0.015797 seconds
Result : true
=================================================
Progress: 283


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any6 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any) (any5:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 3, any2: 8, any3: 3, any4: 3, any5: 8, any6: 3, any7: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 7, any3: 4, any4: 1, any5: 1, any6: 5, any7: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 0, any3: 5, any4: 8, any5: 6, any6: 0, any7: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((5::(3::(8::(3::(3::(Nil))))))) @ (8::(3::(Nil))))) = reverse ((qreva ((Nil)) ((5::(3::(8::(3::(3::(8::(3::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((3::(5::(1::(1::(4::(Nil))))))) @ (7::(0::(Nil))))) = reverse ((qreva ((Nil)) ((3::(5::(1::(1::(4::(7::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(0::(6::(8::(5::(Nil))))))) @ (0::(0::(Nil))))) = reverse ((qreva ((Nil)) ((0::(0::(6::(8::(5::(0::(0::(Nil))))))))) @ (Nil)))
Simplifying took 0.013347 seconds
Result : true
=================================================
Progress: 284


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 285


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any4 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 7, any2: 6, any3: 6, any4: 3, any5: 1, any6: 0, any7: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 5, any3: 0, any4: 7, any5: 3, any6: 2, any7: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 3, any3: 0, any4: 0, any5: 0, any6: 0, any7: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((2::(0::(1::(3::(6::(Nil))))))) @ (6::(7::(Nil))))) = reverse ((qreva ((Nil)) ((2::(0::(1::(3::(6::(6::(7::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((3::(2::(3::(7::(0::(Nil))))))) @ (5::(7::(Nil))))) = reverse ((qreva ((Nil)) ((3::(2::(3::(7::(0::(5::(7::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(0::(0::(0::(0::(Nil))))))) @ (3::(1::(Nil))))) = reverse ((qreva ((Nil)) ((0::(0::(0::(0::(0::(3::(1::(Nil))))))))) @ (Nil)))
Simplifying took 0.011174 seconds
Result : true
=================================================
Progress: 286


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any4 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any4 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any5:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 2, any2: 6, any3: 1, any4: 6, any5: 1, any6: 1, any7: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 2, any3: 0, any4: 5, any5: 4, any6: 8, any7: 2, any_list1: (Nil), any_list3: (7::(Nil))
Model : any1: 0, any2: 7, any3: 2, any4: 7, any5: 8, any6: 2, any7: 3, any_list1: (2::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((8::(1::(1::(6::(1::(Nil))))))) @ (6::(2::(Nil))))) = reverse ((qreva ((Nil)) ((8::(1::(1::(6::(1::(6::(2::(Nil))))))))) @ (Nil)))
reverse ((qreva ((7::(Nil))) ((2::(8::(4::(5::(0::(Nil))))))) @ (2::(3::(Nil))))) = reverse ((qreva ((7::(Nil))) ((2::(8::(4::(5::(0::(2::(3::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((3::(2::(8::(7::(2::(Nil))))))) @ (7::(0::(2::(Nil)))))) = reverse ((qreva ((Nil)) ((3::(2::(8::(7::(2::(7::(0::(Nil))))))))) @ (2::(Nil))))
Simplifying took 0.016626 seconds
Result : true
=================================================
Progress: 287


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any5 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any5
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 8, any2: 0, any3: 0, any4: 7, any5: 2, any6: 4, any7: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 8, any3: 1, any4: 3, any5: 0, any6: 0, any7: 2, any_list1: (Nil), any_list3: (1::(2::(Nil)))
Model : any1: 2, any2: 7, any3: 1, any4: 6, any5: 0, any6: 2, any7: 0, any_list1: (0::(Nil)), any_list3: (4::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((1::(4::(2::(7::(0::(Nil))))))) @ (0::(8::(Nil))))) = reverse ((qreva ((Nil)) ((1::(4::(2::(7::(0::(0::(8::(Nil))))))))) @ (Nil)))
reverse ((qreva ((1::(2::(Nil)))) ((2::(0::(0::(3::(1::(Nil))))))) @ (8::(0::(Nil))))) = reverse ((qreva ((1::(2::(Nil)))) ((2::(0::(0::(3::(1::(8::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((4::(Nil))) ((0::(2::(0::(6::(1::(Nil))))))) @ (7::(2::(0::(Nil)))))) = reverse ((qreva ((4::(Nil))) ((0::(2::(0::(6::(1::(7::(2::(Nil))))))))) @ (0::(Nil))))
Simplifying took 0.017202 seconds
Result : true
=================================================
Progress: 288


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 289


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 290


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 0, any2: 0, any3: 7, any4: 8, any5: 5, any6: 5, any7: 8, any_list1: (Nil), any_list3: (0::(Nil))
Model : any1: 8, any2: 8, any3: 3, any4: 3, any5: 8, any6: 5, any7: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 0, any3: 6, any4: 0, any5: 8, any6: 1, any7: 0, any_list1: (5::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((0::(Nil))) ((8::(5::(5::(8::(7::(Nil))))))) @ (0::(0::(Nil))))) = reverse ((qreva ((0::(Nil))) ((8::(5::(5::(8::(7::(0::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(5::(8::(3::(3::(Nil))))))) @ (8::(8::(Nil))))) = reverse ((qreva ((Nil)) ((2::(5::(8::(3::(3::(8::(8::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(1::(8::(0::(6::(Nil))))))) @ (0::(2::(5::(Nil)))))) = reverse ((qreva ((Nil)) ((0::(1::(8::(0::(6::(0::(2::(Nil))))))))) @ (5::(Nil))))
Simplifying took 0.017345 seconds
Result : true
=================================================
Progress: 291


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 292


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 5, any2: 4, any3: 7, any4: 5, any5: 2, any6: 3, any7: 1, any_list1: (Nil), any_list3: (0::(Nil))
Model : any1: 3, any2: 0, any3: 1, any4: 0, any5: 3, any6: 0, any7: 3, any_list1: (4::(Nil)), any_list3: (7::(5::(8::(Nil))))
Model : any1: 0, any2: 0, any3: 4, any4: 8, any5: 4, any6: 2, any7: 1, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((0::(Nil))) ((1::(3::(2::(5::(7::(Nil))))))) @ (4::(5::(Nil))))) = reverse ((qreva ((0::(Nil))) ((1::(3::(2::(5::(7::(4::(5::(Nil))))))))) @ (Nil)))
reverse ((qreva ((7::(5::(8::(Nil))))) ((3::(0::(3::(0::(1::(Nil))))))) @ (0::(3::(4::(Nil)))))) = reverse ((qreva ((7::(5::(8::(Nil))))) ((3::(0::(3::(0::(1::(0::(3::(Nil))))))))) @ (4::(Nil))))
reverse ((qreva ((Nil)) ((1::(2::(4::(8::(4::(Nil))))))) @ (0::(0::(Nil))))) = reverse ((qreva ((Nil)) ((1::(2::(4::(8::(4::(0::(0::(Nil))))))))) @ (Nil)))
Simplifying took 0.021472 seconds
Result : true
=================================================
Progress: 293


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any6 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any) (any5:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 4, any2: 2, any3: 6, any4: 2, any5: 1, any6: 0, any7: 4, any_list1: (Nil), any_list3: (4::(Nil))
Model : any1: 7, any2: 0, any3: 2, any4: 2, any5: 4, any6: 2, any7: 4, any_list1: (6::(Nil)), any_list3: (Nil)
Model : any1: 4, any2: 3, any3: 7, any4: 0, any5: 0, any6: 2, any7: 5, any_list1: (Nil), any_list3: (3::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((4::(Nil))) ((4::(0::(1::(2::(6::(Nil))))))) @ (2::(4::(Nil))))) = reverse ((qreva ((4::(Nil))) ((4::(0::(1::(2::(6::(2::(4::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((4::(2::(4::(2::(2::(Nil))))))) @ (0::(7::(6::(Nil)))))) = reverse ((qreva ((Nil)) ((4::(2::(4::(2::(2::(0::(7::(Nil))))))))) @ (6::(Nil))))
reverse ((qreva ((3::(Nil))) ((5::(2::(0::(0::(7::(Nil))))))) @ (3::(4::(Nil))))) = reverse ((qreva ((3::(Nil))) ((5::(2::(0::(0::(7::(3::(4::(Nil))))))))) @ (Nil)))
Simplifying took 0.015740 seconds
Result : true
=================================================
Progress: 294


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 295


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any4 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 5, any2: 3, any3: 2, any4: 1, any5: 2, any6: 2, any7: 5, any_list1: (1::(Nil)), any_list3: (Nil)
Model : any1: 1, any2: 0, any3: 1, any4: 0, any5: 5, any6: 2, any7: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 2, any3: 2, any4: 8, any5: 8, any6: 7, any7: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((5::(2::(2::(1::(2::(Nil))))))) @ (3::(5::(1::(Nil)))))) = reverse ((qreva ((Nil)) ((5::(2::(2::(1::(2::(3::(5::(Nil))))))))) @ (1::(Nil))))
reverse ((qreva ((Nil)) ((2::(2::(5::(0::(1::(Nil))))))) @ (0::(1::(Nil))))) = reverse ((qreva ((Nil)) ((2::(2::(5::(0::(1::(0::(1::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(7::(8::(8::(2::(Nil))))))) @ (2::(5::(Nil))))) = reverse ((qreva ((Nil)) ((0::(7::(8::(8::(2::(2::(5::(Nil))))))))) @ (Nil)))
Simplifying took 0.013792 seconds
Result : true
=================================================
Progress: 296


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any4 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any5:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 0, any2: 3, any3: 7, any4: 3, any5: 3, any6: 2, any7: 3, any_list1: (Nil), any_list3: (1::(Nil))
Model : any1: 3, any2: 1, any3: 1, any4: 1, any5: 2, any6: 5, any7: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 1, any3: 8, any4: 8, any5: 4, any6: 7, any7: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((1::(Nil))) ((3::(2::(3::(3::(7::(Nil))))))) @ (3::(0::(Nil))))) = reverse ((qreva ((1::(Nil))) ((3::(2::(3::(3::(7::(3::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((8::(5::(2::(1::(1::(Nil))))))) @ (1::(3::(Nil))))) = reverse ((qreva ((Nil)) ((8::(5::(2::(1::(1::(1::(3::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(7::(4::(8::(8::(Nil))))))) @ (1::(1::(Nil))))) = reverse ((qreva ((Nil)) ((0::(7::(4::(8::(8::(1::(1::(Nil))))))))) @ (Nil)))
Simplifying took 0.014903 seconds
Result : true
=================================================
Progress: 297


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any5 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any5
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 5, any2: 5, any3: 4, any4: 7, any5: 4, any6: 1, any7: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 2, any3: 1, any4: 6, any5: 8, any6: 0, any7: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 3, any3: 0, any4: 8, any5: 7, any6: 0, any7: 2, any_list1: (6::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((3::(1::(4::(7::(4::(Nil))))))) @ (5::(5::(Nil))))) = reverse ((qreva ((Nil)) ((3::(1::(4::(7::(4::(5::(5::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((3::(0::(8::(6::(1::(Nil))))))) @ (2::(0::(Nil))))) = reverse ((qreva ((Nil)) ((3::(0::(8::(6::(1::(2::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(0::(7::(8::(0::(Nil))))))) @ (3::(0::(6::(Nil)))))) = reverse ((qreva ((Nil)) ((2::(0::(7::(8::(0::(3::(0::(Nil))))))))) @ (6::(Nil))))
Simplifying took 0.014251 seconds
Result : true
=================================================
Progress: 298


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 299


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any4 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 7, any2: 4, any3: 6, any4: 3, any5: 7, any6: 3, any7: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 0, any3: 3, any4: 0, any5: 3, any6: 8, any7: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 0, any3: 5, any4: 4, any5: 0, any6: 7, any7: 1, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(3::(7::(3::(6::(Nil))))))) @ (4::(7::(Nil))))) = reverse ((qreva ((Nil)) ((0::(3::(7::(3::(6::(4::(7::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(8::(3::(0::(3::(Nil))))))) @ (0::(0::(Nil))))) = reverse ((qreva ((Nil)) ((0::(8::(3::(0::(3::(0::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((1::(7::(0::(4::(5::(Nil))))))) @ (0::(4::(Nil))))) = reverse ((qreva ((Nil)) ((1::(7::(0::(4::(5::(0::(4::(Nil))))))))) @ (Nil)))
Simplifying took 0.012831 seconds
Result : true
=================================================
Progress: 300


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any4 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any5:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 3, any2: 8, any3: 5, any4: 0, any5: 2, any6: 5, any7: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 6, any2: 0, any3: 8, any4: 8, any5: 8, any6: 7, any7: 5, any_list1: (Nil), any_list3: (7::(Nil))
Model : any1: 2, any2: 4, any3: 7, any4: 6, any5: 7, any6: 8, any7: 0, any_list1: (8::(Nil)), any_list3: (5::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((2::(5::(2::(0::(5::(Nil))))))) @ (8::(3::(Nil))))) = reverse ((qreva ((Nil)) ((2::(5::(2::(0::(5::(8::(3::(Nil))))))))) @ (Nil)))
reverse ((qreva ((7::(Nil))) ((5::(7::(8::(8::(8::(Nil))))))) @ (0::(6::(Nil))))) = reverse ((qreva ((7::(Nil))) ((5::(7::(8::(8::(8::(0::(6::(Nil))))))))) @ (Nil)))
reverse ((qreva ((5::(Nil))) ((0::(8::(7::(6::(7::(Nil))))))) @ (4::(2::(8::(Nil)))))) = reverse ((qreva ((5::(Nil))) ((0::(8::(7::(6::(7::(4::(2::(Nil))))))))) @ (8::(Nil))))
Simplifying took 0.022327 seconds
Result : true
=================================================
Progress: 301


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any5 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any5
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 8, any2: 5, any3: 0, any4: 0, any5: 6, any6: 5, any7: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 0, any3: 0, any4: 0, any5: 3, any6: 7, any7: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 0, any3: 2, any4: 7, any5: 2, any6: 8, any7: 5, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((5::(5::(6::(0::(0::(Nil))))))) @ (5::(8::(Nil))))) = reverse ((qreva ((Nil)) ((5::(5::(6::(0::(0::(5::(8::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(7::(3::(0::(0::(Nil))))))) @ (0::(4::(Nil))))) = reverse ((qreva ((Nil)) ((0::(7::(3::(0::(0::(0::(4::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(8::(2::(7::(2::(Nil))))))) @ (0::(8::(Nil))))) = reverse ((qreva ((Nil)) ((5::(8::(2::(7::(2::(0::(8::(Nil))))))))) @ (Nil)))
Simplifying took 0.012283 seconds
Result : true
=================================================
Progress: 302


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any4 : any
any5 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any5
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 8, any2: 3, any3: 5, any4: 8, any5: 7, any6: 4, any7: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 7, any3: 3, any4: 0, any5: 5, any6: 0, any7: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 1, any3: 3, any4: 2, any5: 0, any6: 4, any7: 6, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((3::(4::(7::(8::(5::(Nil))))))) @ (3::(8::(Nil))))) = reverse ((qreva ((Nil)) ((3::(4::(7::(8::(5::(3::(8::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(0::(5::(0::(3::(Nil))))))) @ (7::(3::(Nil))))) = reverse ((qreva ((Nil)) ((5::(0::(5::(0::(3::(7::(3::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((6::(4::(0::(2::(3::(Nil))))))) @ (1::(4::(Nil))))) = reverse ((qreva ((Nil)) ((6::(4::(0::(2::(3::(1::(4::(Nil))))))))) @ (Nil)))
Simplifying took 0.013460 seconds
Result : true
=================================================
Progress: 303


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any_list1(rank:17)
=================================================
Progress: 304


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 305


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any5:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 6, any2: 3, any3: 0, any4: 4, any5: 0, any6: 2, any7: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 1, any3: 6, any4: 2, any5: 4, any6: 8, any7: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 5, any3: 2, any4: 0, any5: 7, any6: 8, any7: 5, any_list1: (2::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((7::(2::(0::(4::(0::(Nil))))))) @ (3::(6::(Nil))))) = reverse ((qreva ((Nil)) ((7::(2::(0::(4::(0::(3::(6::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((3::(8::(4::(2::(6::(Nil))))))) @ (1::(2::(Nil))))) = reverse ((qreva ((Nil)) ((3::(8::(4::(2::(6::(1::(2::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(8::(7::(0::(2::(Nil))))))) @ (5::(0::(2::(Nil)))))) = reverse ((qreva ((Nil)) ((5::(8::(7::(0::(2::(5::(0::(Nil))))))))) @ (2::(Nil))))
Simplifying took 0.013481 seconds
Result : true
=================================================
Progress: 306


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 307


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any4:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any4:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 1, any2: 1, any3: 2, any4: 5, any5: 0, any6: 7, any7: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 1, any3: 0, any4: 2, any5: 0, any6: 3, any7: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 4, any3: 5, any4: 7, any5: 6, any6: 1, any7: 0, any_list1: (6::(6::(Nil))), any_list3: (3::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((1::(7::(0::(5::(2::(Nil))))))) @ (1::(1::(Nil))))) = reverse ((qreva ((Nil)) ((1::(7::(0::(5::(2::(1::(1::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((7::(3::(0::(2::(0::(Nil))))))) @ (1::(0::(Nil))))) = reverse ((qreva ((Nil)) ((7::(3::(0::(2::(0::(1::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((3::(Nil))) ((0::(1::(6::(7::(5::(Nil))))))) @ (4::(7::(6::(6::(Nil))))))) = reverse ((qreva ((3::(Nil))) ((0::(1::(6::(7::(5::(4::(7::(Nil))))))))) @ (6::(6::(Nil)))))
Simplifying took 0.018536 seconds
Result : true
=================================================
Progress: 308


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any6 : any
---------------------------------------
forall (any4:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any4:any) (any5:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 8, any2: 4, any3: 8, any4: 6, any5: 1, any6: 0, any7: 7, any_list1: (0::(8::(Nil))), any_list3: (Nil)
Model : any1: 2, any2: 3, any3: 0, any4: 7, any5: 8, any6: 7, any7: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 7, any3: 0, any4: 0, any5: 3, any6: 3, any7: 8, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((7::(0::(1::(6::(8::(Nil))))))) @ (4::(8::(0::(8::(Nil))))))) = reverse ((qreva ((Nil)) ((7::(0::(1::(6::(8::(4::(8::(Nil))))))))) @ (0::(8::(Nil)))))
reverse ((qreva ((Nil)) ((0::(7::(8::(7::(0::(Nil))))))) @ (3::(2::(Nil))))) = reverse ((qreva ((Nil)) ((0::(7::(8::(7::(0::(3::(2::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((8::(3::(3::(0::(0::(Nil))))))) @ (7::(3::(Nil))))) = reverse ((qreva ((Nil)) ((8::(3::(3::(0::(0::(7::(3::(Nil))))))))) @ (Nil)))
Simplifying took 0.017506 seconds
Result : true
=================================================
Progress: 309


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any3:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 310


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any3:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any4 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 0, any2: 0, any3: 0, any4: 3, any5: 8, any6: 8, any7: 4, any_list1: (Nil), any_list3: (8::(Nil))
Model : any1: 1, any2: 8, any3: 6, any4: 0, any5: 8, any6: 6, any7: 7, any_list1: (Nil), any_list3: (8::(Nil))
Model : any1: 3, any2: 5, any3: 0, any4: 5, any5: 1, any6: 8, any7: 3, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((8::(Nil))) ((4::(8::(8::(3::(0::(Nil))))))) @ (0::(0::(Nil))))) = reverse ((qreva ((8::(Nil))) ((4::(8::(8::(3::(0::(0::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((8::(Nil))) ((7::(6::(8::(0::(6::(Nil))))))) @ (8::(1::(Nil))))) = reverse ((qreva ((8::(Nil))) ((7::(6::(8::(0::(6::(8::(1::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((3::(8::(1::(5::(0::(Nil))))))) @ (5::(3::(Nil))))) = reverse ((qreva ((Nil)) ((3::(8::(1::(5::(0::(5::(3::(Nil))))))))) @ (Nil)))
Simplifying took 0.017434 seconds
Result : true
=================================================
Progress: 311


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any4 : any
any6 : any
---------------------------------------
forall (any3:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any4 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any5:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 1, any2: 2, any3: 0, any4: 2, any5: 6, any6: 1, any7: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 0, any3: 4, any4: 8, any5: 7, any6: 3, any7: 0, any_list1: (0::(3::(Nil))), any_list3: (Nil)
Model : any1: 4, any2: 4, any3: 8, any4: 3, any5: 0, any6: 0, any7: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((4::(1::(6::(2::(0::(Nil))))))) @ (2::(1::(Nil))))) = reverse ((qreva ((Nil)) ((4::(1::(6::(2::(0::(2::(1::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(3::(7::(8::(4::(Nil))))))) @ (0::(1::(0::(3::(Nil))))))) = reverse ((qreva ((Nil)) ((0::(3::(7::(8::(4::(0::(1::(Nil))))))))) @ (0::(3::(Nil)))))
reverse ((qreva ((Nil)) ((0::(0::(0::(3::(8::(Nil))))))) @ (4::(4::(Nil))))) = reverse ((qreva ((Nil)) ((0::(0::(0::(3::(8::(4::(4::(Nil))))))))) @ (Nil)))
Simplifying took 0.014630 seconds
Result : true
=================================================
Progress: 312


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any5 : any
any6 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any5 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any5
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 3, any2: 4, any3: 7, any4: 2, any5: 2, any6: 3, any7: 7, any_list1: (Nil), any_list3: (0::(Nil))
Model : any1: 1, any2: 8, any3: 6, any4: 0, any5: 1, any6: 1, any7: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 5, any3: 0, any4: 0, any5: 4, any6: 0, any7: 6, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((0::(Nil))) ((7::(3::(2::(2::(7::(Nil))))))) @ (4::(3::(Nil))))) = reverse ((qreva ((0::(Nil))) ((7::(3::(2::(2::(7::(4::(3::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(1::(1::(0::(6::(Nil))))))) @ (8::(1::(Nil))))) = reverse ((qreva ((Nil)) ((5::(1::(1::(0::(6::(8::(1::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((6::(0::(4::(0::(0::(Nil))))))) @ (5::(1::(Nil))))) = reverse ((qreva ((Nil)) ((6::(0::(4::(0::(0::(5::(1::(Nil))))))))) @ (Nil)))
Simplifying took 0.014680 seconds
Result : true
=================================================
Progress: 313


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 314


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any4 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 1, any2: 1, any3: 2, any4: 7, any5: 0, any6: 5, any7: 1, any_list1: (1::(Nil)), any_list3: (Nil)
Model : any1: 2, any2: 0, any3: 7, any4: 3, any5: 3, any6: 4, any7: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 8, any3: 0, any4: 5, any5: 7, any6: 3, any7: 1, any_list1: (Nil), any_list3: (7::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((1::(5::(0::(7::(2::(Nil))))))) @ (1::(1::(1::(Nil)))))) = reverse ((qreva ((Nil)) ((1::(5::(0::(7::(2::(1::(1::(Nil))))))))) @ (1::(Nil))))
reverse ((qreva ((Nil)) ((1::(4::(3::(3::(7::(Nil))))))) @ (0::(2::(Nil))))) = reverse ((qreva ((Nil)) ((1::(4::(3::(3::(7::(0::(2::(Nil))))))))) @ (Nil)))
reverse ((qreva ((7::(Nil))) ((1::(3::(7::(5::(0::(Nil))))))) @ (8::(7::(Nil))))) = reverse ((qreva ((7::(Nil))) ((1::(3::(7::(5::(0::(8::(7::(Nil))))))))) @ (Nil)))
Simplifying took 0.015930 seconds
Result : true
=================================================
Progress: 315


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any2:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any4 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any5:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 1, any2: 4, any3: 3, any4: 0, any5: 0, any6: 5, any7: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 0, any3: 1, any4: 5, any5: 8, any6: 5, any7: 6, any_list1: (Nil), any_list3: (3::(Nil))
Model : any1: 4, any2: 2, any3: 2, any4: 0, any5: 2, any6: 5, any7: 4, any_list1: (6::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((7::(5::(0::(0::(3::(Nil))))))) @ (4::(1::(Nil))))) = reverse ((qreva ((Nil)) ((7::(5::(0::(0::(3::(4::(1::(Nil))))))))) @ (Nil)))
reverse ((qreva ((3::(Nil))) ((6::(5::(8::(5::(1::(Nil))))))) @ (0::(5::(Nil))))) = reverse ((qreva ((3::(Nil))) ((6::(5::(8::(5::(1::(0::(5::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((4::(5::(2::(0::(2::(Nil))))))) @ (2::(4::(6::(Nil)))))) = reverse ((qreva ((Nil)) ((4::(5::(2::(0::(2::(2::(4::(Nil))))))))) @ (6::(Nil))))
Simplifying took 0.017050 seconds
Result : true
=================================================
Progress: 316


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any5 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any5
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 0, any2: 1, any3: 6, any4: 1, any5: 5, any6: 6, any7: 7, any_list1: (Nil), any_list3: (0::(Nil))
Model : any1: 3, any2: 3, any3: 3, any4: 3, any5: 8, any6: 4, any7: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 4, any3: 1, any4: 7, any5: 3, any6: 2, any7: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((0::(Nil))) ((7::(6::(5::(1::(6::(Nil))))))) @ (1::(0::(Nil))))) = reverse ((qreva ((0::(Nil))) ((7::(6::(5::(1::(6::(1::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(4::(8::(3::(3::(Nil))))))) @ (3::(3::(Nil))))) = reverse ((qreva ((Nil)) ((5::(4::(8::(3::(3::(3::(3::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(2::(3::(7::(1::(Nil))))))) @ (4::(5::(Nil))))) = reverse ((qreva ((Nil)) ((0::(2::(3::(7::(1::(4::(5::(Nil))))))))) @ (Nil)))
Simplifying took 0.014841 seconds
Result : true
=================================================
Progress: 317


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any4 : any
any5 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any5
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 6, any2: 2, any3: 0, any4: 8, any5: 4, any6: 7, any7: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 2, any3: 7, any4: 0, any5: 1, any6: 3, any7: 8, any_list1: (Nil), any_list3: (6::(Nil))
Model : any1: 1, any2: 7, any3: 1, any4: 2, any5: 6, any6: 0, any7: 2, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((6::(7::(4::(8::(0::(Nil))))))) @ (2::(6::(Nil))))) = reverse ((qreva ((Nil)) ((6::(7::(4::(8::(0::(2::(6::(Nil))))))))) @ (Nil)))
reverse ((qreva ((6::(Nil))) ((8::(3::(1::(0::(7::(Nil))))))) @ (2::(7::(Nil))))) = reverse ((qreva ((6::(Nil))) ((8::(3::(1::(0::(7::(2::(7::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((2::(0::(6::(2::(1::(Nil))))))) @ (7::(1::(Nil))))) = reverse ((qreva ((Nil)) ((2::(0::(6::(2::(1::(7::(1::(Nil))))))))) @ (Nil)))
Simplifying took 0.015276 seconds
Result : true
=================================================
Progress: 318


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 319


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any4 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 0, any2: 8, any3: 5, any4: 7, any5: 4, any6: 3, any7: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 3, any3: 1, any4: 4, any5: 3, any6: 8, any7: 5, any_list1: (1::(Nil)), any_list3: (Nil)
Model : any1: 0, any2: 3, any3: 0, any4: 7, any5: 2, any6: 2, any7: 0, any_list1: (Nil), any_list3: (6::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((8::(3::(4::(7::(5::(Nil))))))) @ (8::(0::(Nil))))) = reverse ((qreva ((Nil)) ((8::(3::(4::(7::(5::(8::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(8::(3::(4::(1::(Nil))))))) @ (3::(2::(1::(Nil)))))) = reverse ((qreva ((Nil)) ((5::(8::(3::(4::(1::(3::(2::(Nil))))))))) @ (1::(Nil))))
reverse ((qreva ((6::(Nil))) ((0::(2::(2::(7::(0::(Nil))))))) @ (3::(0::(Nil))))) = reverse ((qreva ((6::(Nil))) ((0::(2::(2::(7::(0::(3::(0::(Nil))))))))) @ (Nil)))
Simplifying took 0.015300 seconds
Result : true
=================================================
Progress: 320


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any4 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any5:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 4, any2: 5, any3: 0, any4: 2, any5: 4, any6: 0, any7: 3, any_list1: (0::(Nil)), any_list3: (Nil)
Model : any1: 1, any2: 0, any3: 0, any4: 0, any5: 8, any6: 2, any7: 0, any_list1: (Nil), any_list3: (0::(5::(Nil)))
Model : any1: 6, any2: 0, any3: 8, any4: 0, any5: 0, any6: 1, any7: 1, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((3::(0::(4::(2::(0::(Nil))))))) @ (5::(4::(0::(Nil)))))) = reverse ((qreva ((Nil)) ((3::(0::(4::(2::(0::(5::(4::(Nil))))))))) @ (0::(Nil))))
reverse ((qreva ((0::(5::(Nil)))) ((0::(2::(8::(0::(0::(Nil))))))) @ (0::(1::(Nil))))) = reverse ((qreva ((0::(5::(Nil)))) ((0::(2::(8::(0::(0::(0::(1::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((1::(1::(0::(0::(8::(Nil))))))) @ (0::(6::(Nil))))) = reverse ((qreva ((Nil)) ((1::(1::(0::(0::(8::(0::(6::(Nil))))))))) @ (Nil)))
Simplifying took 0.013829 seconds
Result : true
=================================================
Progress: 321


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any5 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any5
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 7, any2: 2, any3: 3, any4: 6, any5: 5, any6: 1, any7: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 6, any2: 5, any3: 0, any4: 2, any5: 4, any6: 5, any7: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 1, any3: 6, any4: 2, any5: 2, any6: 8, any7: 2, any_list1: (Nil), any_list3: (0::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((1::(1::(5::(6::(3::(Nil))))))) @ (2::(7::(Nil))))) = reverse ((qreva ((Nil)) ((1::(1::(5::(6::(3::(2::(7::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(5::(4::(2::(0::(Nil))))))) @ (5::(6::(Nil))))) = reverse ((qreva ((Nil)) ((5::(5::(4::(2::(0::(5::(6::(Nil))))))))) @ (Nil)))
reverse ((qreva ((0::(Nil))) ((2::(8::(2::(2::(6::(Nil))))))) @ (1::(4::(Nil))))) = reverse ((qreva ((0::(Nil))) ((2::(8::(2::(2::(6::(1::(4::(Nil))))))))) @ (Nil)))
Simplifying took 0.014779 seconds
Result : true
=================================================
Progress: 322


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any4 : any
any5 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any5
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 5, any2: 3, any3: 0, any4: 4, any5: 8, any6: 1, any7: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 5, any3: 6, any4: 3, any5: 6, any6: 6, any7: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 2, any3: 0, any4: 3, any5: 3, any6: 8, any7: 5, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((0::(1::(8::(4::(0::(Nil))))))) @ (3::(5::(Nil))))) = reverse ((qreva ((Nil)) ((0::(1::(8::(4::(0::(3::(5::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(6::(6::(3::(6::(Nil))))))) @ (5::(2::(Nil))))) = reverse ((qreva ((Nil)) ((0::(6::(6::(3::(6::(5::(2::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(8::(3::(3::(0::(Nil))))))) @ (2::(4::(Nil))))) = reverse ((qreva ((Nil)) ((5::(8::(3::(3::(0::(2::(4::(Nil))))))))) @ (Nil)))
Simplifying took 0.013022 seconds
Result : true
=================================================
Progress: 323


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any3 : any
any4 : any
any5 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any5
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 8, any2: 4, any3: 8, any4: 1, any5: 3, any6: 7, any7: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 2, any3: 4, any4: 7, any5: 8, any6: 6, any7: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 0, any3: 5, any4: 3, any5: 0, any6: 5, any7: 0, any_list1: (4::(Nil)), any_list3: (6::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((7::(7::(3::(1::(8::(Nil))))))) @ (4::(8::(Nil))))) = reverse ((qreva ((Nil)) ((7::(7::(3::(1::(8::(4::(8::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((5::(6::(8::(7::(4::(Nil))))))) @ (2::(2::(Nil))))) = reverse ((qreva ((Nil)) ((5::(6::(8::(7::(4::(2::(2::(Nil))))))))) @ (Nil)))
reverse ((qreva ((6::(Nil))) ((0::(5::(0::(3::(5::(Nil))))))) @ (0::(8::(4::(Nil)))))) = reverse ((qreva ((6::(Nil))) ((0::(5::(0::(3::(5::(0::(8::(Nil))))))))) @ (4::(Nil))))
Simplifying took 0.017530 seconds
Result : true
=================================================
Progress: 324


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:17)
=================================================
Progress: 325


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
any_list1 : any list
---------------------------------------
forall (any6:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any5
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 0, any2: 4, any3: 8, any4: 5, any5: 6, any6: 6, any7: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 7, any3: 2, any4: 4, any5: 2, any6: 6, any7: 7, any_list1: (Nil), any_list3: (2::(1::(Nil)))
Model : any1: 5, any2: 1, any3: 2, any4: 4, any5: 8, any6: 5, any7: 7, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((6::(6::(6::(5::(8::(Nil))))))) @ (4::(0::(Nil))))) = reverse ((qreva ((Nil)) ((6::(6::(6::(5::(8::(4::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((2::(1::(Nil)))) ((7::(6::(2::(4::(2::(Nil))))))) @ (7::(2::(Nil))))) = reverse ((qreva ((2::(1::(Nil)))) ((7::(6::(2::(4::(2::(7::(2::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((7::(5::(8::(4::(2::(Nil))))))) @ (1::(5::(Nil))))) = reverse ((qreva ((Nil)) ((7::(5::(8::(4::(2::(1::(5::(Nil))))))))) @ (Nil)))
Simplifying took 0.017988 seconds
Result : true
=================================================
Progress: 326


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any5:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any5:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 3, any2: 4, any3: 4, any4: 8, any5: 7, any6: 4, any7: 3, any_list1: (4::(Nil)), any_list3: (Nil)
Model : any1: 0, any2: 6, any3: 0, any4: 6, any5: 8, any6: 2, any7: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 4, any3: 5, any4: 5, any5: 1, any6: 1, any7: 1, any_list1: (8::(3::(Nil))), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((3::(4::(7::(8::(4::(Nil))))))) @ (4::(3::(4::(Nil)))))) = reverse ((qreva ((Nil)) ((3::(4::(7::(8::(4::(4::(3::(Nil))))))))) @ (4::(Nil))))
reverse ((qreva ((Nil)) ((3::(2::(8::(6::(0::(Nil))))))) @ (6::(0::(Nil))))) = reverse ((qreva ((Nil)) ((3::(2::(8::(6::(0::(6::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((1::(1::(1::(5::(5::(Nil))))))) @ (4::(7::(8::(3::(Nil))))))) = reverse ((qreva ((Nil)) ((1::(1::(1::(5::(5::(4::(7::(Nil))))))))) @ (8::(3::(Nil)))))
Simplifying took 0.019157 seconds
Result : true
=================================================
Progress: 327


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any4:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any5 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any4:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any5
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 0, any2: 4, any3: 0, any4: 6, any5: 4, any6: 8, any7: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 0, any3: 8, any4: 2, any5: 3, any6: 2, any7: 8, any_list1: (Nil), any_list3: (6::(Nil))
Model : any1: 0, any2: 2, any3: 1, any4: 0, any5: 4, any6: 0, any7: 4, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((3::(8::(4::(6::(0::(Nil))))))) @ (4::(0::(Nil))))) = reverse ((qreva ((Nil)) ((3::(8::(4::(6::(0::(4::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((6::(Nil))) ((8::(2::(3::(2::(8::(Nil))))))) @ (0::(4::(Nil))))) = reverse ((qreva ((6::(Nil))) ((8::(2::(3::(2::(8::(0::(4::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((4::(0::(4::(0::(1::(Nil))))))) @ (2::(0::(Nil))))) = reverse ((qreva ((Nil)) ((4::(0::(4::(0::(1::(2::(0::(Nil))))))))) @ (Nil)))
Simplifying took 0.013483 seconds
Result : true
=================================================
Progress: 328


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any3:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any4 : any
any5 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any3:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any5
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 8, any2: 4, any3: 4, any4: 4, any5: 2, any6: 0, any7: 5, any_list1: (Nil), any_list3: (0::(Nil))
Model : any1: 8, any2: 2, any3: 5, any4: 4, any5: 0, any6: 4, any7: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 3, any3: 5, any4: 5, any5: 0, any6: 1, any7: 2, any_list1: (Nil), any_list3: (2::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((0::(Nil))) ((5::(0::(2::(4::(4::(Nil))))))) @ (4::(8::(Nil))))) = reverse ((qreva ((0::(Nil))) ((5::(0::(2::(4::(4::(4::(8::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((4::(4::(0::(4::(5::(Nil))))))) @ (2::(8::(Nil))))) = reverse ((qreva ((Nil)) ((4::(4::(0::(4::(5::(2::(8::(Nil))))))))) @ (Nil)))
reverse ((qreva ((2::(Nil))) ((2::(1::(0::(5::(5::(Nil))))))) @ (3::(2::(Nil))))) = reverse ((qreva ((2::(Nil))) ((2::(1::(0::(5::(5::(3::(2::(Nil))))))))) @ (Nil)))
Simplifying took 0.016120 seconds
Result : true
=================================================
Progress: 329


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any3 : any
any4 : any
any5 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any2:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any5
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 4, any2: 0, any3: 2, any4: 7, any5: 5, any6: 0, any7: 2, any_list1: (Nil), any_list3: (0::(0::(Nil)))
Model : any1: 7, any2: 5, any3: 6, any4: 5, any5: 7, any6: 1, any7: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 0, any3: 7, any4: 5, any5: 6, any6: 1, any7: 2, any_list1: (5::(6::(3::(Nil)))), any_list3: (0::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((0::(0::(Nil)))) ((2::(0::(5::(7::(2::(Nil))))))) @ (0::(4::(Nil))))) = reverse ((qreva ((0::(0::(Nil)))) ((2::(0::(5::(7::(2::(0::(4::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((1::(1::(7::(5::(6::(Nil))))))) @ (5::(7::(Nil))))) = reverse ((qreva ((Nil)) ((1::(1::(7::(5::(6::(5::(7::(Nil))))))))) @ (Nil)))
reverse ((qreva ((0::(Nil))) ((2::(1::(6::(5::(7::(Nil))))))) @ (0::(7::(5::(6::(3::(Nil)))))))) = reverse ((qreva ((0::(Nil))) ((2::(1::(6::(5::(7::(0::(7::(Nil))))))))) @ (5::(6::(3::(Nil))))))
Simplifying took 0.025562 seconds
Result : true
=================================================
Progress: 330


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
any_list1 : any list
---------------------------------------
forall (any1:any), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any5
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 2, any2: 4, any3: 3, any4: 2, any5: 7, any6: 8, any7: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 2, any3: 7, any4: 8, any5: 8, any6: 0, any7: 5, any_list1: (Nil), any_list3: (1::(Nil))
Model : any1: 4, any2: 6, any3: 4, any4: 3, any5: 3, any6: 2, any7: 6, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((4::(8::(7::(2::(3::(Nil))))))) @ (4::(2::(Nil))))) = reverse ((qreva ((Nil)) ((4::(8::(7::(2::(3::(4::(2::(Nil))))))))) @ (Nil)))
reverse ((qreva ((1::(Nil))) ((5::(0::(8::(8::(7::(Nil))))))) @ (2::(2::(Nil))))) = reverse ((qreva ((1::(Nil))) ((5::(0::(8::(8::(7::(2::(2::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((6::(2::(3::(3::(4::(Nil))))))) @ (6::(4::(Nil))))) = reverse ((qreva ((Nil)) ((6::(2::(3::(3::(4::(6::(4::(Nil))))))))) @ (Nil)))
Simplifying took 0.015738 seconds
Result : true
=================================================
Progress: 331


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any_list1:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any_list1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list) (any_list2:any list), reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list2) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
any_list2 : any list
any7 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(Nil)))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any6::(any5::(any4::(any3::(any2::(any1::(Nil)))))))) @ any_list1))
Inductive1 : any_list2 = (any7::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
any_list1 : any list
---------------------------------------
reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any5
intro any6
intro any_list1
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list) (any_list3:any list), reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(Nil))))))) @ (any2::(any1::any_list1)))) = reverse ((qreva (any_list3) ((any7::(any6::(any5::(any4::(any3::(any2::(any1::(Nil))))))))) @ any_list1))
Model : any1: 7, any2: 6, any3: 6, any4: 5, any5: 0, any6: 7, any7: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 1, any3: 3, any4: 8, any5: 4, any6: 6, any7: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 7, any3: 6, any4: 8, any5: 8, any6: 7, any7: 6, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
reverse ((qreva ((Nil)) ((2::(7::(0::(5::(6::(Nil))))))) @ (6::(7::(Nil))))) = reverse ((qreva ((Nil)) ((2::(7::(0::(5::(6::(6::(7::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((0::(6::(4::(8::(3::(Nil))))))) @ (1::(0::(Nil))))) = reverse ((qreva ((Nil)) ((0::(6::(4::(8::(3::(1::(0::(Nil))))))))) @ (Nil)))
reverse ((qreva ((Nil)) ((6::(7::(8::(8::(6::(Nil))))))) @ (7::(1::(Nil))))) = reverse ((qreva ((Nil)) ((6::(7::(8::(8::(6::(7::(1::(Nil))))))))) @ (Nil)))
Simplifying took 0.014932 seconds
Result : true
=================================================
Progress: 332


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva (any_list3) ((any1::reverse (any_list2)))) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva (any_list3) (reverse ((any_list2 @ (any1::(Nil)))))) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:11)
induction any_list2(rank:12)
=================================================
Progress: 333


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva (any_list3) (reverse ((any_list2 @ (any1::(Nil)))))) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list3) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:4)
=================================================
Progress: 334


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list3) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
(((Nil) @ (any1::(Nil))) @ any_list3) = ((Nil) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 335


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
(((Nil) @ (any1::(Nil))) @ any_list3) = ((Nil) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : ((any_list4 @ (any1::(Nil))) @ any_list3) = (any_list4 @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(((any2::any_list4) @ (any1::(Nil))) @ any_list3) = ((any2::any_list4) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 336


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : ((any_list4 @ (any1::(Nil))) @ any_list3) = (any_list4 @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(((any2::any_list4) @ (any1::(Nil))) @ any_list3) = ((any2::any_list4) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : ((any_list4 @ (any1::(Nil))) @ any_list3) = (any_list4 @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(any2::((any_list4 @ (any1::(Nil))) @ any_list3)) = (any2::(any_list4 @ (any1::any_list3)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:11)
rewrite <- IH1 in goal at 0(rank:19)
rewrite <- IH2 in goal at 0(rank:11)
=================================================
Progress: 337


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : ((any_list4 @ (any1::(Nil))) @ any_list3) = (any_list4 @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(any2::((any_list4 @ (any1::(Nil))) @ any_list3)) = (any2::(any_list4 @ (any1::any_list3)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : ((any_list4 @ (any1::(Nil))) @ any_list3) = (any_list4 @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(any2::(any_list4 @ (any1::any_list3))) = (any2::(any_list4 @ (any1::any_list3)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0)
=================================================
Progress: 338


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (reverse (any_list2))) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : ((any_list4 @ (any1::(Nil))) @ any_list3) = (any_list4 @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(any2::(any_list4 @ (any1::any_list3))) = (any2::(any_list4 @ (any1::any_list3)))

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0)


No conjecture
Proof Success
Proof
assert forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (reverse (any_list2))) = (any_list2 @ any_list1)
induction any_list1
simpl in goal
induction any_list2
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
assert forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
induction any_list1
reflexivity
simpl in goal
intro any1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
simpl in goal
rewrite <- lemma3 in goal at 0
rewrite IH1 in goal at 0
induction any_list2
reflexivity
simpl in goal
rewrite IH2 in goal at 0
reflexivity
Qed
File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
