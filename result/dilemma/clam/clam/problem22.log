Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list) (y:any list), even (len ((x @ y))) = even (len ((y @ x)))(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:12)
induction any_list2(rank:12)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), even (len (((Nil) @ any_list2))) = even (len ((any_list2 @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), even (len (((Nil) @ any_list2))) = even (len ((any_list2 @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), even (len (any_list2)) = even (len ((any_list2 @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:5)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), even (len (any_list2)) = even (len ((any_list2 @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
even (len ((Nil))) = even (len (((Nil) @ (Nil))))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 5


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
even (len ((Nil))) = even (len (((Nil) @ (Nil))))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : even (len (any_list3)) = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
even (len ((any1::any_list3))) = even (len (((any1::any_list3) @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : even (len (any_list3)) = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
even (len ((any1::any_list3))) = even (len (((any1::any_list3) @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : even (len (any_list3)) = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
if even (len (any_list3)) then false else true = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case even (len ((any_list3 @ (Nil))))(rank:5)
case even (len (any_list3))(rank:5)
rewrite IH1 in goal at 0(rank:12)
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : even (len (any_list3)) = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
if even (len (any_list3)) then false else true = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list3 @ (Nil))))(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : even (len (any_list3)) = true
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
if even (len (any_list3)) then false else true = false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13)
rewrite <- Case1 in goal at 0(rank:21)
rewrite <- IH1 in goal at 0(rank:21)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : even (len (any_list3)) = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
if even (len (any_list3)) then false else true = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len (any_list3))(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : true = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = true
---------------------------------------
false = if even (len ((any_list3 @ (Nil)))) then false else true

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case even (len ((any_list3 @ (Nil))))(rank:6)
rewrite <- IH1 in goal at 0(rank:13)
rewrite IH1 in goal at 0(rank:21)
rewrite <- Case1 in goal at 0(rank:21)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : true = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = true
---------------------------------------
false = if even (len ((any_list3 @ (Nil)))) then false else true

2 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list3 @ (Nil))))(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : true = true
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
false = false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 10


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : true = true
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
false = false

3 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : true = false
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = false
---------------------------------------
false = true

2 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:4)
=================================================
Progress: 11


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : true = false
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = false
---------------------------------------
false = true

2 goal(s) more...

0 conjecture(s) more...
>>> discriminate(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : false = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = false
---------------------------------------
true = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 3
Tactic List : 4
case even (len ((any_list3 @ (Nil))))(rank:5)
rewrite <- IH1 in goal at 0(rank:12)
rewrite IH1 in goal at 0(rank:20)
rewrite <- Case1 in goal at 0(rank:20)
=================================================
Progress: 12


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : false = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = false
---------------------------------------
true = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list3 @ (Nil))))(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : false = true
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = false
Case2 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
true = false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
discriminate(rank:4)
=================================================
Progress: 13


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : false = true
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = false
Case2 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
true = false

2 goal(s) more...

0 conjecture(s) more...
>>> discriminate(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : false = false
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = false
Case2 : even (len ((any_list3 @ (Nil)))) = false
---------------------------------------
true = true

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 14


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : false = false
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = false
Case2 : even (len ((any_list3 @ (Nil)))) = false
---------------------------------------
true = true

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), even (len (((any1::any_list3) @ any_list2))) = even (len ((any_list2 @ (any1::any_list3))))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 8
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 15


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), even (len (((any1::any_list3) @ any_list2))) = even (len ((any_list2 @ (any1::any_list3))))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), if even (len ((any_list3 @ any_list2))) then false else true = even (len ((any_list2 @ (any1::any_list3))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:4)
=================================================
Progress: 16


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), if even (len ((any_list3 @ any_list2))) then false else true = even (len ((any_list2 @ (any1::any_list3))))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = even (len (((Nil) @ (any1::any_list3))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 17


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = even (len (((Nil) @ (any1::any_list3))))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case even (len (any_list3))(rank:5)
rewrite IH1 in goal at 0(rank:20)
=================================================
Progress: 18


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len (any_list3))(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
Case1 : even (len (any_list3)) = true
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case even (len ((any_list3 @ (Nil))))(rank:6)
rewrite IH1 in goal at 0(rank:21)
rewrite <- Case1 in goal at 0(rank:21)
=================================================
Progress: 19


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
Case1 : even (len (any_list3)) = true
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = false

2 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list3 @ (Nil))))(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
false = false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 20


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
false = false

3 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = false
---------------------------------------
true = false

2 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:21)
rewrite <- Case2 in goal at 0(rank:21)
=================================================
Progress: 21


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), even (len ((any_list1 @ (Nil)))) = even (len (((Nil) @ any_list1)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 22


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), even (len ((any_list1 @ (Nil)))) = even (len (((Nil) @ any_list1)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), even (len ((any_list1 @ (Nil)))) = even (len (any_list1))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:5)
=================================================
Progress: 23


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), even (len ((any_list1 @ (Nil)))) = even (len (any_list1))

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
even (len (((Nil) @ (Nil)))) = even (len ((Nil)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 24


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
even (len (((Nil) @ (Nil)))) = even (len ((Nil)))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : even (len ((any_list3 @ (Nil)))) = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
even (len (((any1::any_list3) @ (Nil)))) = even (len ((any1::any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 25


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : even (len ((any_list3 @ (Nil)))) = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
even (len (((any1::any_list3) @ (Nil)))) = even (len ((any1::any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : even (len ((any_list3 @ (Nil)))) = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case even (len ((any_list3 @ (Nil))))(rank:5)
case even (len (any_list3))(rank:5)
rewrite IH1 in goal at 0(rank:12)
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 26


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : even (len ((any_list3 @ (Nil)))) = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list3 @ (Nil))))(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : true = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
false = if even (len (any_list3)) then false else true

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case even (len (any_list3))(rank:6)
rewrite <- IH1 in goal at 0(rank:13)
rewrite IH1 in goal at 0(rank:21)
rewrite <- Case1 in goal at 0(rank:21)
=================================================
Progress: 27


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : even (len ((any_list3 @ (Nil)))) = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len (any_list3))(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : even (len ((any_list3 @ (Nil)))) = true
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len (any_list3)) = true
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13)
rewrite <- Case1 in goal at 0(rank:21)
rewrite <- IH1 in goal at 0(rank:21)
=================================================
Progress: 28


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : true = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
false = if even (len (any_list3)) then false else true

2 goal(s) more...

0 conjecture(s) more...
>>> case even (len (any_list3))(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : true = true
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = true
Case2 : even (len (any_list3)) = true
---------------------------------------
false = false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 29


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : true = true
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = true
Case2 : even (len (any_list3)) = true
---------------------------------------
false = false

3 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : true = false
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = true
Case2 : even (len (any_list3)) = false
---------------------------------------
false = true

2 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:4)
=================================================
Progress: 30


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : true = false
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = true
Case2 : even (len (any_list3)) = false
---------------------------------------
false = true

2 goal(s) more...

0 conjecture(s) more...
>>> discriminate(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : false = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = false
---------------------------------------
true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 3
Tactic List : 4
case even (len (any_list3))(rank:5)
rewrite <- IH1 in goal at 0(rank:12)
rewrite IH1 in goal at 0(rank:20)
rewrite <- Case1 in goal at 0(rank:20)
=================================================
Progress: 31


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : false = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = false
---------------------------------------
true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len (any_list3))(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : false = true
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = false
Case2 : even (len (any_list3)) = true
---------------------------------------
true = false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
discriminate(rank:4)
=================================================
Progress: 32


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : false = true
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = false
Case2 : even (len (any_list3)) = true
---------------------------------------
true = false

2 goal(s) more...

0 conjecture(s) more...
>>> discriminate(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : false = false
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = false
Case2 : even (len (any_list3)) = false
---------------------------------------
true = true

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 33


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : false = false
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = false
Case2 : even (len (any_list3)) = false
---------------------------------------
true = true

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), even (len ((any_list1 @ (any1::any_list3)))) = even (len (((any1::any_list3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 8
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 34


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), even (len ((any_list1 @ (any1::any_list3)))) = even (len (((any1::any_list3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), even (len ((any_list1 @ (any1::any_list3)))) = if even (len ((any_list3 @ any_list1))) then false else true

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:4)
=================================================
Progress: 35


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), even (len ((any_list1 @ (any1::any_list3)))) = if even (len ((any_list3 @ any_list1))) then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
even (len (((Nil) @ (any1::any_list3)))) = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 36


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
even (len (((Nil) @ (any1::any_list3)))) = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
if even (len (any_list3)) then false else true = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case even (len (any_list3))(rank:5)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 37


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
if even (len (any_list3)) then false else true = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len (any_list3))(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
Case1 : even (len (any_list3)) = true
---------------------------------------
false = if even (len ((any_list3 @ (Nil)))) then false else true

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case even (len ((any_list3 @ (Nil))))(rank:6)
rewrite <- Case1 in goal at 0(rank:21)
rewrite <- IH1 in goal at 0(rank:21)
=================================================
Progress: 38


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
Case1 : even (len (any_list3)) = true
---------------------------------------
false = if even (len ((any_list3 @ (Nil)))) then false else true

2 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list3 @ (Nil))))(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
false = false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 39


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
false = false

3 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = false
---------------------------------------
false = true

2 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:21)
rewrite <- Case2 in goal at 0(rank:21)
=================================================
Progress: 40


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len (((Nil) @ any_list3))) then false else true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 41


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len (((Nil) @ any_list3))) then false else true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if even (len ((any_list3 @ (any2::any_list4)))) then false else true = even (len (((any2::any_list4) @ (any1::any_list3))))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 4
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 42


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if even (len ((any_list3 @ (any2::any_list4)))) then false else true = even (len (((any2::any_list4) @ (any1::any_list3))))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if even (len ((any_list3 @ (any2::any_list4)))) then false else true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case even (len ((any_list4 @ (any1::any_list3))))(rank:4)
rewrite IH1 in goal at 0(rank:19)
rewrite <- IH2 in goal at 0(rank:19)
=================================================
Progress: 43


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if even (len ((any_list3 @ (any2::any_list4)))) then false else true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list4 @ (any1::any_list3))))(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = true
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ (any1::any_list3)))) = true
---------------------------------------
if even (len ((any_list3 @ (any2::any_list4)))) then false else true = false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case even (len ((any_list3 @ (any2::any_list4))))(rank:5)
rewrite IH1 in goal at 0(rank:20)
rewrite <- Case1 in goal at 0(rank:20)
=================================================
Progress: 44


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = true
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ (any1::any_list3)))) = true
---------------------------------------
if even (len ((any_list3 @ (any2::any_list4)))) then false else true = false

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list3 @ (any2::any_list4))))(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = true
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ (any1::any_list3)))) = true
Case2 : even (len ((any_list3 @ (any2::any_list4)))) = true
---------------------------------------
false = false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 45


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = true
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ (any1::any_list3)))) = true
Case2 : even (len ((any_list3 @ (any2::any_list4)))) = true
---------------------------------------
false = false

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = true
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ (any1::any_list3)))) = true
Case2 : even (len ((any_list3 @ (any2::any_list4)))) = false
---------------------------------------
true = false

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:20)
rewrite <- Case2 in goal at 0(rank:20)
=================================================
Progress: 46


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if even (len ((any_list3 @ (any2::any_list4)))) then false else true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if even (len (((any2::any_list4) @ any_list3))) then false else true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 47


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if even (len (((any2::any_list4) @ any_list3))) then false else true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if even (len ((any_list4 @ any_list3))) then false else true(rank:4)
rewrite <- IH2 in goal at 0(rank:11)
rewrite <- IH1 in goal at 0(rank:19)
=================================================
Progress: 48


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> case if even (len ((any_list4 @ any_list3))) then false else true(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
---------------------------------------
false = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case even (len ((any_list4 @ (any1::any_list3))))(rank:5)
rewrite <- IH2 in goal at 0(rank:20)
=================================================
Progress: 49


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
---------------------------------------
false = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list4 @ (any1::any_list3))))(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = true
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
Case2 : even (len ((any_list4 @ (any1::any_list3)))) = true
---------------------------------------
false = false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 50


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = true
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
Case2 : even (len ((any_list4 @ (any1::any_list3)))) = true
---------------------------------------
false = false

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = false
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
Case2 : even (len ((any_list4 @ (any1::any_list3)))) = false
---------------------------------------
false = true

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- Case2 in goal at 0(rank:4)
=================================================
Progress: 51


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = false
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
Case2 : even (len ((any_list4 @ (any1::any_list3)))) = false
---------------------------------------
false = true

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = false
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
Case2 : even (len ((any_list4 @ (any1::any_list3)))) = false
---------------------------------------
even (len ((any_list4 @ (any1::any_list3)))) = true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
case if even (len ((any_list4 @ any_list3))) then false else true
case even (len ((any_list4 @ (any1::any_list3))))
reflexivity
rewrite <- Case2 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any_list3:any list) (any_list4:any list), if even (len ((any_list4 @ any_list3))) then false else true = true->even (len ((any_list4 @ (any1::any_list3)))) = false -> even (len ((any_list4 @ (any1::any_list3)))) = true
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = false
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
Case2 : even (len ((any_list4 @ (any1::any_list3)))) = false
---------------------------------------
even (len ((any_list4 @ (any1::any_list3)))) = true

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 52


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = false
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
Case2 : even (len ((any_list4 @ (any1::any_list3)))) = false
---------------------------------------
even (len ((any_list4 @ (any1::any_list3)))) = true

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list3:any list) (any_list4:any list), if even (len ((any_list4 @ any_list3))) then false else true = true->even (len ((any_list4 @ (any1::any_list3)))) = false -> even (len ((any_list4 @ (any1::any_list3)))) = true(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:5)
=================================================
Progress: 53


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:5)
=================================================
Progress: 54


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 55


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len (((Nil) @ any_list1))) then false else true = true->even (len (((Nil) @ (any1::any_list1)))) = false -> even (len (((Nil) @ (any1::any_list1)))) = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 56


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len (((Nil) @ any_list1))) then false else true = true->even (len (((Nil) @ (any1::any_list1)))) = false -> even (len (((Nil) @ (any1::any_list1)))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len (any_list1)) then false else true = true->if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6)
=================================================
Progress: 57


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len (any_list1)) then false else true = true->if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if even (len (any_list1)) then false else true = true
---------------------------------------
if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6)
=================================================
Progress: 58


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if even (len (any_list1)) then false else true = true
---------------------------------------
if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if even (len (any_list1)) then false else true = true
Cond2 : if even (len (any_list1)) then false else true = false
---------------------------------------
if even (len (any_list1)) then false else true = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case even (len (any_list1))(rank:7)
rewrite Cond1 in goal at 0(rank:14)
rewrite Cond2 in goal at 0(rank:14)
=================================================
Progress: 59


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if even (len (any_list1)) then false else true = true
Cond2 : if even (len (any_list1)) then false else true = false
---------------------------------------
if even (len (any_list1)) then false else true = true

1 goal(s) more...

1 conjecture(s) more...
>>> case even (len (any_list1))(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : false = true
Cond2 : false = false
Case1 : even (len (any_list1)) = true
---------------------------------------
false = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:6)
=================================================
Progress: 60


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : false = true
Cond2 : false = false
Case1 : even (len (any_list1)) = true
---------------------------------------
false = true

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : true = true
Cond2 : true = false
Case1 : even (len (any_list1)) = false
---------------------------------------
true = true

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 61


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : true = true
Cond2 : true = false
Case1 : even (len (any_list1)) = false
---------------------------------------
true = true

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if even (len (((any2::any_list3) @ any_list1))) then false else true = true->even (len (((any2::any_list3) @ (any1::any_list1)))) = false -> even (len (((any2::any_list3) @ (any1::any_list1)))) = true

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 62


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if even (len (((any2::any_list3) @ any_list1))) then false else true = true->even (len (((any2::any_list3) @ (any1::any_list1)))) = false -> even (len (((any2::any_list3) @ (any1::any_list1)))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5)
=================================================
Progress: 63


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5)
=================================================
Progress: 64


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
Cond2 : if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case even (len ((any_list3 @ (any1::any_list1))))(rank:6)
rewrite Cond2 in goal at 0(rank:13)
rewrite IH1 in goal at 0(rank:15)
rewrite <- IH1 in goal at 0(rank:23)
rewrite <- IH1 in goal at 1(rank:23)
rewrite <- IH1 in goal at 2(rank:15)
=================================================
Progress: 65


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
Cond2 : if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

1 conjecture(s) more...
>>> case even (len ((any_list3 @ (any1::any_list1))))(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
Cond2 : false = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:6)
=================================================
Progress: 66


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
Cond2 : false = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = true

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
Cond2 : false = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = even (len ((any_list3 @ (any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case even (len ((any_list3 @ (any1::any_list1))))
rewrite <- Case1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list), if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
Cond2 : false = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = even (len ((any_list3 @ (any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 67


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
Cond2 : false = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = even (len ((any_list3 @ (any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list), if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any1(rank:7)
=================================================
Progress: 68


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:7)
=================================================
Progress: 69


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8)
=================================================
Progress: 70


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if even (len (((Nil) @ any_list1))) then false else true then false else true = true->false = false->even (len (((Nil) @ (any1::any_list1)))) = true -> false = even (len (((Nil) @ (any1::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 71


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if even (len (((Nil) @ any_list1))) then false else true then false else true = true->false = false->even (len (((Nil) @ (any1::any_list1)))) = true -> false = even (len (((Nil) @ (any1::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if even (len (any_list1)) then false else true then false else true = true->false = false->if even (len (any_list1)) then false else true = true -> false = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8)
=================================================
Progress: 72


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if even (len (any_list1)) then false else true then false else true = true->false = false->if even (len (any_list1)) then false else true = true -> false = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if even (len (any_list1)) then false else true then false else true = true
---------------------------------------
false = false->if even (len (any_list1)) then false else true = true -> false = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8)
=================================================
Progress: 73


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if even (len (any_list1)) then false else true then false else true = true
---------------------------------------
false = false->if even (len (any_list1)) then false else true = true -> false = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if even (len (any_list1)) then false else true then false else true = true
Cond2 : false = false
---------------------------------------
if even (len (any_list1)) then false else true = true -> false = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:8)
=================================================
Progress: 74


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if even (len (any_list1)) then false else true then false else true = true
Cond2 : false = false
---------------------------------------
if even (len (any_list1)) then false else true = true -> false = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if even (len (any_list1)) then false else true then false else true = true
Cond2 : false = false
Cond3 : if even (len (any_list1)) then false else true = true
---------------------------------------
false = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case even (len (any_list1))(rank:9)
rewrite Cond3 in goal at 0(rank:16)
=================================================
Progress: 75


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if even (len (any_list1)) then false else true then false else true = true
Cond2 : false = false
Cond3 : if even (len (any_list1)) then false else true = true
---------------------------------------
false = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
>>> case even (len (any_list1))(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : true = true
Cond2 : false = false
Cond3 : false = true
Case1 : even (len (any_list1)) = true
---------------------------------------
false = false

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 76


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : true = true
Cond2 : false = false
Cond3 : false = true
Case1 : even (len (any_list1)) = true
---------------------------------------
false = false

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : false = true
Cond2 : false = false
Cond3 : true = true
Case1 : even (len (any_list1)) = false
---------------------------------------
false = true

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7)
=================================================
Progress: 77


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : false = true
Cond2 : false = false
Cond3 : true = true
Case1 : even (len (any_list1)) = false
---------------------------------------
false = true

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if even (len (((any2::any_list3) @ any_list1))) then false else true then false else true = true->false = false->even (len (((any2::any_list3) @ (any1::any_list1)))) = true -> false = even (len (((any2::any_list3) @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 78


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if even (len (((any2::any_list3) @ any_list1))) then false else true then false else true = true->false = false->even (len (((any2::any_list3) @ (any1::any_list1)))) = true -> false = even (len (((any2::any_list3) @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true -> false = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 79


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true -> false = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
---------------------------------------
false = false->if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true -> false = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7)
=================================================
Progress: 80


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
---------------------------------------
false = false->if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true -> false = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : false = false
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true -> false = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:7)
=================================================
Progress: 81


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : false = false
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true -> false = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true
---------------------------------------
false = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case even (len ((any_list3 @ (any1::any_list1))))(rank:8)
rewrite Cond3 in goal at 0(rank:15)
rewrite IH1 in goal at 0(rank:26)
rewrite IH1 in goal at 1(rank:18)
rewrite IH1 in goal at 2(rank:26)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 82


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true
---------------------------------------
false = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> case even (len ((any_list3 @ (any1::any_list1))))(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->true = true -> false = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : false = true
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = false

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 83


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->true = true -> false = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : false = true
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = false

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->false = true -> false = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = false
---------------------------------------
false = true

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:7)
=================================================
Progress: 84


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->false = true -> false = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = false
---------------------------------------
false = true

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->false = true -> false = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = false
---------------------------------------
even (len ((any_list3 @ (any1::any_list1)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
case even (len ((any_list3 @ (any1::any_list1))))
reflexivity
rewrite <- Case1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list), if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->false = true -> false = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = false
---------------------------------------
even (len ((any_list3 @ (any1::any_list1)))) = true

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 85


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = false->false = true -> false = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = false
---------------------------------------
even (len ((any_list3 @ (any1::any_list1)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list), if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any1(rank:9)
=================================================
Progress: 86


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:9)
=================================================
Progress: 87


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10)
=================================================
Progress: 88


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if if even (len (((Nil) @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len (((Nil) @ (any1::any_list1)))) = false -> even (len (((Nil) @ (any1::any_list1)))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 89


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if if even (len (((Nil) @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len (((Nil) @ (any1::any_list1)))) = false -> even (len (((Nil) @ (any1::any_list1)))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if if even (len (any_list1)) then false else true then false else true then false else true = true->false = false->true = true->if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10)
=================================================
Progress: 90


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if if even (len (any_list1)) then false else true then false else true then false else true = true->false = false->true = true->if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = true
---------------------------------------
false = false->true = true->if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10)
=================================================
Progress: 91


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = true
---------------------------------------
false = false->true = true->if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = true
Cond2 : false = false
---------------------------------------
true = true->if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:10)
=================================================
Progress: 92


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = true
Cond2 : false = false
---------------------------------------
true = true->if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
---------------------------------------
if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:10)
=================================================
Progress: 93


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
---------------------------------------
if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond4(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
Cond4 : if even (len (any_list1)) then false else true = false
---------------------------------------
if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case even (len (any_list1))(rank:11)
rewrite Cond4 in goal at 0(rank:18)
=================================================
Progress: 94


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if if even (len ((any_list3 @ any_list4))) then false else true then false else true

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case if even (len ((any_list3 @ any_list4))) then false else true(rank:4)
case if even (len ((any_list4 @ any_list3))) then false else true(rank:4)
rewrite IH1 in goal at 0(rank:11)
rewrite <- IH1 in goal at 0(rank:11)
=================================================
Progress: 95


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if if even (len ((any_list3 @ any_list4))) then false else true then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> case if even (len ((any_list3 @ any_list4))) then false else true(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list3 @ any_list4))) then false else true = true
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case if even (len ((any_list4 @ any_list3))) then false else true(rank:5)
rewrite IH2 in goal at 0(rank:20)
rewrite IH2 in goal at 1(rank:20)
rewrite IH2 in goal at 2(rank:20)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 96


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if if even (len ((any_list3 @ any_list4))) then false else true then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> case if even (len ((any_list4 @ any_list3))) then false else true(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
---------------------------------------
false = if if even (len ((any_list3 @ any_list4))) then false else true then false else true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case if even (len ((any_list3 @ any_list4))) then false else true(rank:5)
rewrite IH2 in goal at 0(rank:12)
rewrite IH1 in goal at 0(rank:20)
=================================================
Progress: 97


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list3 @ any_list4))) then false else true = true
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = false

1 goal(s) more...

0 conjecture(s) more...
>>> case if even (len ((any_list4 @ any_list3))) then false else true(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list3 @ any_list4))) then false else true = true
Case2 : if even (len ((any_list4 @ any_list3))) then false else true = true
---------------------------------------
false = false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 98


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list3 @ any_list4))) then false else true = true
Case2 : if even (len ((any_list4 @ any_list3))) then false else true = true
---------------------------------------
false = false

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list3 @ any_list4))) then false else true = true
Case2 : if even (len ((any_list4 @ any_list3))) then false else true = false
---------------------------------------
true = false

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH2 in goal at 0(rank:4)
=================================================
Progress: 99


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list3 @ any_list4))) then false else true = true
Case2 : if even (len ((any_list4 @ any_list3))) then false else true = false
---------------------------------------
true = false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list3 @ any_list4))) then false else true = true
Case2 : if even (len ((any_list4 @ any_list3))) then false else true = false
---------------------------------------
even (len ((any_list4 @ (any1::any_list3)))) = false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
case if even (len ((any_list3 @ any_list4))) then false else true
case if even (len ((any_list4 @ any_list3))) then false else true
reflexivity
rewrite IH2 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any_list3:any list) (any_list4:any list), if even (len ((any_list3 @ any_list4))) then false else true = true->if even (len ((any_list4 @ any_list3))) then false else true = false -> even (len ((any_list4 @ (any1::any_list3)))) = false
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list3 @ any_list4))) then false else true = true
Case2 : if even (len ((any_list4 @ any_list3))) then false else true = false
---------------------------------------
even (len ((any_list4 @ (any1::any_list3)))) = false

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 100


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list3 @ any_list4))) then false else true = true
Case2 : if even (len ((any_list4 @ any_list3))) then false else true = false
---------------------------------------
even (len ((any_list4 @ (any1::any_list3)))) = false

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list3:any list) (any_list4:any list), if even (len ((any_list3 @ any_list4))) then false else true = true->if even (len ((any_list4 @ any_list3))) then false else true = false -> even (len ((any_list4 @ (any1::any_list3)))) = false(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:5)
=================================================
Progress: 101


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
---------------------------------------
false = if if even (len ((any_list3 @ any_list4))) then false else true then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case if even (len ((any_list3 @ any_list4))) then false else true(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
Case2 : if even (len ((any_list3 @ any_list4))) then false else true = true
---------------------------------------
false = false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 102


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
Case2 : if even (len ((any_list3 @ any_list4))) then false else true = true
---------------------------------------
false = false

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : false = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
Case2 : if even (len ((any_list3 @ any_list4))) then false else true = false
---------------------------------------
false = true

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH2 in goal at 0(rank:4)
=================================================
Progress: 103


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : false = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
Case2 : if even (len ((any_list3 @ any_list4))) then false else true = false
---------------------------------------
false = true

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : false = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
Case2 : if even (len ((any_list3 @ any_list4))) then false else true = false
---------------------------------------
even (len ((any_list4 @ (any1::any_list3)))) = true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
case if even (len ((any_list4 @ any_list3))) then false else true
case if even (len ((any_list3 @ any_list4))) then false else true
reflexivity
rewrite IH2 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any_list3:any list) (any_list4:any list), if even (len ((any_list4 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list4))) then false else true = false -> even (len ((any_list4 @ (any1::any_list3)))) = true
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : false = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
Case2 : if even (len ((any_list3 @ any_list4))) then false else true = false
---------------------------------------
even (len ((any_list4 @ (any1::any_list3)))) = true

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 104


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : false = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : if even (len ((any_list4 @ any_list3))) then false else true = true
Case2 : if even (len ((any_list3 @ any_list4))) then false else true = false
---------------------------------------
even (len ((any_list4 @ (any1::any_list3)))) = true

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list3:any list) (any_list4:any list), if even (len ((any_list4 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list4))) then false else true = false -> even (len ((any_list4 @ (any1::any_list3)))) = true(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:5)
=================================================
Progress: 105


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:5)
=================================================
Progress: 106


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:5)
=================================================
Progress: 107


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 108


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 109


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len ((any_list1 @ (Nil)))) then false else true = true->if even (len (((Nil) @ any_list1))) then false else true = false -> even (len (((Nil) @ (any1::any_list1)))) = false

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 110


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len (((Nil) @ any_list1))) then false else true = true->if even (len ((any_list1 @ (Nil)))) then false else true = false -> even (len (((Nil) @ (any1::any_list1)))) = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 111


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len ((any_list1 @ (Nil)))) then false else true = true->if even (len (((Nil) @ any_list1))) then false else true = false -> even (len (((Nil) @ (any1::any_list1)))) = false

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len ((any_list1 @ (Nil)))) then false else true = true->if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = false

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6)
=================================================
Progress: 112


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len (((Nil) @ any_list1))) then false else true = true->if even (len ((any_list1 @ (Nil)))) then false else true = false -> even (len (((Nil) @ (any1::any_list1)))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len (any_list1)) then false else true = true->if even (len ((any_list1 @ (Nil)))) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6)
=================================================
Progress: 113


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len ((any_list1 @ (Nil)))) then false else true = true->if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = false

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if even (len ((any_list1 @ (Nil)))) then false else true = true
---------------------------------------
if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = false

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6)
=================================================
Progress: 114


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len (any_list1)) then false else true = true->if even (len ((any_list1 @ (Nil)))) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if even (len (any_list1)) then false else true = true
---------------------------------------
if even (len ((any_list1 @ (Nil)))) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6)
=================================================
Progress: 115


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if even (len ((any_list1 @ (Nil)))) then false else true = true
---------------------------------------
if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = false

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if even (len ((any_list1 @ (Nil)))) then false else true = true
Cond2 : if even (len (any_list1)) then false else true = false
---------------------------------------
if even (len (any_list1)) then false else true = false

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case even (len (any_list1))(rank:7)
rewrite Cond2 in goal at 0(rank:14)
=================================================
Progress: 116


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if even (len (any_list1)) then false else true = true
---------------------------------------
if even (len ((any_list1 @ (Nil)))) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if even (len (any_list1)) then false else true = true
Cond2 : if even (len ((any_list1 @ (Nil)))) then false else true = false
---------------------------------------
if even (len (any_list1)) then false else true = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case even (len (any_list1))(rank:7)
rewrite Cond1 in goal at 0(rank:14)
=================================================
Progress: 117


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if even (len ((any_list1 @ (Nil)))) then false else true = true
Cond2 : if even (len (any_list1)) then false else true = false
---------------------------------------
if even (len (any_list1)) then false else true = false

1 goal(s) more...

1 conjecture(s) more...
>>> case even (len (any_list1))(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if even (len ((any_list1 @ (Nil)))) then false else true = true
Cond2 : false = false
Case1 : even (len (any_list1)) = true
---------------------------------------
false = false

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 118


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if even (len ((any_list1 @ (Nil)))) then false else true = true
Cond2 : false = false
Case1 : even (len (any_list1)) = true
---------------------------------------
false = false

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if even (len ((any_list1 @ (Nil)))) then false else true = true
Cond2 : true = false
Case1 : even (len (any_list1)) = false
---------------------------------------
true = false

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:5)
=================================================
Progress: 119


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if even (len ((any_list1 @ (Nil)))) then false else true = true
Cond2 : true = false
Case1 : even (len (any_list1)) = false
---------------------------------------
true = false

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list1 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list1))) then false else true = false -> even (len ((any_list3 @ (any1::any_list1)))) = false
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if even (len ((any_list1 @ (any2::any_list3)))) then false else true = true->if even (len (((any2::any_list3) @ any_list1))) then false else true = false -> even (len (((any2::any_list3) @ (any1::any_list1)))) = false

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 120


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list1 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list1))) then false else true = false -> even (len ((any_list3 @ (any1::any_list1)))) = false
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if even (len ((any_list1 @ (any2::any_list3)))) then false else true = true->if even (len (((any2::any_list3) @ any_list1))) then false else true = false -> even (len (((any2::any_list3) @ (any1::any_list1)))) = false

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list1 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list1))) then false else true = false -> even (len ((any_list3 @ (any1::any_list1)))) = false
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if even (len ((any_list1 @ (any2::any_list3)))) then false else true = true->if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5)
=================================================
Progress: 121


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list1 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list1))) then false else true = false -> even (len ((any_list3 @ (any1::any_list1)))) = false
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if even (len ((any_list1 @ (any2::any_list3)))) then false else true = true->if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list1 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list1))) then false else true = false -> even (len ((any_list3 @ (any1::any_list1)))) = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = true
---------------------------------------
if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5)
=================================================
Progress: 122


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list1 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list1))) then false else true = false -> even (len ((any_list3 @ (any1::any_list1)))) = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = true
---------------------------------------
if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list1 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list1))) then false else true = false -> even (len ((any_list3 @ (any1::any_list1)))) = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = true
Cond2 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case even (len ((any_list3 @ (any1::any_list1))))(rank:6)
rewrite IH1 in goal at 0(rank:15)
rewrite <- IH1 in goal at 0(rank:23)
rewrite <- IH1 in goal at 2(rank:15)
rewrite <- IH1 in goal at 1(rank:23)
=================================================
Progress: 123


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list1 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list1))) then false else true = false -> even (len ((any_list3 @ (any1::any_list1)))) = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = true
Cond2 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false

0 goal(s) more...

1 conjecture(s) more...
>>> case even (len ((any_list3 @ (any1::any_list1))))(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list1 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list1))) then false else true = false -> true = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = true
Cond2 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = false

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 124


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list1 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list1))) then false else true = false -> true = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = true
Cond2 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = false

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list1 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list1))) then false else true = false -> false = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = true
Cond2 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = false
---------------------------------------
true = false

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:5)
=================================================
Progress: 125


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list1 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list1))) then false else true = false -> false = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = true
Cond2 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = false
---------------------------------------
true = false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list1 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list1))) then false else true = false -> false = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = true
Cond2 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = false
---------------------------------------
true = even (len ((any_list3 @ (any1::any_list1))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case even (len ((any_list3 @ (any1::any_list1))))
reflexivity
rewrite <- Case1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list), if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false->even (len ((any_list3 @ (any1::any_list1)))) = false -> true = even (len ((any_list3 @ (any1::any_list1))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list1 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list1))) then false else true = false -> false = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = true
Cond2 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = false
---------------------------------------
true = even (len ((any_list3 @ (any1::any_list1))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 126


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list1 @ any_list2))) then false else true = true->if even (len ((any_list2 @ any_list1))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list1 @ any_list3))) then false else true = true->if even (len ((any_list3 @ any_list1))) then false else true = false -> false = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = true
Cond2 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = false
---------------------------------------
true = even (len ((any_list3 @ (any1::any_list1))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list), if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false->even (len ((any_list3 @ (any1::any_list1)))) = false -> true = even (len ((any_list3 @ (any1::any_list1))))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any1(rank:7)
=================================================
Progress: 127


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if even (len (any_list1)) then false else true = true
Cond2 : if even (len ((any_list1 @ (Nil)))) then false else true = false
---------------------------------------
if even (len (any_list1)) then false else true = true

1 goal(s) more...

1 conjecture(s) more...
>>> case even (len (any_list1))(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : false = true
Cond2 : if even (len ((any_list1 @ (Nil)))) then false else true = false
Case1 : even (len (any_list1)) = true
---------------------------------------
false = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:6)
=================================================
Progress: 128


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : false = true
Cond2 : if even (len ((any_list1 @ (Nil)))) then false else true = false
Case1 : even (len (any_list1)) = true
---------------------------------------
false = true

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : true = true
Cond2 : if even (len ((any_list1 @ (Nil)))) then false else true = false
Case1 : even (len (any_list1)) = false
---------------------------------------
true = true

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 129


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : true = true
Cond2 : if even (len ((any_list1 @ (Nil)))) then false else true = false
Case1 : even (len (any_list1)) = false
---------------------------------------
true = true

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list3))) then false else true = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if even (len (((any2::any_list3) @ any_list1))) then false else true = true->if even (len ((any_list1 @ (any2::any_list3)))) then false else true = false -> even (len (((any2::any_list3) @ (any1::any_list1)))) = true

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 130


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list3))) then false else true = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if even (len (((any2::any_list3) @ any_list1))) then false else true = true->if even (len ((any_list1 @ (any2::any_list3)))) then false else true = false -> even (len (((any2::any_list3) @ (any1::any_list1)))) = true

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list3))) then false else true = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->if even (len ((any_list1 @ (any2::any_list3)))) then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5)
=================================================
Progress: 131


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list3))) then false else true = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->if even (len ((any_list1 @ (any2::any_list3)))) then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list3))) then false else true = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
---------------------------------------
if even (len ((any_list1 @ (any2::any_list3)))) then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5)
=================================================
Progress: 132


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list3))) then false else true = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
---------------------------------------
if even (len ((any_list1 @ (any2::any_list3)))) then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list3))) then false else true = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
Cond2 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = false
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case even (len ((any_list3 @ (any1::any_list1))))(rank:6)
rewrite IH1 in goal at 0(rank:15)
rewrite <- IH1 in goal at 0(rank:23)
rewrite <- IH1 in goal at 2(rank:15)
rewrite <- IH1 in goal at 1(rank:23)
=================================================
Progress: 133


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list3))) then false else true = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
Cond2 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = false
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

1 conjecture(s) more...
>>> case even (len ((any_list3 @ (any1::any_list1))))(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list3))) then false else true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
Cond2 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:6)
=================================================
Progress: 134


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list3))) then false else true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
Cond2 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = true

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list3))) then false else true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
Cond2 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = even (len ((any_list3 @ (any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case even (len ((any_list3 @ (any1::any_list1))))
rewrite <- Case1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list), if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list3))) then false else true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
Cond2 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = even (len ((any_list3 @ (any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 135


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if even (len ((any_list2 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list2))) then false else true = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if even (len ((any_list3 @ any_list1))) then false else true = true->if even (len ((any_list1 @ any_list3))) then false else true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true
Cond2 : if even (len ((any_list1 @ (any2::any_list3)))) then false else true = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = even (len ((any_list3 @ (any1::any_list1))))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list), if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any1(rank:7)
=================================================
Progress: 136


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:7)
=================================================
Progress: 137


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:7)
=================================================
Progress: 138


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8)
=================================================
Progress: 139


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8)
=================================================
Progress: 140


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if even (len (((Nil) @ any_list1))) then false else true then false else true = false->even (len (((Nil) @ (any1::any_list1)))) = false -> true = even (len (((Nil) @ (any1::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 141


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if even (len (((Nil) @ any_list1))) then false else true then false else true = true->even (len (((Nil) @ (any1::any_list1)))) = true -> false = even (len (((Nil) @ (any1::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 142


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if even (len (((Nil) @ any_list1))) then false else true then false else true = false->even (len (((Nil) @ (any1::any_list1)))) = false -> true = even (len (((Nil) @ (any1::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if even (len (any_list1)) then false else true then false else true = false->if even (len (any_list1)) then false else true = false -> true = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8)
=================================================
Progress: 143


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if even (len (((Nil) @ any_list1))) then false else true then false else true = true->even (len (((Nil) @ (any1::any_list1)))) = true -> false = even (len (((Nil) @ (any1::any_list1))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if even (len (any_list1)) then false else true then false else true = true->if even (len (any_list1)) then false else true = true -> false = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8)
=================================================
Progress: 144


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if even (len (any_list1)) then false else true then false else true = false->if even (len (any_list1)) then false else true = false -> true = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if even (len (any_list1)) then false else true then false else true = false
---------------------------------------
if even (len (any_list1)) then false else true = false -> true = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8)
=================================================
Progress: 145


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if even (len (any_list1)) then false else true then false else true = true->if even (len (any_list1)) then false else true = true -> false = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if even (len (any_list1)) then false else true then false else true = true
---------------------------------------
if even (len (any_list1)) then false else true = true -> false = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8)
=================================================
Progress: 146


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if even (len (any_list1)) then false else true then false else true = false
---------------------------------------
if even (len (any_list1)) then false else true = false -> true = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if even (len (any_list1)) then false else true then false else true = false
Cond2 : if even (len (any_list1)) then false else true = false
---------------------------------------
true = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case even (len (any_list1))(rank:9)
rewrite Cond2 in goal at 0(rank:16)
=================================================
Progress: 147


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if even (len (any_list1)) then false else true then false else true = true
---------------------------------------
if even (len (any_list1)) then false else true = true -> false = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if even (len (any_list1)) then false else true then false else true = true
Cond2 : if even (len (any_list1)) then false else true = true
---------------------------------------
false = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case even (len (any_list1))(rank:9)
rewrite Cond2 in goal at 0(rank:16)
=================================================
Progress: 148


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if even (len (any_list1)) then false else true then false else true = false
Cond2 : if even (len (any_list1)) then false else true = false
---------------------------------------
true = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
>>> case even (len (any_list1))(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : true = false
Cond2 : false = false
Case1 : even (len (any_list1)) = true
---------------------------------------
true = false

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:8)
=================================================
Progress: 149


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : true = false
Cond2 : false = false
Case1 : even (len (any_list1)) = true
---------------------------------------
true = false

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : false = false
Cond2 : true = false
Case1 : even (len (any_list1)) = false
---------------------------------------
true = true

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 150


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : false = false
Cond2 : true = false
Case1 : even (len (any_list1)) = false
---------------------------------------
true = true

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false->even (len ((any_list3 @ (any1::any_list1)))) = false -> true = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if even (len (((any2::any_list3) @ any_list1))) then false else true then false else true = false->even (len (((any2::any_list3) @ (any1::any_list1)))) = false -> true = even (len (((any2::any_list3) @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 151


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false->even (len ((any_list3 @ (any1::any_list1)))) = false -> true = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if even (len (((any2::any_list3) @ any_list1))) then false else true then false else true = false->even (len (((any2::any_list3) @ (any1::any_list1)))) = false -> true = even (len (((any2::any_list3) @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false->even (len ((any_list3 @ (any1::any_list1)))) = false -> true = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = false->if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false -> true = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 152


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false->even (len ((any_list3 @ (any1::any_list1)))) = false -> true = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = false->if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false -> true = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false->even (len ((any_list3 @ (any1::any_list1)))) = false -> true = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = false
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false -> true = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7)
=================================================
Progress: 153


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false->even (len ((any_list3 @ (any1::any_list1)))) = false -> true = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = false
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false -> true = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false->even (len ((any_list3 @ (any1::any_list1)))) = false -> true = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = false
Cond2 : if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false
---------------------------------------
true = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case even (len ((any_list3 @ (any1::any_list1))))(rank:8)
rewrite Cond2 in goal at 0(rank:15)
rewrite IH1 in goal at 0(rank:25)
rewrite IH1 in goal at 1(rank:17)
rewrite IH1 in goal at 2(rank:25)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 154


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false->even (len ((any_list3 @ (any1::any_list1)))) = false -> true = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = false
Cond2 : if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false
---------------------------------------
true = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> case even (len ((any_list3 @ (any1::any_list1))))(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false->true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = false
Cond2 : false = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
true = false

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:8)
=================================================
Progress: 155


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false->true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = false
Cond2 : false = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
true = false

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false->true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = false
Cond2 : false = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
even (len ((any_list3 @ (any1::any_list1)))) = false

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case even (len ((any_list3 @ (any1::any_list1))))
rewrite <- Case1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list), if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list3 @ (any1::any_list1)))) = true -> even (len ((any_list3 @ (any1::any_list1)))) = false
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false->true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = false
Cond2 : false = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
even (len ((any_list3 @ (any1::any_list1)))) = false

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 156


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = false->even (len ((any_list2 @ (any1::any_list1)))) = false -> true = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = false->true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = false
Cond2 : false = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
even (len ((any_list3 @ (any1::any_list1)))) = false

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list), if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list3 @ (any1::any_list1)))) = true -> even (len ((any_list3 @ (any1::any_list1)))) = false(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any1(rank:9)
=================================================
Progress: 157


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if even (len (any_list1)) then false else true then false else true = true
Cond2 : if even (len (any_list1)) then false else true = true
---------------------------------------
false = if even (len (any_list1)) then false else true

1 goal(s) more...

2 conjecture(s) more...
>>> case even (len (any_list1))(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : true = true
Cond2 : false = true
Case1 : even (len (any_list1)) = true
---------------------------------------
false = false

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 158


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : true = true
Cond2 : false = true
Case1 : even (len (any_list1)) = true
---------------------------------------
false = false

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : false = true
Cond2 : true = true
Case1 : even (len (any_list1)) = false
---------------------------------------
false = true

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7)
=================================================
Progress: 159


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : false = true
Cond2 : true = true
Case1 : even (len (any_list1)) = false
---------------------------------------
false = true

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if even (len (((any2::any_list3) @ any_list1))) then false else true then false else true = true->even (len (((any2::any_list3) @ (any1::any_list1)))) = true -> false = even (len (((any2::any_list3) @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 160


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if even (len (((any2::any_list3) @ any_list1))) then false else true then false else true = true->even (len (((any2::any_list3) @ (any1::any_list1)))) = true -> false = even (len (((any2::any_list3) @ (any1::any_list1))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true -> false = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 161


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true -> false = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true -> false = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7)
=================================================
Progress: 162


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true -> false = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true
---------------------------------------
false = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case even (len ((any_list3 @ (any1::any_list1))))(rank:8)
rewrite Cond2 in goal at 0(rank:15)
rewrite IH1 in goal at 0(rank:25)
rewrite IH1 in goal at 1(rank:17)
rewrite IH1 in goal at 2(rank:25)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 163


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true
---------------------------------------
false = if even (len ((any_list3 @ (any1::any_list1)))) then false else true

0 goal(s) more...

2 conjecture(s) more...
>>> case even (len ((any_list3 @ (any1::any_list1))))(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->true = true -> false = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : false = true
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = false

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 164


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->true = true -> false = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : false = true
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = false

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = true -> false = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : true = true
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = false
---------------------------------------
false = true

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:7)
=================================================
Progress: 165


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = true -> false = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : true = true
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = false
---------------------------------------
false = true

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = true -> false = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : true = true
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = false
---------------------------------------
even (len ((any_list3 @ (any1::any_list1)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case even (len ((any_list3 @ (any1::any_list1))))
reflexivity
rewrite <- Case1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list), if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = true -> false = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : true = true
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = false
---------------------------------------
even (len ((any_list3 @ (any1::any_list1)))) = true

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 166


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if even (len ((any_list2 @ any_list1))) then false else true then false else true = true->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if even (len ((any_list3 @ any_list1))) then false else true then false else true = true->false = true -> false = false
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true
Cond2 : true = true
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = false
---------------------------------------
even (len ((any_list3 @ (any1::any_list1)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list), if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any1(rank:9)
=================================================
Progress: 167


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:9)
=================================================
Progress: 168


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:9)
=================================================
Progress: 169


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10)
=================================================
Progress: 170


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10)
=================================================
Progress: 171


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if if even (len (((Nil) @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len (((Nil) @ (any1::any_list1)))) = true -> even (len (((Nil) @ (any1::any_list1)))) = false

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 172


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if if even (len (((Nil) @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len (((Nil) @ (any1::any_list1)))) = false -> even (len (((Nil) @ (any1::any_list1)))) = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 173


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if if even (len (((Nil) @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len (((Nil) @ (any1::any_list1)))) = true -> even (len (((Nil) @ (any1::any_list1)))) = false

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if if even (len (any_list1)) then false else true then false else true then false else true = false->false = false->if even (len (any_list1)) then false else true = true -> if even (len (any_list1)) then false else true = false

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10)
=================================================
Progress: 174


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if if even (len (((Nil) @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len (((Nil) @ (any1::any_list1)))) = false -> even (len (((Nil) @ (any1::any_list1)))) = true

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if if even (len (any_list1)) then false else true then false else true then false else true = true->true = true->if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10)
=================================================
Progress: 175


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if if even (len (any_list1)) then false else true then false else true then false else true = false->false = false->if even (len (any_list1)) then false else true = true -> if even (len (any_list1)) then false else true = false

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = false
---------------------------------------
false = false->if even (len (any_list1)) then false else true = true -> if even (len (any_list1)) then false else true = false

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10)
=================================================
Progress: 176


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if if if even (len (any_list1)) then false else true then false else true then false else true = true->true = true->if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = true
---------------------------------------
true = true->if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10)
=================================================
Progress: 177


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = false
---------------------------------------
false = false->if even (len (any_list1)) then false else true = true -> if even (len (any_list1)) then false else true = false

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = false
Cond2 : false = false
---------------------------------------
if even (len (any_list1)) then false else true = true -> if even (len (any_list1)) then false else true = false

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:10)
=================================================
Progress: 178


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = true
---------------------------------------
true = true->if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = true
Cond2 : true = true
---------------------------------------
if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:10)
=================================================
Progress: 179


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = false
Cond2 : false = false
---------------------------------------
if even (len (any_list1)) then false else true = true -> if even (len (any_list1)) then false else true = false

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = false->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> even (len ((any_list2 @ (any1::any_list1)))) = false
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = false
Cond2 : false = false
Cond3 : if even (len (any_list1)) then false else true = true
---------------------------------------
if even (len (any_list1)) then false else true = false

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case even (len (any_list1))(rank:11)
rewrite Cond3 in goal at 0(rank:18)
=================================================
Progress: 180


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = true
Cond2 : true = true
---------------------------------------
if even (len (any_list1)) then false else true = false -> if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = true
Cond2 : true = true
Cond3 : if even (len (any_list1)) then false else true = false
---------------------------------------
if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case even (len (any_list1))(rank:11)
rewrite Cond3 in goal at 0(rank:18)
=================================================
Progress: 181


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : if if if even (len (any_list1)) then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
Cond4 : if even (len (any_list1)) then false else true = false
---------------------------------------
if even (len (any_list1)) then false else true = true

1 goal(s) more...

3 conjecture(s) more...
>>> case even (len (any_list1))(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : false = true
Cond2 : false = false
Cond3 : true = true
Cond4 : false = false
Case1 : even (len (any_list1)) = true
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:10)
=================================================
Progress: 182


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : false = true
Cond2 : false = false
Cond3 : true = true
Cond4 : false = false
Case1 : even (len (any_list1)) = true
---------------------------------------
false = true

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : true = true
Cond2 : false = false
Cond3 : true = true
Cond4 : true = false
Case1 : even (len (any_list1)) = false
---------------------------------------
true = true

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 183


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
Base1 : any_list2 = (Nil)
Cond1 : true = true
Cond2 : false = false
Cond3 : true = true
Cond4 : true = false
Case1 : even (len (any_list1)) = false
---------------------------------------
true = true

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if if even (len (((any2::any_list3) @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len (((any2::any_list3) @ (any1::any_list1)))) = false -> even (len (((any2::any_list3) @ (any1::any_list1)))) = true

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 184


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if if even (len (((any2::any_list3) @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len (((any2::any_list3) @ (any1::any_list1)))) = false -> even (len (((any2::any_list3) @ (any1::any_list1)))) = true

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true->false = false->true = true->if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 185


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true->false = false->true = true->if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true
---------------------------------------
false = false->true = true->if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9)
=================================================
Progress: 186


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true
---------------------------------------
false = false->true = true->if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true
Cond2 : false = false
---------------------------------------
true = true->if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:9)
=================================================
Progress: 187


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true
Cond2 : false = false
---------------------------------------
true = true->if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:9)
=================================================
Progress: 188


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false -> if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond4(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
Cond4 : if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
case even (len ((any_list3 @ (any1::any_list1))))(rank:10)
rewrite Cond4 in goal at 0(rank:17)
rewrite IH1 in goal at 0(rank:21)
rewrite <- IH1 in goal at 0(rank:29)
rewrite <- IH1 in goal at 1(rank:29)
rewrite <- IH1 in goal at 2(rank:21)
=================================================
Progress: 189


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list3 @ (any1::any_list1)))) = false -> even (len ((any_list3 @ (any1::any_list1)))) = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
Cond4 : if even (len ((any_list3 @ (any1::any_list1)))) then false else true = false
---------------------------------------
if even (len ((any_list3 @ (any1::any_list1)))) then false else true = true

0 goal(s) more...

3 conjecture(s) more...
>>> case even (len ((any_list3 @ (any1::any_list1))))(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
Cond4 : false = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = true

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:10)
=================================================
Progress: 190


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
Cond4 : false = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = true

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
Cond4 : false = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = even (len ((any_list3 @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
intro Cond4
case even (len ((any_list3 @ (any1::any_list1))))
rewrite <- Case1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list), if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true->false = false->true = true->false = false->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
Cond4 : false = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = even (len ((any_list3 @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 191


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->even (len ((any_list2 @ (any1::any_list1)))) = false -> even (len ((any_list2 @ (any1::any_list1)))) = true
any1 : any
any_list1 : any list
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true = true->false = false->true = true->true = false -> true = true
Inductive1 : any_list2 = (any2::any_list3)
Cond1 : if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true
Cond2 : false = false
Cond3 : true = true
Cond4 : false = false
Case1 : even (len ((any_list3 @ (any1::any_list1)))) = true
---------------------------------------
false = even (len ((any_list3 @ (any1::any_list1))))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list), if if if if even (len ((any_list3 @ any_list1))) then false else true then false else true then false else true then false else true = true->false = false->true = true->false = false->even (len ((any_list3 @ (any1::any_list1)))) = true -> false = even (len ((any_list3 @ (any1::any_list1))))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), if if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true then false else true = true->false = false->true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), if if if if even (len ((any_list2 @ any_list1))) then false else true then false else true then false else true then false else true = true->false = false->true = true->false = false->even (len ((any_list2 @ (any1::any_list1)))) = true -> false = even (len ((any_list2 @ (any1::any_list1))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any1(rank:11)
=================================================
Progress: 192


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if if even (len ((any_list3 @ any_list4))) then false else true then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if if even (len ((any_list4 @ any_list3))) then false else true then false else true

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0)
=================================================
Progress: 193


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if if even (len ((any_list4 @ any_list3))) then false else true then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0)


No conjecture
Proof Success
Proof
assert forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
induction any_list1
simpl in goal
induction any_list2
reflexivity
simpl in goal
case even (len (any_list3))
case even (len ((any_list3 @ (Nil))))
reflexivity
discriminate
case even (len ((any_list3 @ (Nil))))
discriminate
reflexivity
simpl in goal
induction any_list2
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
rewrite IH1 in goal at 0
reflexivity
Qed
File "_none_", lines 81-83, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 81-83, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
