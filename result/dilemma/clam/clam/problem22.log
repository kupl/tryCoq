Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list) (y:any list), even (len ((x @ y))) = even (len ((y @ x)))(rank : 0.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:12.)
induction any_list2(rank:12.)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), even (len (((Nil) @ any_list2))) = even (len ((any_list2 @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), even (len (((Nil) @ any_list2))) = even (len ((any_list2 @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), even (len (any_list2)) = even (len ((any_list2 @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:5.)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), even (len (any_list2)) = even (len ((any_list2 @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
even (len ((Nil))) = even (len (((Nil) @ (Nil))))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 5


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
even (len ((Nil))) = even (len (((Nil) @ (Nil))))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : even (len (any_list3)) = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
even (len ((any1::any_list3))) = even (len (((any1::any_list3) @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : even (len (any_list3)) = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
even (len ((any1::any_list3))) = even (len (((any1::any_list3) @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : even (len (any_list3)) = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
if even (len (any_list3)) then false else true = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case even (len (any_list3))(rank:5.)
case even (len ((any_list3 @ (Nil))))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : even (len (any_list3)) = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
if even (len (any_list3)) then false else true = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len (any_list3))(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : true = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = true
---------------------------------------
false = if even (len ((any_list3 @ (Nil)))) then false else true

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case even (len ((any_list3 @ (Nil))))(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : even (len (any_list3)) = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
if even (len (any_list3)) then false else true = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list3 @ (Nil))))(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : even (len (any_list3)) = true
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
if even (len (any_list3)) then false else true = false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : true = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = true
---------------------------------------
false = if even (len ((any_list3 @ (Nil)))) then false else true

2 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list3 @ (Nil))))(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : true = true
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
false = false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 10


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : true = true
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
false = false

3 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : true = false
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = false
---------------------------------------
false = true

2 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:4.)
=================================================
Progress: 11


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : true = false
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = false
---------------------------------------
false = true

2 goal(s) more...

0 conjecture(s) more...
>>> discriminate(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : false = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = false
---------------------------------------
true = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 3
Tactic List : 4
case even (len ((any_list3 @ (Nil))))(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 12


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : false = even (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = false
---------------------------------------
true = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list3 @ (Nil))))(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : false = true
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = false
Case2 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
true = false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
discriminate(rank:4.)
=================================================
Progress: 13


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : false = true
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = false
Case2 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
true = false

2 goal(s) more...

0 conjecture(s) more...
>>> discriminate(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : false = false
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = false
Case2 : even (len ((any_list3 @ (Nil)))) = false
---------------------------------------
true = true

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 14


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : false = false
Inductive1 : any_list2 = (any1::any_list3)
Case1 : even (len (any_list3)) = false
Case2 : even (len ((any_list3 @ (Nil)))) = false
---------------------------------------
true = true

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), even (len (((any1::any_list3) @ any_list2))) = even (len ((any_list2 @ (any1::any_list3))))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 8
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 15


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), even (len (((any1::any_list3) @ any_list2))) = even (len ((any_list2 @ (any1::any_list3))))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), if even (len ((any_list3 @ any_list2))) then false else true = even (len ((any_list2 @ (any1::any_list3))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:4.)
=================================================
Progress: 16


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), if even (len ((any_list3 @ any_list2))) then false else true = even (len ((any_list2 @ (any1::any_list3))))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = even (len (((Nil) @ (any1::any_list3))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 17


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = even (len (((Nil) @ (any1::any_list3))))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case even (len (any_list3))(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 18


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len (any_list3))(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
Case1 : even (len (any_list3)) = true
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case even (len ((any_list3 @ (Nil))))(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
=================================================
Progress: 19


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
Case1 : even (len (any_list3)) = true
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = false

2 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list3 @ (Nil))))(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
false = false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 20


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
false = false

3 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = false
---------------------------------------
true = false

2 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 21


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), even (len ((any_list1 @ (Nil)))) = even (len (((Nil) @ any_list1)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 22


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), even (len ((any_list1 @ (Nil)))) = even (len (((Nil) @ any_list1)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), even (len ((any_list1 @ (Nil)))) = even (len (any_list1))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:5.)
=================================================
Progress: 23


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), even (len ((any_list1 @ (Nil)))) = even (len (any_list1))

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
even (len (((Nil) @ (Nil)))) = even (len ((Nil)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 24


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
even (len (((Nil) @ (Nil)))) = even (len ((Nil)))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : even (len ((any_list3 @ (Nil)))) = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
even (len (((any1::any_list3) @ (Nil)))) = even (len ((any1::any_list3)))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 25


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : even (len ((any_list3 @ (Nil)))) = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
even (len (((any1::any_list3) @ (Nil)))) = even (len ((any1::any_list3)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : even (len ((any_list3 @ (Nil)))) = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case even (len (any_list3))(rank:5.)
case even (len ((any_list3 @ (Nil))))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
=================================================
Progress: 26


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : even (len ((any_list3 @ (Nil)))) = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len (any_list3))(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : even (len ((any_list3 @ (Nil)))) = true
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len (any_list3)) = true
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 27


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : even (len ((any_list3 @ (Nil)))) = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list3 @ (Nil))))(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : true = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
false = if even (len (any_list3)) then false else true

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case even (len (any_list3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
=================================================
Progress: 28


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : true = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
false = if even (len (any_list3)) then false else true

2 goal(s) more...

0 conjecture(s) more...
>>> case even (len (any_list3))(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : true = true
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = true
Case2 : even (len (any_list3)) = true
---------------------------------------
false = false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 29


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : true = true
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = true
Case2 : even (len (any_list3)) = true
---------------------------------------
false = false

3 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : true = false
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = true
Case2 : even (len (any_list3)) = false
---------------------------------------
false = true

2 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:4.)
=================================================
Progress: 30


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : true = false
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = true
Case2 : even (len (any_list3)) = false
---------------------------------------
false = true

2 goal(s) more...

0 conjecture(s) more...
>>> discriminate(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : false = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = false
---------------------------------------
true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 3
Tactic List : 4
case even (len (any_list3))(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 31


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : false = even (len (any_list3))
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = false
---------------------------------------
true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len (any_list3))(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : false = true
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = false
Case2 : even (len (any_list3)) = true
---------------------------------------
true = false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
discriminate(rank:4.)
=================================================
Progress: 32


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : false = true
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = false
Case2 : even (len (any_list3)) = true
---------------------------------------
true = false

2 goal(s) more...

0 conjecture(s) more...
>>> discriminate(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : false = false
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = false
Case2 : even (len (any_list3)) = false
---------------------------------------
true = true

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 33


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : false = false
Inductive1 : any_list1 = (any1::any_list3)
Case1 : even (len ((any_list3 @ (Nil)))) = false
Case2 : even (len (any_list3)) = false
---------------------------------------
true = true

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), even (len ((any_list1 @ (any1::any_list3)))) = even (len (((any1::any_list3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 8
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 34


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), even (len ((any_list1 @ (any1::any_list3)))) = even (len (((any1::any_list3) @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), even (len ((any_list1 @ (any1::any_list3)))) = if even (len ((any_list3 @ any_list1))) then false else true

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:4.)
=================================================
Progress: 35


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), even (len ((any_list1 @ (any1::any_list3)))) = if even (len ((any_list3 @ any_list1))) then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
even (len (((Nil) @ (any1::any_list3)))) = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 36


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
even (len (((Nil) @ (any1::any_list3)))) = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
if even (len (any_list3)) then false else true = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case even (len (any_list3))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 37


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
if even (len (any_list3)) then false else true = if even (len ((any_list3 @ (Nil)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len (any_list3))(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
Case1 : even (len (any_list3)) = true
---------------------------------------
false = if even (len ((any_list3 @ (Nil)))) then false else true

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case even (len ((any_list3 @ (Nil))))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 38


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
Case1 : even (len (any_list3)) = true
---------------------------------------
false = if even (len ((any_list3 @ (Nil)))) then false else true

2 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list3 @ (Nil))))(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
false = false

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 39


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = true
---------------------------------------
false = false

3 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), even (len ((any_list1 @ any_list3))) = even (len ((any_list3 @ any_list1)))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
Case1 : even (len (any_list3)) = true
Case2 : even (len ((any_list3 @ (Nil)))) = false
---------------------------------------
false = true

2 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 40


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len ((any_list3 @ (Nil)))) then false else true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len (((Nil) @ any_list3))) then false else true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 41


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
if even (len (((Nil) @ any_list3))) then false else true = if even (len (any_list3)) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if even (len ((any_list3 @ (any2::any_list4)))) then false else true = even (len (((any2::any_list4) @ (any1::any_list3))))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 4
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 42


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if even (len ((any_list3 @ (any2::any_list4)))) then false else true = even (len (((any2::any_list4) @ (any1::any_list3))))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if even (len ((any_list3 @ (any2::any_list4)))) then false else true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case even (len ((any_list4 @ (any1::any_list3))))(rank:4.)
rewrite IH1 in goal at 0(rank:19.)
rewrite <- IH2 in goal at 0(rank:19.)
=================================================
Progress: 43


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if even (len ((any_list3 @ (any2::any_list4)))) then false else true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list4 @ (any1::any_list3))))(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = true
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ (any1::any_list3)))) = true
---------------------------------------
if even (len ((any_list3 @ (any2::any_list4)))) then false else true = false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case even (len ((any_list3 @ (any2::any_list4))))(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 44


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = true
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ (any1::any_list3)))) = true
---------------------------------------
if even (len ((any_list3 @ (any2::any_list4)))) then false else true = false

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list3 @ (any2::any_list4))))(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = true
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ (any1::any_list3)))) = true
Case2 : even (len ((any_list3 @ (any2::any_list4)))) = true
---------------------------------------
false = false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 45


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = true
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ (any1::any_list3)))) = true
Case2 : even (len ((any_list3 @ (any2::any_list4)))) = true
---------------------------------------
false = false

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = true
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ (any1::any_list3)))) = true
Case2 : even (len ((any_list3 @ (any2::any_list4)))) = false
---------------------------------------
true = false

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- Case2 in goal at 0(rank:20.)
=================================================
Progress: 46


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if even (len ((any_list3 @ (any2::any_list4)))) then false else true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 19.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if even (len (((any2::any_list4) @ any_list3))) then false else true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 47


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if even (len (((any2::any_list4) @ any_list3))) then false else true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case even (len ((any_list4 @ any_list3)))(rank:4.)
rewrite <- IH2 in goal at 0(rank:11.)
rewrite <- IH1 in goal at 0(rank:19.)
=================================================
Progress: 48


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list4 @ any_list3)))(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ any_list3))) = true
---------------------------------------
true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case even (len ((any_list4 @ (any1::any_list3))))(rank:5.)
rewrite <- Case1 in goal at 1(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 49


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ any_list3))) = true
---------------------------------------
true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list4 @ (any1::any_list3))))(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = true
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ any_list3))) = true
Case2 : even (len ((any_list4 @ (any1::any_list3)))) = true
---------------------------------------
true = false

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 50


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if even (len ((any_list4 @ (any1::any_list3)))) then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if if even (len ((any_list3 @ any_list4))) then false else true then false else true

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case even (len ((any_list4 @ any_list3)))(rank:4.)
case even (len ((any_list3 @ any_list4)))(rank:4.)
rewrite IH1 in goal at 0(rank:11.)
rewrite <- IH1 in goal at 0(rank:11.)
=================================================
Progress: 51


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if if even (len ((any_list3 @ any_list4))) then false else true then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list4 @ any_list3)))(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ any_list3))) = true
---------------------------------------
true = if if even (len ((any_list3 @ any_list4))) then false else true then false else true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case even (len ((any_list3 @ any_list4)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 1(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 2(rank:20.)
rewrite <- Case1 in goal at 3(rank:20.)
=================================================
Progress: 52


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if if even (len ((any_list3 @ any_list4))) then false else true then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list3 @ any_list4)))(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : false = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list3 @ any_list4))) = true
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = true

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case even (len ((any_list4 @ any_list3)))(rank:5.)
rewrite <- Case1 in goal at 3(rank:12.)
rewrite IH2 in goal at 0(rank:20.)
rewrite IH2 in goal at 2(rank:20.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 1(rank:20.)
rewrite <- Case1 in goal at 2(rank:20.)
rewrite IH2 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 53


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ any_list3))) = true
---------------------------------------
true = if if even (len ((any_list3 @ any_list4))) then false else true then false else true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list3 @ any_list4)))(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : false = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ any_list3))) = true
Case2 : even (len ((any_list3 @ any_list4))) = true
---------------------------------------
true = true

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 54


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : false = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ any_list3))) = true
Case2 : even (len ((any_list3 @ any_list4))) = true
---------------------------------------
true = true

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list4 @ any_list3))) = true
Case2 : even (len ((any_list3 @ any_list4))) = false
---------------------------------------
true = false

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite IH2 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- Case2 in goal at 0(rank:20.)
=================================================
Progress: 55


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : false = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list3 @ any_list4))) = true
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = true

1 goal(s) more...

0 conjecture(s) more...
>>> case even (len ((any_list4 @ any_list3)))(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : false = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list3 @ any_list4))) = true
Case2 : even (len ((any_list4 @ any_list3))) = true
---------------------------------------
true = true

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 56


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : false = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list3 @ any_list4))) = true
Case2 : even (len ((any_list4 @ any_list3))) = true
---------------------------------------
true = true

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : false = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
Case1 : even (len ((any_list3 @ any_list4))) = true
Case2 : even (len ((any_list4 @ any_list3))) = false
---------------------------------------
false = true

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite IH2 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- Case2 in goal at 0(rank:20.)
=================================================
Progress: 57


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if if even (len ((any_list3 @ any_list4))) then false else true then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11.)


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if if even (len ((any_list4 @ any_list3))) then false else true then false else true

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0.)
=================================================
Progress: 58


1st goal of : forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), even (len ((any_list3 @ any_list2))) = even (len ((any_list2 @ any_list3)))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : if even (len ((any_list3 @ any_list4))) then false else true = even (len ((any_list4 @ (any1::any_list3))))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
if if even (len ((any_list4 @ any_list3))) then false else true then false else true = if if even (len ((any_list4 @ any_list3))) then false else true then false else true

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0.)


No conjecture
Proof Success
Proof
assert forall (any_list1:any list) (any_list2:any list), even (len ((any_list1 @ any_list2))) = even (len ((any_list2 @ any_list1)))
induction any_list1
simpl in goal
induction any_list2
reflexivity
simpl in goal
case even (len (any_list3))
case even (len ((any_list3 @ (Nil))))
reflexivity
discriminate
case even (len ((any_list3 @ (Nil))))
discriminate
reflexivity
simpl in goal
induction any_list2
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
rewrite <- IH2 in goal at 0
rewrite IH1 in goal at 0
reflexivity
Qed
File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
