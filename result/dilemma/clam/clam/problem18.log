Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:nat list) (y:nat list), reverse ((reverse (x) @ y)) = (reverse (y) @ x)(rank : 0.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction nat_list1(rank:12.)
induction nat_list2(rank:12.)
=================================================
Progress: 2


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse ((reverse ((Nil)) @ nat_list2)) = (reverse (nat_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 3


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse ((reverse ((Nil)) @ nat_list2)) = (reverse (nat_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse (nat_list2) = (reverse (nat_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:5.)
=================================================
Progress: 4


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse (nat_list2) = (reverse (nat_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list2(rank : 5.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = (reverse ((Nil)) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 5


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = (reverse ((Nil)) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
reverse ((nat1::nat_list3)) = (reverse ((nat1::nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 6


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
reverse ((nat1::nat_list3)) = (reverse ((nat1::nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
parent
(nat1::(Nil))
lower
Cons(_, Nil())
upper
@(reverse(nat_list3), _)
remove upper
Cons(nat1, Nil())
remove lower
Cons(nat1, Nil())
parent
(nat1::(Nil))
lower
Cons(_, Nil())
upper
@(@(reverse(nat_list3), _), Nil())
remove upper
Cons(nat1, Nil())
remove lower
Cons(nat1, Nil())
Prop: (8::(Nil)) = ((8::(Nil)) @ (Nil))
Prop: (Nil) = ((Nil) @ (Nil))
Prop: (Nil) = ((Nil) @ (Nil))
Lemma List
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 7


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))(rank : 0.)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

---------------------------------------
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6.)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

---------------------------------------
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6.)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = ((any1::any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 10


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = ((any1::any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::(any_list2 @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5.)
=================================================
Progress: 11


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::(any_list2 @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5.)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::any_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 12


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::any_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
original goal
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
lemma
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
tactics
assert forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
induction any_list1
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
reflexivity
Deduplication: 0
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:4.)
=================================================
Progress: 13


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = (reverse (nat_list3) @ (nat1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 14


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = (reverse (nat_list3) @ (nat1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), reverse ((reverse ((nat1::nat_list3)) @ nat_list2)) = (reverse (nat_list2) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 15


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), reverse ((reverse ((nat1::nat_list3)) @ nat_list2)) = (reverse (nat_list2) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list2)) = (reverse (nat_list2) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:4.)
=================================================
Progress: 16


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list2)) = (reverse (nat_list2) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list2(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (reverse ((Nil)) @ (nat1::nat_list3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 17


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (reverse ((Nil)) @ (nat1::nat_list3))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:4.)
=================================================
Progress: 18


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse ((reverse (nat_list3) @ (nat1::(Nil)))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:4.)
=================================================
Progress: 19


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse ((reverse (nat_list3) @ (nat1::(Nil)))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
(reverse ((nat1::(Nil))) @ nat_list3) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 20


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
(reverse ((nat1::(Nil))) @ nat_list3) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list4)) = (reverse (nat_list4) @ (nat1::nat_list3))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list4))) = (reverse ((nat2::nat_list4)) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 21


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list4)) = (reverse (nat_list4) @ (nat1::nat_list3))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list4))) = (reverse ((nat2::nat_list4)) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list4)) = (reverse (nat_list4) @ (nat1::nat_list3))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
parent
(nat2::nat_list4)
lower
Cons(_, nat_list4)
upper
reverse(@(@(reverse(nat_list3), Cons(nat1, Nil())), _))
remove upper
Cons(nat2, nat_list4)
remove lower
Cons(nat2, _)
remove upper
Cons(nat2, Cons(nat3, nat_list5))
remove lower
Cons(nat2, Cons(nat3, _))
remove upper
Cons(nat2, Cons(nat3, Cons(nat4, nat_list6)))
remove lower
Cons(nat2, Cons(nat3, Cons(nat4, _)))
parent
(nat2::(Nil))
lower
Cons(_, Nil())
upper
@(@(reverse(nat_list4), _), Cons(nat1, nat_list3))
remove upper
Cons(nat2, Nil())
remove lower
Cons(nat2, Nil())
validate generalize_common_subterm_goal
Prop: reverse (((reverse ((Nil)) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil)))) = ((reverse ((Nil)) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(Nil)))
Prop: reverse (((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(Nil))))) = ((reverse ((ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))
Prop: reverse (((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(Nil))))) = ((reverse ((ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list4)) = (reverse (nat_list4) @ (nat1::nat_list3))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 22


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list4)) = (reverse (nat_list4) @ (nat1::nat_list3))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 23


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 24


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse ((nat3::nat_list3)) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 25


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse ((nat3::nat_list3)) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:6.)
=================================================
Progress: 26


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = ((reverse ((Nil)) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 27


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = ((reverse ((Nil)) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro nat1(rank:6.)
intro nat2(rank:6.)
=================================================
Progress: 28


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:6.)
=================================================
Progress: 29


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
validate generalize_common_subterm_goal
Prop: reverse ((((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(ZERO::(ZERO::(Nil))))
Prop: reverse ((((reverse ((Nil)) @ (SUCC (SUCC (ZERO))::(Nil))) @ (ZERO::(Nil))) @ (SUCC (SUCC (ZERO))::(Nil)))) = (SUCC (SUCC (ZERO))::(ZERO::(SUCC (SUCC (ZERO))::(Nil))))
Prop: reverse ((((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil)))) = (SUCC (ZERO)::(ZERO::(ZERO::(Nil))))
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 30


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:8.)
=================================================
Progress: 31


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat2
validate generalize_common_subterm_goal
Prop: reverse ((((reverse ((Nil)) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(SUCC (ZERO)::(ZERO::(Nil))))
Prop: reverse ((((reverse ((Nil)) @ (SUCC (SUCC (ZERO))::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(ZERO::(SUCC (SUCC (ZERO))::(Nil))))
Prop: reverse ((((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (SUCC (SUCC (ZERO))::(Nil)))) = (SUCC (SUCC (ZERO))::(ZERO::(ZERO::(Nil))))
=================================================
Progress: 32


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse ((Nil)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 33


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse ((Nil)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse ((nat4::nat_list2)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 34


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse ((nat4::nat_list2)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:7.)
intro nat2(rank:7.)
intro nat3(rank:7.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 35


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat2(rank:7.)
intro nat3(rank:7.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 36


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat3(rank:7.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 37


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 38


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat3(rank:7.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 39


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 40


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 41


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat3
rewrite <- IH1 in goal at 0
Prop: reverse ((((7::(Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((7::(Nil)) @ (ZERO::(Nil)))))
Prop: reverse ((((Nil) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((Nil) @ (ZERO::(Nil)))))
Prop: reverse ((((Nil) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil)))) = (SUCC (ZERO)::reverse (((Nil) @ (ZERO::(Nil)))))
previous tactics
simpl in goal
intro nat3
validate generalize_common_subterm_goal
Prop: reverse (((((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))
Prop: reverse (((((reverse ((Nil)) @ (ZERO::(Nil))) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil))) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil)))) = (SUCC (ZERO)::(ZERO::(SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil)))))
Prop: reverse (((((reverse ((Nil)) @ (SUCC (ZERO)::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(SUCC (SUCC (SUCC (ZERO)))::(SUCC (ZERO)::(SUCC (ZERO)::(Nil)))))
Lemma List
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 42


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))(rank : 0.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10.)
=================================================
Progress: 43


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 44


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat3
rewrite <- IH1 in goal at 0
Prop: reverse ((((Nil) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil)))) = (SUCC (ZERO)::reverse (((Nil) @ (ZERO::(Nil)))))
Prop: reverse ((((Nil) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((Nil) @ (ZERO::(Nil)))))
Prop: reverse ((((8::(Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((8::(Nil)) @ (ZERO::(Nil)))))
previous tactics
simpl in goal
intro nat1
intro nat3
validate generalize_common_subterm_goal
Prop: reverse (((((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))
Prop: reverse (((((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(SUCC (ZERO)::(ZERO::(ZERO::(Nil)))))
Prop: reverse (((((reverse ((ZERO::(ZERO::(Nil)))) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (SUCC (ZERO)::(Nil)))) = (SUCC (ZERO)::(SUCC (ZERO)::(SUCC (ZERO)::(ZERO::(ZERO::(ZERO::(Nil)))))))
=================================================
Progress: 45


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
intro nat3
rewrite <- IH1 in goal at 0
Prop: reverse ((((Nil) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((Nil) @ (SUCC (ZERO)::(Nil)))))
Prop: reverse ((((Nil) @ (SUCC (ZERO)::(Nil))) @ (SUCC (ZERO)::(Nil)))) = (SUCC (ZERO)::reverse (((Nil) @ (SUCC (ZERO)::(Nil)))))
Prop: reverse ((((7::(Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((7::(Nil)) @ (ZERO::(Nil)))))
previous tactics
simpl in goal
intro nat2
intro nat3
validate generalize_common_subterm_goal
Prop: reverse (((((reverse ((Nil)) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(ZERO::(SUCC (ZERO)::(ZERO::(Nil)))))
Prop: reverse (((((reverse ((ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (SUCC (ZERO)::(Nil)))) = (SUCC (ZERO)::(SUCC (ZERO)::(ZERO::(ZERO::(ZERO::(Nil))))))
Prop: reverse (((((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(SUCC (ZERO)::(ZERO::(ZERO::(Nil)))))
=================================================
Progress: 46


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat2
intro nat3
rewrite <- IH1 in goal at 0
Prop: reverse ((((Nil) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil)))) = (SUCC (ZERO)::reverse (((Nil) @ (ZERO::(Nil)))))
Prop: reverse ((((Nil) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil)))) = (SUCC (ZERO)::reverse (((Nil) @ (ZERO::(Nil)))))
Prop: reverse ((((Nil) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((Nil) @ (ZERO::(Nil)))))
previous tactics
simpl in goal
intro nat1
intro nat2
intro nat3
validate generalize_common_subterm_goal
Prop: reverse (((((reverse ((Nil)) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(SUCC (ZERO)::(ZERO::(SUCC (ZERO)::(Nil)))))
Prop: reverse (((((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))
Prop: reverse (((((reverse ((SUCC (SUCC (SUCC (ZERO)))::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(ZERO::(ZERO::(ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil))))))
=================================================
Progress: 47


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 48


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 49


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9.)
intro nat2(rank:9.)
rewrite IH1 in goal at 0(rank:17.)
=================================================
Progress: 50


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9.)
rewrite IH1 in goal at 0(rank:17.)
=================================================
Progress: 51


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9.)
=================================================
Progress: 52


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9.)
=================================================
Progress: 53


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 54


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
original goal
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
lemma
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
tactics
assert forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
induction any_list1
reflexivity
simpl in goal
intro nat2
rewrite IH1 in goal at 0
reflexivity
Deduplication: 3
Tactic List : 6
intro nat1(rank:7.)
rewrite lemma4 in goal at 1(rank:15.)
rewrite lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 0(rank:15.)
rewrite lemma4 in goal at 2(rank:23.)
intro nat2(rank:7.)
=================================================
Progress: 55


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
nat1 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat2(rank:7.)
rewrite lemma4 in goal at 1(rank:15.)
rewrite lemma4 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:15.)
rewrite lemma4 in goal at 0(rank:23.)
=================================================
Progress: 56


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 1(rank:15.)
rewrite lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 0(rank:15.)
rewrite lemma4 in goal at 2(rank:23.)
=================================================
Progress: 57


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
nat1 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
nat1 : nat
nat2 : nat
---------------------------------------
reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 1(rank:15.)
rewrite lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 0(rank:15.)
rewrite lemma4 in goal at 2(rank:23.)
=================================================
Progress: 58


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = (reverse ((Nil)) @ nat_list1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 59


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = (reverse ((Nil)) @ nat_list1)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = nat_list1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:5.)
=================================================
Progress: 60


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = nat_list1

1 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 61


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse ((reverse ((nat1::nat_list3)) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 62


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse ((reverse ((nat1::nat_list3)) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
parent
(nat1::(Nil))
lower
Cons(_, Nil())
upper
reverse(@(@(reverse(nat_list3), _), Nil()))
remove upper
Cons(nat1, Nil())
remove lower
Cons(nat1, Nil())
parent
(nat1::nat_list3)
lower
Cons(_, nat_list3)
upper
_
remove upper
nat_list3
remove lower
_
remove upper
Cons(nat1, nat_list3)
remove lower
Cons(nat1, _)
remove upper
Cons(nat1, Cons(nat2, nat_list4))
remove lower
Cons(nat1, Cons(nat2, _))
remove upper
Cons(nat1, Cons(nat2, Cons(nat3, nat_list5)))
remove lower
Cons(nat1, Cons(nat2, Cons(nat3, _)))
validate generalize_common_subterm_goal
Prop: reverse (((reverse ((ZERO::(Nil))) @ (ZERO::(Nil))) @ (Nil))) = (ZERO::(ZERO::(Nil)))
Prop: reverse (((reverse ((SUCC (SUCC (SUCC (SUCC (ZERO))))::(ZERO::(Nil)))) @ (ZERO::(Nil))) @ (Nil))) = (ZERO::(SUCC (SUCC (SUCC (SUCC (ZERO))))::(ZERO::(Nil))))
Prop: reverse (((reverse ((ZERO::(SUCC (ZERO)::(Nil)))) @ (ZERO::(Nil))) @ (Nil))) = (ZERO::(ZERO::(SUCC (ZERO)::(Nil))))
Lemma List
forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 63


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 64


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil))) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 65


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil))) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), reverse (((reverse ((nat2::nat_list2)) @ (nat1::(Nil))) @ (Nil))) = (nat1::(nat2::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 66


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), reverse (((reverse ((nat2::nat_list2)) @ (nat1::(Nil))) @ (Nil))) = (nat1::(nat2::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::(nat2::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro nat1(rank:5.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 67


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::(nat2::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::(nat2::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5.)
=================================================
Progress: 68


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::(nat2::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
rewrite <- IH1 in goal at 0
Prop: reverse ((((2::(Nil)) @ (ZERO::(Nil))) @ (Nil))) = (ZERO::reverse (((2::(Nil)) @ (Nil))))
Prop: reverse ((((2::(Nil)) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil))) @ (Nil))) = (SUCC (SUCC (SUCC (ZERO)))::reverse (((2::(Nil)) @ (Nil))))
Prop: reverse ((((2::(4::(Nil))) @ (ZERO::(Nil))) @ (Nil))) = (ZERO::reverse (((2::(4::(Nil))) @ (Nil))))
previous tactics
simpl in goal
intro nat1
validate generalize_common_subterm_goal
Prop: reverse ((((reverse ((ZERO::(ZERO::(Nil)))) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(Nil))) @ (Nil))) = (ZERO::(SUCC (ZERO)::(ZERO::(ZERO::(Nil)))))
Prop: reverse ((((reverse ((ZERO::(ZERO::(Nil)))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (Nil))) = (ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))
Prop: reverse ((((reverse ((Nil)) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (Nil))) = (SUCC (ZERO)::(ZERO::(Nil)))
Lemma List
forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 69


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))(rank : 0.)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8.)
=================================================
Progress: 70


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8.)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((Nil) @ (Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 71


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((Nil) @ (Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((any1::any_list2) @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 72


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((any1::any_list2) @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:7.)
rewrite IH1 in goal at 0(rank:15.)
=================================================
Progress: 73


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 74


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
((nat1::reverse ((any_list2 @ (Nil)))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 75


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
((nat1::reverse ((any_list2 @ (Nil)))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
original goal
forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
lemma
forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
tactics
assert forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
induction any_list1
reflexivity
simpl in goal
intro nat1
rewrite IH1 in goal at 0
reflexivity
Deduplication: 1
Tactic List : 4
rewrite lemma3 in goal at 1(rank:13.)
rewrite lemma3 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 0(rank:13.)
rewrite lemma3 in goal at 2(rank:21.)
=================================================
Progress: 76


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::(nat2::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: reverse ((((2::(2::(Nil))) @ (ZERO::(Nil))) @ (Nil))) = (ZERO::reverse (((2::(2::(Nil))) @ (Nil))))
Prop: reverse ((((Nil) @ (ZERO::(Nil))) @ (Nil))) = (ZERO::reverse (((Nil) @ (Nil))))
Prop: reverse ((((Nil) @ (ZERO::(Nil))) @ (Nil))) = (ZERO::reverse (((Nil) @ (Nil))))
previous tactics
simpl in goal
parent
(nat2::(Nil))
lower
Cons(_, Nil())
upper
reverse(@(@(@(reverse(nat_list2), _), Cons(nat1, Nil())), Nil()))
remove upper
Cons(nat2, Nil())
remove lower
Cons(nat2, Nil())
parent
(nat2::nat_list2)
lower
Cons(_, nat_list2)
upper
Cons(nat1, _)
remove upper
Cons(nat2, nat_list2)
remove lower
Cons(nat2, _)
remove upper
Cons(nat2, Cons(nat3, nat_list3))
remove lower
Cons(nat2, Cons(nat3, _))
remove upper
Cons(nat2, Cons(nat3, Cons(nat4, nat_list4)))
remove lower
Cons(nat2, Cons(nat3, Cons(nat4, _)))
validate generalize_common_subterm_goal
Prop: reverse ((((reverse ((Nil)) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(Nil))) @ (Nil))) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: reverse ((((reverse ((Nil)) @ (SUCC (SUCC (ZERO))::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (Nil))) = (SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil)))
Prop: reverse ((((reverse ((Nil)) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(Nil))) @ (Nil))) = (ZERO::(SUCC (ZERO)::(Nil)))
=================================================
Progress: 77


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
(nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil)))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 78


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
(nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil)))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
original goal
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
lemma
forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
tactics
assert forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
induction nat_list1
reflexivity
simpl in goal
intro nat1
rewrite <- IH1 in goal at 0
assert forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
induction any_list1
reflexivity
simpl in goal
intro nat1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
Deduplication: 3
Tactic List : 5
rewrite lemma3 in goal at 0(rank:12.)
rewrite <- lemma4 in goal at 0(rank:12.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 2(rank:12.)
rewrite lemma4 in goal at 0(rank:12.)
=================================================
Progress: 79


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
(nat1::reverse ((reverse (nat_list3) @ (Nil)))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 0(rank:20.)
=================================================
Progress: 80


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
(nat1::nat_list3) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 81


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
(nat1::nat_list3) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = (reverse ((nat1::nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 5
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 82


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = (reverse ((nat1::nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
induction nat_list1(rank:12.)
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
rewrite <- lemma4 in goal at 2(rank:19.)
rewrite <- IH1 in goal at 0(rank:19.)
=================================================
Progress: 83


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 84


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 85


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: reverse ((((1::(Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((1::(Nil)) @ (ZERO::(Nil)))))
Prop: reverse ((((5::(4::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((5::(4::(Nil))) @ (SUCC (ZERO)::(Nil)))))
Prop: reverse ((((Nil) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((Nil) @ (ZERO::(Nil)))))
previous tactics
simpl in goal
parent
(nat4::(Nil))
lower
Cons(_, Nil())
upper
reverse(@(@(@(@(reverse(nat_list2), _), Cons(nat3, Nil())), Cons(nat1, Nil())), Cons(nat2, Nil())))
remove upper
Cons(nat4, Nil())
remove lower
Cons(nat4, Nil())
parent
(nat4::nat_list2)
lower
Cons(_, nat_list2)
upper
Cons(nat2, Cons(nat1, Cons(nat3, _)))
remove upper
Cons(nat4, nat_list2)
remove lower
Cons(nat4, _)
remove upper
Cons(nat4, Cons(nat5, nat_list3))
remove lower
Cons(nat4, Cons(nat5, _))
remove upper
Cons(nat4, Cons(nat5, Cons(nat6, nat_list4)))
remove lower
Cons(nat4, Cons(nat5, Cons(nat6, _)))
validate generalize_common_subterm_goal
Prop: reverse (((((reverse ((SUCC (SUCC (SUCC (ZERO)))::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(ZERO::(ZERO::(ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil))))))
Prop: reverse (((((reverse ((Nil)) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (SUCC (SUCC (ZERO))::(Nil)))) = (SUCC (SUCC (ZERO))::(ZERO::(ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil)))))
Prop: reverse (((((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (SUCC (ZERO)::(Nil)))) = (SUCC (ZERO)::(SUCC (ZERO)::(ZERO::(ZERO::(Nil)))))
=================================================
Progress: 86


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
rewrite <- IH1 in goal at 0
Prop: reverse ((((Nil) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((Nil) @ (ZERO::(Nil)))))
Prop: reverse ((((Nil) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((Nil) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil)))))
Prop: reverse ((((Nil) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((Nil) @ (ZERO::(Nil)))))
previous tactics
simpl in goal
intro nat1
validate generalize_common_subterm_goal
Prop: reverse (((((reverse ((ZERO::(ZERO::(SUCC (ZERO)::(Nil))))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (ZERO)::(Nil))))))))
Prop: reverse (((((reverse ((Nil)) @ (SUCC (SUCC (ZERO))::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil)))))
Prop: reverse (((((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))
=================================================
Progress: 87


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
rewrite <- IH1 in goal at 0
Prop: reverse ((((Nil) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((Nil) @ (ZERO::(Nil)))))
Prop: reverse ((((Nil) @ (ZERO::(Nil))) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil)))) = (SUCC (SUCC (SUCC (ZERO)))::reverse (((Nil) @ (ZERO::(Nil)))))
Prop: reverse ((((Nil) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((Nil) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil)))))
previous tactics
simpl in goal
intro nat2
validate generalize_common_subterm_goal
Prop: reverse (((((reverse ((ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(Nil))))))
Prop: reverse (((((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))
Prop: reverse (((((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(SUCC (ZERO)::(ZERO::(ZERO::(Nil)))))
=================================================
Progress: 88


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat2
rewrite <- IH1 in goal at 0
Prop: reverse ((((3::(1::(3::(3::(8::(7::(7::(3::(5::(Nil)))))))))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((3::(1::(3::(3::(8::(7::(7::(3::(5::(Nil)))))))))) @ (ZERO::(Nil)))))
Prop: reverse ((((Nil) @ (SUCC (SUCC (ZERO))::(Nil))) @ (SUCC (ZERO)::(Nil)))) = (SUCC (ZERO)::reverse (((Nil) @ (SUCC (SUCC (ZERO))::(Nil)))))
Prop: reverse ((((Nil) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::reverse (((Nil) @ (ZERO::(Nil)))))
previous tactics
simpl in goal
intro nat1
intro nat2
validate generalize_common_subterm_goal
Prop: reverse (((((reverse ((Nil)) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (SUCC (SUCC (ZERO))::(Nil)))) = (SUCC (SUCC (ZERO))::(ZERO::(ZERO::(SUCC (ZERO)::(Nil)))))
Prop: reverse (((((reverse ((Nil)) @ (ZERO::(Nil))) @ (SUCC (SUCC (ZERO))::(Nil))) @ (ZERO::(Nil))) @ (SUCC (SUCC (ZERO))::(Nil)))) = (SUCC (SUCC (ZERO))::(ZERO::(SUCC (SUCC (ZERO))::(ZERO::(Nil)))))
Prop: reverse (((((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))) = (ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))
=================================================
Progress: 89


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma4 in goal at 1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 90


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
original goal
forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
lemma
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
tactics
assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
induction nat_list1
reflexivity
simpl in goal
intro nat3
rewrite <- IH1 in goal at 0
assert forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
induction any_list1
reflexivity
simpl in goal
intro nat2
rewrite IH1 in goal at 0
reflexivity
rewrite lemma4 in goal at 1
reflexivity
Deduplication: 15
Tactic List : 4
intro nat1(rank:6.)
rewrite lemma4 in goal at 0(rank:14.)
rewrite lemma5 in goal at 0(rank:14.)
rewrite <- lemma5 in goal at 0(rank:14.)
=================================================
Progress: 91


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma4 in goal at 0(rank:14.)
rewrite lemma5 in goal at 0(rank:14.)
rewrite <- lemma5 in goal at 0(rank:14.)
=================================================
Progress: 92


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), (nat2::reverse (((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:14.)
rewrite lemma4 in goal at 0(rank:14.)
rewrite <- lemma5 in goal at 0(rank:14.)
=================================================
Progress: 93


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), (nat2::(nat1::(nat3::nat_list3))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 94


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), (nat2::(nat1::(nat3::nat_list3))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = ((reverse ((nat4::nat_list4)) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 7
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 95


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = ((reverse ((nat4::nat_list4)) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro nat1(rank:5.)
intro nat2(rank:5.)
=================================================
Progress: 96


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
nat1 : nat
---------------------------------------
forall (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:5.)
=================================================
Progress: 97


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
rewrite IH1 in goal at 0
reflexivity
rewrite lemma4 in goal at 1
reflexivity
rewrite lemma5 in goal at 0
reflexivity
simpl in goal
intro nat2
validate generalize_common_subterm_goal
Prop: reverse ((((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(Nil))))) = (((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(Nil))))
Prop: reverse ((((reverse ((SUCC (ZERO)::(SUCC (ZERO)::(Nil)))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(Nil))))) = (((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(Nil))))))
Prop: reverse ((((reverse ((Nil)) @ (ZERO::(Nil))) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil))) @ (ZERO::(ZERO::(Nil))))) = (((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil))))
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 98


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:8.)
=================================================
Progress: 99


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
nat1 : nat
---------------------------------------
forall (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
nat1 : nat
nat2 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
rewrite IH1 in goal at 0
reflexivity
rewrite lemma4 in goal at 1
reflexivity
rewrite lemma5 in goal at 0
reflexivity
simpl in goal
intro nat1
intro nat2
validate generalize_common_subterm_goal
Prop: reverse ((((reverse ((ZERO::(ZERO::(ZERO::(Nil))))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(Nil))))) = (((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))))
Prop: reverse ((((reverse ((ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(Nil))))) = (((reverse ((Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(ZERO::(Nil)))))
Prop: reverse ((((reverse ((ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil))))) = (((reverse ((Nil)) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(ZERO::(Nil)))))
=================================================
Progress: 100


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse ((Nil)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 101


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse ((Nil)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:9.)
=================================================
Progress: 102


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse ((Nil)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse ((Nil)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 103


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse ((Nil)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse ((Nil)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse ((nat5::nat_list3)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse ((nat5::nat_list3)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 104


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse ((nat5::nat_list3)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse ((nat5::nat_list3)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat1(rank:8.)
intro nat3(rank:8.)
intro nat4(rank:8.)
rewrite IH1 in goal at 0(rank:24.)
intro nat2(rank:8.)
=================================================
Progress: 105


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat2(rank:8.)
intro nat3(rank:8.)
intro nat4(rank:8.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 106


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat3(rank:8.)
intro nat4(rank:8.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 107


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat4(rank:8.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 108


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 109


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat3(rank:8.)
intro nat4(rank:8.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 110


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat4(rank:8.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 111


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 112


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat4(rank:8.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 113


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 114


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 115


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat4
rewrite IH1 in goal at 0
Prop: (((8::(Nil)) @ (SUCC (ZERO)::(ZERO::(Nil)))) @ (ZERO::(Nil))) = (((8::(Nil)) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(ZERO::(Nil))))
Prop: (((Nil) @ (SUCC (SUCC (ZERO))::(ZERO::(Nil)))) @ (ZERO::(Nil))) = (((Nil) @ (SUCC (SUCC (ZERO))::(Nil))) @ (ZERO::(ZERO::(Nil))))
Prop: (((Nil) @ (ZERO::(ZERO::(Nil)))) @ (ZERO::(Nil))) = (((Nil) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(Nil))))
previous tactics
simpl in goal
intro nat4
Prop: (((Nil) @ (SUCC (SUCC (ZERO))::(Nil))) @ (SUCC (ZERO)::(Nil))) = ((Nil) @ (SUCC (SUCC (ZERO))::(SUCC (ZERO)::(Nil))))
Prop: (((Nil) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil))) = ((Nil) @ (ZERO::(SUCC (ZERO)::(Nil))))
Prop: (((Nil) @ (SUCC (SUCC (ZERO))::(Nil))) @ (ZERO::(Nil))) = ((Nil) @ (SUCC (SUCC (ZERO))::(ZERO::(Nil))))
Lemma List
forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 116


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))(rank : 0.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10.)
=================================================
Progress: 117


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))(rank : 0.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10.)
=================================================
Progress: 118


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat4(rank:8.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 119


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 120


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 121


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat4
rewrite IH1 in goal at 0
Prop: (((Nil) @ (ZERO::(ZERO::(Nil)))) @ (ZERO::(Nil))) = (((Nil) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(Nil))))
Prop: (((Nil) @ (ZERO::(SUCC (SUCC (ZERO))::(Nil)))) @ (ZERO::(Nil))) = (((Nil) @ (ZERO::(Nil))) @ (SUCC (SUCC (ZERO))::(ZERO::(Nil))))
Prop: (((Nil) @ (SUCC (ZERO)::(ZERO::(Nil)))) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil))) = (((Nil) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil))))
previous tactics
simpl in goal
intro nat1
intro nat4
Prop: (((0::(5::(6::(Nil)))) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil))) = ((0::(5::(6::(Nil)))) @ (ZERO::(SUCC (ZERO)::(Nil))))
Prop: (((7::(Nil)) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil))) = ((7::(Nil)) @ (ZERO::(SUCC (ZERO)::(Nil))))
Prop: (((Nil) @ (ZERO::(Nil))) @ (ZERO::(Nil))) = ((Nil) @ (ZERO::(ZERO::(Nil))))
=================================================
Progress: 122


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 123


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
intro nat4
rewrite IH1 in goal at 0
Prop: (((Nil) @ (ZERO::(ZERO::(Nil)))) @ (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))::(Nil))) = (((Nil) @ (ZERO::(Nil))) @ (ZERO::(SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))::(Nil))))
Prop: (((Nil) @ (ZERO::(SUCC (ZERO)::(Nil)))) @ (ZERO::(Nil))) = (((Nil) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(ZERO::(Nil))))
Prop: (((Nil) @ (ZERO::(ZERO::(Nil)))) @ (ZERO::(Nil))) = (((Nil) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(Nil))))
previous tactics
simpl in goal
intro nat2
intro nat4
Prop: (((Nil) @ (SUCC (ZERO)::(Nil))) @ (SUCC (ZERO)::(Nil))) = ((Nil) @ (SUCC (ZERO)::(SUCC (ZERO)::(Nil))))
Prop: (((0::(Nil)) @ (ZERO::(Nil))) @ (ZERO::(Nil))) = ((0::(Nil)) @ (ZERO::(ZERO::(Nil))))
Prop: (((Nil) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil))) @ (ZERO::(Nil))) = ((Nil) @ (SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil))))
=================================================
Progress: 124


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat3
intro nat4
rewrite IH1 in goal at 0
Prop: (((Nil) @ (SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil)))) @ (ZERO::(Nil))) = (((Nil) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil))) @ (ZERO::(ZERO::(Nil))))
Prop: (((Nil) @ (SUCC (ZERO)::(ZERO::(Nil)))) @ (SUCC (ZERO)::(Nil))) = (((Nil) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(SUCC (ZERO)::(Nil))))
Prop: (((Nil) @ (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))) @ (ZERO::(Nil))) = (((Nil) @ (SUCC (ZERO)::(Nil))) @ (SUCC (ZERO)::(ZERO::(Nil))))
previous tactics
simpl in goal
intro nat3
intro nat4
Prop: (((Nil) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil))) = ((Nil) @ (ZERO::(SUCC (ZERO)::(Nil))))
Prop: (((3::(Nil)) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil))) @ (SUCC (SUCC (ZERO))::(Nil))) = ((3::(Nil)) @ (SUCC (SUCC (SUCC (ZERO)))::(SUCC (SUCC (ZERO))::(Nil))))
Prop: (((Nil) @ (ZERO::(Nil))) @ (ZERO::(Nil))) = ((Nil) @ (ZERO::(ZERO::(Nil))))
=================================================
Progress: 125


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
(((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 126


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat2
intro nat4
rewrite IH1 in goal at 0
Prop: (((Nil) @ (ZERO::(ZERO::(Nil)))) @ (SUCC (ZERO)::(Nil))) = (((Nil) @ (ZERO::(Nil))) @ (ZERO::(SUCC (ZERO)::(Nil))))
Prop: (((Nil) @ (SUCC (SUCC (ZERO))::(ZERO::(Nil)))) @ (ZERO::(Nil))) = (((Nil) @ (SUCC (SUCC (ZERO))::(Nil))) @ (ZERO::(ZERO::(Nil))))
Prop: (((Nil) @ (SUCC (ZERO)::(ZERO::(Nil)))) @ (ZERO::(Nil))) = (((Nil) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(ZERO::(Nil))))
previous tactics
simpl in goal
intro nat1
intro nat2
intro nat4
Prop: (((Nil) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(Nil))) = ((Nil) @ (SUCC (ZERO)::(ZERO::(Nil))))
Prop: (((Nil) @ (ZERO::(Nil))) @ (ZERO::(Nil))) = ((Nil) @ (ZERO::(ZERO::(Nil))))
Prop: (((Nil) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil))) = ((Nil) @ (ZERO::(SUCC (ZERO)::(Nil))))
=================================================
Progress: 127


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat3
intro nat4
rewrite IH1 in goal at 0
Prop: (((Nil) @ (ZERO::(ZERO::(Nil)))) @ (ZERO::(Nil))) = (((Nil) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(Nil))))
Prop: (((Nil) @ (ZERO::(ZERO::(Nil)))) @ (SUCC (SUCC (ZERO))::(Nil))) = (((Nil) @ (ZERO::(Nil))) @ (ZERO::(SUCC (SUCC (ZERO))::(Nil))))
Prop: (((8::(Nil)) @ (ZERO::(ZERO::(Nil)))) @ (ZERO::(Nil))) = (((8::(Nil)) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(Nil))))
previous tactics
simpl in goal
intro nat1
intro nat3
intro nat4
Prop: (((Nil) @ (ZERO::(Nil))) @ (ZERO::(Nil))) = ((Nil) @ (ZERO::(ZERO::(Nil))))
Prop: (((7::(3::(0::(Nil)))) @ (SUCC (ZERO)::(Nil))) @ (SUCC (ZERO)::(Nil))) = ((7::(3::(0::(Nil)))) @ (SUCC (ZERO)::(SUCC (ZERO)::(Nil))))
Prop: (((Nil) @ (ZERO::(Nil))) @ (ZERO::(Nil))) = ((Nil) @ (ZERO::(ZERO::(Nil))))
=================================================
Progress: 128


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
intro nat3
intro nat4
rewrite IH1 in goal at 0
Prop: (((Nil) @ (SUCC (ZERO)::(ZERO::(Nil)))) @ (SUCC (ZERO)::(Nil))) = (((Nil) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(SUCC (ZERO)::(Nil))))
Prop: (((Nil) @ (SUCC (ZERO)::(ZERO::(Nil)))) @ (SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil))) = (((Nil) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil))))
Prop: (((Nil) @ (ZERO::(ZERO::(Nil)))) @ (ZERO::(Nil))) = (((Nil) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(Nil))))
previous tactics
simpl in goal
intro nat2
intro nat3
intro nat4
Prop: (((Nil) @ (SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil))) @ (SUCC (ZERO)::(Nil))) = ((Nil) @ (SUCC (SUCC (SUCC (SUCC (ZERO))))::(SUCC (ZERO)::(Nil))))
Prop: (((Nil) @ (SUCC (SUCC (ZERO))::(Nil))) @ (ZERO::(Nil))) = ((Nil) @ (SUCC (SUCC (ZERO))::(ZERO::(Nil))))
Prop: (((Nil) @ (ZERO::(Nil))) @ (ZERO::(Nil))) = ((Nil) @ (ZERO::(ZERO::(Nil))))
=================================================
Progress: 129


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
(((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat2
intro nat3
intro nat4
rewrite IH1 in goal at 0
Prop: (((0::(5::(Nil))) @ (ZERO::(ZERO::(Nil)))) @ (SUCC (ZERO)::(Nil))) = (((0::(5::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(SUCC (ZERO)::(Nil))))
Prop: (((4::(Nil)) @ (SUCC (ZERO)::(ZERO::(Nil)))) @ (ZERO::(Nil))) = (((4::(Nil)) @ (SUCC (ZERO)::(Nil))) @ (ZERO::(ZERO::(Nil))))
Prop: (((Nil) @ (ZERO::(ZERO::(Nil)))) @ (ZERO::(Nil))) = (((Nil) @ (ZERO::(Nil))) @ (ZERO::(ZERO::(Nil))))
previous tactics
simpl in goal
intro nat1
intro nat2
intro nat3
intro nat4
Prop: (((0::(4::(7::(0::(Nil))))) @ (ZERO::(Nil))) @ (ZERO::(Nil))) = ((0::(4::(7::(0::(Nil))))) @ (ZERO::(ZERO::(Nil))))
Prop: (((Nil) @ (ZERO::(Nil))) @ (ZERO::(Nil))) = ((Nil) @ (ZERO::(ZERO::(Nil))))
Prop: (((Nil) @ (SUCC (SUCC (ZERO))::(Nil))) @ (ZERO::(Nil))) = ((Nil) @ (SUCC (SUCC (ZERO))::(ZERO::(Nil))))
=================================================
Progress: 130


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), (((Nil) @ (nat1::(Nil))) @ (nat2::(Nil))) = ((Nil) @ (nat1::(nat2::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 131


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), (((Nil) @ (nat1::(Nil))) @ (nat2::(Nil))) = ((Nil) @ (nat1::(nat2::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), ((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list2 @ (nat1::(nat2::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil))) = ((any1::any_list2) @ (nat1::(nat2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 132


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), ((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list2 @ (nat1::(nat2::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil))) = ((any1::any_list2) @ (nat1::(nat2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), ((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list2 @ (nat1::(nat2::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (any1::((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (any1::(any_list2 @ (nat1::(nat2::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:9.)
intro nat2(rank:9.)
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 133


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), ((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list2 @ (nat1::(nat2::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (any1::((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (any1::(any_list2 @ (nat1::(nat2::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), ((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list2 @ (nat1::(nat2::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (any1::((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (any1::(any_list2 @ (nat1::(nat2::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat2(rank:9.)
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 134


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), ((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list2 @ (nat1::(nat2::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (any1::((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (any1::(any_list2 @ (nat1::(nat2::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), ((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list2 @ (nat1::(nat2::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (any1::((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (any1::(any_list2 @ (nat1::(nat2::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 135


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), ((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list2 @ (nat1::(nat2::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (any1::((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (any1::(any_list2 @ (nat1::(nat2::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), ((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list2 @ (nat1::(nat2::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(any1::((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (any1::(any_list2 @ (nat1::(nat2::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 136


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 137


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 138


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro nat1(rank:9.)
intro nat3(rank:9.)
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
intro nat2(rank:9.)
=================================================
Progress: 139


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat2(rank:9.)
intro nat3(rank:9.)
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 140


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9.)
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 141


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 142


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9.)
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 143


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 144


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 145


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
(any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 146


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), ((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list2 @ (nat1::(nat2::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (any1::((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (any1::(any_list2 @ (nat1::(nat2::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17.)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), ((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list2 @ (nat1::(nat2::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (any1::(any_list2 @ (nat1::(nat2::(Nil))))) = (any1::(any_list2 @ (nat1::(nat2::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 147


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), ((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list2 @ (nat1::(nat2::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (any1::(any_list2 @ (nat1::(nat2::(Nil))))) = (any1::(any_list2 @ (nat1::(nat2::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
original goal
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
lemma
forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
tactics
assert forall (any_list1:any list) (nat1:nat) (nat2:nat), ((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil))) = (any_list1 @ (nat1::(nat2::(Nil))))
induction any_list1
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
Deduplication: 7
Tactic List : 8
intro nat1(rank:8.)
intro nat3(rank:8.)
rewrite lemma6 in goal at 1(rank:16.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite IH1 in goal at 0(rank:24.)
intro nat2(rank:8.)
=================================================
Progress: 148


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro nat2(rank:8.)
rewrite lemma6 in goal at 1(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
intro nat3(rank:8.)
=================================================
Progress: 149


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat3(rank:8.)
rewrite lemma6 in goal at 1(rank:16.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 150


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma6 in goal at 1(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
=================================================
Progress: 151


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat3(rank:8.)
rewrite lemma6 in goal at 1(rank:16.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 152


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma6 in goal at 1(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
=================================================
Progress: 153


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma6 in goal at 1(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
=================================================
Progress: 154


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
(((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma6 in goal at 1(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
=================================================
Progress: 155


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 156


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 63
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 157


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:8.)
=================================================
Progress: 158


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (((reverse ((Nil)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 159


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (((reverse ((Nil)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
intro nat1(rank:8.)
intro nat3(rank:8.)
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
intro nat4(rank:8.)
intro nat2(rank:8.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 160


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
intro nat2(rank:8.)
intro nat4(rank:8.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite lemma6 in goal at 0(rank:16.)
intro nat3(rank:8.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 161


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat3(rank:8.)
rewrite lemma6 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 2(rank:16.)
intro nat4(rank:8.)
=================================================
Progress: 162


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro nat4(rank:8.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:16.)
=================================================
Progress: 163


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite lemma6 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 2(rank:16.)
=================================================
Progress: 164


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat3(rank:8.)
rewrite lemma6 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 2(rank:16.)
intro nat4(rank:8.)
=================================================
Progress: 165


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro nat4(rank:8.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:16.)
=================================================
Progress: 166


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite lemma6 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 2(rank:16.)
=================================================
Progress: 167


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro nat4(rank:8.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:16.)
=================================================
Progress: 168


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite lemma6 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 2(rank:16.)
=================================================
Progress: 169


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite lemma6 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 2(rank:16.)
=================================================
Progress: 170


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro nat4(rank:8.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:16.)
=================================================
Progress: 171


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite lemma6 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 2(rank:16.)
=================================================
Progress: 172


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite lemma6 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 2(rank:16.)
=================================================
Progress: 173


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite lemma6 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 2(rank:16.)
=================================================
Progress: 174


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite lemma6 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 2(rank:16.)
=================================================
Progress: 175


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 176


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 177


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 178


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
intro nat1(rank:8.)
intro nat3(rank:8.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 1(rank:24.)
rewrite lemma6 in goal at 2(rank:24.)
intro nat4(rank:8.)
intro nat2(rank:8.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 179


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
intro nat2(rank:8.)
intro nat4(rank:8.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 1(rank:24.)
rewrite lemma4 in goal at 0(rank:24.)
intro nat3(rank:8.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 180


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat3(rank:8.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 1(rank:24.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
intro nat4(rank:8.)
=================================================
Progress: 181


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro nat4(rank:8.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 1(rank:24.)
rewrite lemma4 in goal at 0(rank:24.)
=================================================
Progress: 182


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 1(rank:24.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 183


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat3(rank:8.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 1(rank:24.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
intro nat4(rank:8.)
=================================================
Progress: 184


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro nat4(rank:8.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 1(rank:24.)
rewrite lemma4 in goal at 0(rank:24.)
=================================================
Progress: 185


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 1(rank:24.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 186


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro nat4(rank:8.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 1(rank:24.)
rewrite lemma4 in goal at 0(rank:24.)
=================================================
Progress: 187


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 1(rank:24.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 188


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 1(rank:24.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 189


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro nat4(rank:8.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 1(rank:24.)
rewrite lemma4 in goal at 0(rank:24.)
=================================================
Progress: 190


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 1(rank:24.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 191


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 1(rank:24.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 192


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 1(rank:24.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 193


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 1(rank:24.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 194


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 195


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 196


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 197


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 198


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 199


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 200


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 201


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 202


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 203


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 204


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 205


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 206


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 207


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 208


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 209


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 210


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 211


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 212


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 213


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 214


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 215


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 216


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 217


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 218


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 219


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 220


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 221


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 222


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 223


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 224


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 225


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 226


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 227


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 228


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 229


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 230


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 231


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 232


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 233


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 234


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 235


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 236


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 237


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 238


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 239


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 240


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 241


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 242


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 243


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 244


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 245


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 246


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 247


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 248


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 249


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 250


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 251


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 252


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 253


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 254


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 255


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 256


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 257


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 258


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 259


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 260


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 261


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 262


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 263


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 264


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 265


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 266


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 267


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16.)
rewrite <- lemma5 in goal at 2(rank:16.)
rewrite <- lemma5 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 268


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 269


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 270


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 271


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma6 in goal at 2(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 272


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 273


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat1(rank:8.)
intro nat3(rank:8.)
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
intro nat4(rank:8.)
intro nat2(rank:8.)
=================================================
Progress: 274


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro nat2(rank:8.)
intro nat4(rank:8.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:16.)
intro nat3(rank:8.)
=================================================
Progress: 275


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat3(rank:8.)
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
intro nat4(rank:8.)
=================================================
Progress: 276


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat4(rank:8.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:16.)
=================================================
Progress: 277


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 278


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat3(rank:8.)
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
intro nat4(rank:8.)
=================================================
Progress: 279


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat4(rank:8.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:16.)
=================================================
Progress: 280


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 281


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat4(rank:8.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:16.)
=================================================
Progress: 282


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 283


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 284


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat4(rank:8.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:16.)
=================================================
Progress: 285


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 286


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 287


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 288


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 3(rank:24.)
=================================================
Progress: 289


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(nat1::(Nil)))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 290


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
=================================================
Progress: 291


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 292


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat1(rank:8.)
intro nat3(rank:8.)
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
intro nat4(rank:8.)
intro nat2(rank:8.)
=================================================
Progress: 293


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro nat2(rank:8.)
intro nat4(rank:8.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:16.)
intro nat3(rank:8.)
=================================================
Progress: 294


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat3(rank:8.)
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
intro nat4(rank:8.)
=================================================
Progress: 295


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat4(rank:8.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:16.)
=================================================
Progress: 296


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 297


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat3(rank:8.)
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
intro nat4(rank:8.)
=================================================
Progress: 298


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat4(rank:8.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:16.)
=================================================
Progress: 299


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 300


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat4(rank:8.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:16.)
=================================================
Progress: 301


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 302


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 303


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat4(rank:8.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite <- lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 0(rank:16.)
=================================================
Progress: 304


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 305


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 306


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 307


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16.)
rewrite lemma6 in goal at 2(rank:24.)
rewrite lemma6 in goal at 3(rank:16.)
rewrite <- lemma6 in goal at 0(rank:16.)
=================================================
Progress: 308


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse ((((reverse (nat_list3) @ (nat5::(nat3::(Nil)))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma6 in goal at 0(rank:24.)
rewrite <- lemma6 in goal at 0(rank:24.)
=================================================
Progress: 309


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 310


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = (((reverse ((nat6::nat_list4)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 578
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 311


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = (((reverse ((nat6::nat_list4)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 11
intro nat1(rank:7.)
intro nat3(rank:7.)
rewrite lemma6 in goal at 0(rank:23.)
rewrite lemma6 in goal at 1(rank:23.)
rewrite lemma6 in goal at 2(rank:23.)
rewrite lemma6 in goal at 3(rank:23.)
intro nat4(rank:7.)
intro nat2(rank:7.)
rewrite <- lemma5 in goal at 0(rank:23.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite <- lemma5 in goal at 2(rank:23.)
=================================================
Progress: 312


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
intro nat2(rank:7.)
intro nat4(rank:7.)
rewrite lemma6 in goal at 1(rank:23.)
rewrite lemma6 in goal at 2(rank:23.)
rewrite lemma6 in goal at 3(rank:23.)
rewrite <- lemma5 in goal at 0(rank:23.)
rewrite lemma6 in goal at 0(rank:23.)
intro nat3(rank:7.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite <- lemma5 in goal at 2(rank:23.)
=================================================
Progress: 313


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
intro nat3(rank:7.)
rewrite lemma6 in goal at 0(rank:23.)
rewrite lemma6 in goal at 2(rank:23.)
rewrite lemma6 in goal at 3(rank:23.)
rewrite <- lemma5 in goal at 0(rank:23.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite lemma6 in goal at 1(rank:23.)
intro nat4(rank:7.)
rewrite <- lemma5 in goal at 2(rank:23.)
=================================================
Progress: 314


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat4(rank:7.)
rewrite lemma6 in goal at 1(rank:23.)
rewrite lemma6 in goal at 3(rank:23.)
rewrite <- lemma5 in goal at 0(rank:23.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite <- lemma5 in goal at 2(rank:23.)
rewrite lemma6 in goal at 2(rank:23.)
rewrite lemma6 in goal at 0(rank:23.)
=================================================
Progress: 315


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma6 in goal at 0(rank:23.)
rewrite lemma6 in goal at 2(rank:23.)
rewrite <- lemma5 in goal at 0(rank:23.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite <- lemma5 in goal at 2(rank:23.)
rewrite lemma6 in goal at 3(rank:23.)
rewrite lemma6 in goal at 1(rank:23.)
=================================================
Progress: 316


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
intro nat3(rank:7.)
rewrite lemma6 in goal at 0(rank:23.)
rewrite lemma6 in goal at 2(rank:23.)
rewrite lemma6 in goal at 3(rank:23.)
rewrite <- lemma5 in goal at 0(rank:23.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite lemma6 in goal at 1(rank:23.)
intro nat4(rank:7.)
rewrite <- lemma5 in goal at 2(rank:23.)
=================================================
Progress: 317


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat4(rank:7.)
rewrite lemma6 in goal at 1(rank:23.)
rewrite lemma6 in goal at 3(rank:23.)
rewrite <- lemma5 in goal at 0(rank:23.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite <- lemma5 in goal at 2(rank:23.)
rewrite lemma6 in goal at 2(rank:23.)
rewrite lemma6 in goal at 0(rank:23.)
=================================================
Progress: 318


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma6 in goal at 0(rank:23.)
rewrite lemma6 in goal at 2(rank:23.)
rewrite <- lemma5 in goal at 0(rank:23.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite <- lemma5 in goal at 2(rank:23.)
rewrite lemma6 in goal at 3(rank:23.)
rewrite lemma6 in goal at 1(rank:23.)
=================================================
Progress: 319


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat4(rank:7.)
rewrite lemma6 in goal at 1(rank:23.)
rewrite lemma6 in goal at 3(rank:23.)
rewrite <- lemma5 in goal at 0(rank:23.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite <- lemma5 in goal at 2(rank:23.)
rewrite lemma6 in goal at 2(rank:23.)
rewrite lemma6 in goal at 0(rank:23.)
=================================================
Progress: 320


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma6 in goal at 0(rank:23.)
rewrite lemma6 in goal at 2(rank:23.)
rewrite <- lemma5 in goal at 0(rank:23.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite <- lemma5 in goal at 2(rank:23.)
rewrite lemma6 in goal at 3(rank:23.)
rewrite lemma6 in goal at 1(rank:23.)
=================================================
Progress: 321


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma6 in goal at 0(rank:23.)
rewrite lemma6 in goal at 2(rank:23.)
rewrite <- lemma5 in goal at 0(rank:23.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite <- lemma5 in goal at 2(rank:23.)
rewrite lemma6 in goal at 3(rank:23.)
rewrite lemma6 in goal at 1(rank:23.)
=================================================
Progress: 322


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat4(rank:7.)
rewrite lemma6 in goal at 1(rank:23.)
rewrite lemma6 in goal at 3(rank:23.)
rewrite <- lemma5 in goal at 0(rank:23.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite <- lemma5 in goal at 2(rank:23.)
rewrite lemma6 in goal at 2(rank:23.)
rewrite lemma6 in goal at 0(rank:23.)
=================================================
Progress: 323


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma6 in goal at 0(rank:23.)
rewrite lemma6 in goal at 2(rank:23.)
rewrite <- lemma5 in goal at 0(rank:23.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite <- lemma5 in goal at 2(rank:23.)
rewrite lemma6 in goal at 3(rank:23.)
rewrite lemma6 in goal at 1(rank:23.)
=================================================
Progress: 324


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma6 in goal at 0(rank:23.)
rewrite lemma6 in goal at 2(rank:23.)
rewrite <- lemma5 in goal at 0(rank:23.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite <- lemma5 in goal at 2(rank:23.)
rewrite lemma6 in goal at 3(rank:23.)
rewrite lemma6 in goal at 1(rank:23.)
=================================================
Progress: 325


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma6 in goal at 0(rank:23.)
rewrite lemma6 in goal at 2(rank:23.)
rewrite <- lemma5 in goal at 0(rank:23.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite <- lemma5 in goal at 2(rank:23.)
rewrite lemma6 in goal at 3(rank:23.)
rewrite lemma6 in goal at 1(rank:23.)
=================================================
Progress: 326


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
nat6 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))
Inductive2 : nat_list2 = (nat6::nat_list4)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(nat6::nat_list4))))) = ((((reverse (nat_list4) @ (nat6::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma6 in goal at 0(rank:23.)
rewrite lemma6 in goal at 2(rank:23.)
rewrite <- lemma5 in goal at 0(rank:23.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite <- lemma5 in goal at 2(rank:23.)
rewrite lemma6 in goal at 3(rank:23.)
rewrite lemma6 in goal at 1(rank:23.)
=================================================
Progress: 327


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
rewrite <- lemma4 in goal at 2(rank:19.)
=================================================
Progress: 328


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:19.)
rewrite lemma3 in goal at 2(rank:19.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 1(rank:19.)
rewrite lemma3 in goal at 1(rank:19.)
=================================================
Progress: 329


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite lemma3 in goal at 0(rank:11.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 1(rank:19.)
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
induction nat_list1(rank:12.)
=================================================
Progress: 330


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
induction nat_list1(rank:12.)
rewrite <- IH1 in goal at 1(rank:19.)
rewrite <- IH1 in goal at 2(rank:19.)
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
rewrite <- IH1 in goal at 0(rank:19.)
=================================================
Progress: 331


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 332


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite lemma3 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite lemma4 in goal at 0(rank:20.)
=================================================
Progress: 333


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 334


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 335


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 336


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (nat_list3))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
=================================================
Progress: 337


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
=================================================
Progress: 338


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (nat_list3))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (nat_list3))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
=================================================
Progress: 339


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:3.)
=================================================
Progress: 340


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 341


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
induction nat_list1(rank:12.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
=================================================
Progress: 342


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 343


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 344


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:11.)
rewrite lemma3 in goal at 1(rank:19.)
rewrite lemma3 in goal at 2(rank:11.)
=================================================
Progress: 345


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = (reverse ((reverse ((nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:11.)
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
rewrite <- lemma4 in goal at 2(rank:19.)
=================================================
Progress: 346


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = (reverse ((reverse ((nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 2(rank:19.)
=================================================
Progress: 347


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = (reverse ((reverse ((nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse (reverse ((reverse ((Nil)) @ nat_list3)))))) = (reverse ((reverse ((nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 348


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse (reverse ((reverse ((Nil)) @ nat_list3)))))) = (reverse ((reverse ((nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse (reverse (nat_list3))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
induction nat_list1(rank:12.)
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
rewrite <- lemma4 in goal at 2(rank:19.)
rewrite <- IH1 in goal at 0(rank:19.)
=================================================
Progress: 349


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse (reverse (nat_list3))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse (reverse (nat_list3))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 350


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse (reverse (nat_list3))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (nat_list3))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
=================================================
Progress: 351


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (nat_list3))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (nat_list3))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
=================================================
Progress: 352


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
=================================================
Progress: 353


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma4 in goal at 0
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- lemma4 in goal at 2
validate generalize_common_subterm_goal
Prop: reverse ((reverse ((SUCC (ZERO)::(Nil))) @ (ZERO::(SUCC (ZERO)::(Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (ZERO::(Nil))) @ (Nil)))) @ (SUCC (ZERO)::(Nil)))) @ (SUCC (ZERO)::(Nil)))
Prop: reverse ((reverse ((Nil)) @ (ZERO::(Nil)))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (ZERO::(Nil))) @ (Nil)))) @ (Nil))) @ (Nil))
Prop: reverse ((reverse ((ZERO::(ZERO::(ZERO::(Nil))))) @ (ZERO::(Nil)))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (ZERO::(Nil))) @ (Nil)))) @ (Nil))) @ (ZERO::(ZERO::(ZERO::(Nil)))))
previous tactics
simpl in goal
intro nat1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma4 in goal at 0
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: reverse ((reverse ((Nil)) @ (ZERO::(ZERO::(Nil))))) = (reverse ((reverse ((ZERO::(Nil))) @ (ZERO::(Nil)))) @ (Nil))
Prop: reverse ((reverse ((ZERO::(ZERO::(Nil)))) @ (SUCC (ZERO)::(SUCC (ZERO)::(ZERO::(SUCC (ZERO)::(ZERO::(Nil)))))))) = (reverse ((reverse ((SUCC (ZERO)::(Nil))) @ (SUCC (ZERO)::(ZERO::(SUCC (ZERO)::(ZERO::(Nil))))))) @ (ZERO::(ZERO::(Nil))))
Prop: reverse ((reverse ((Nil)) @ (ZERO::(Nil)))) = (reverse ((reverse ((ZERO::(Nil))) @ (Nil))) @ (Nil))
previous tactics
simpl in goal
intro nat1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma4 in goal at 0
reflexivity
simpl in goal
validate generalize_common_subterm_goal
Prop: reverse ((reverse ((Nil)) @ (ZERO::(ZERO::(ZERO::(Nil)))))) = ((reverse ((ZERO::(ZERO::(Nil)))) @ (ZERO::(Nil))) @ (Nil))
Prop: reverse ((reverse ((Nil)) @ (SUCC (ZERO)::(ZERO::(Nil))))) = ((reverse ((ZERO::(Nil))) @ (SUCC (ZERO)::(Nil))) @ (Nil))
Prop: reverse ((reverse ((ZERO::(Nil))) @ (ZERO::(ZERO::(ZERO::(Nil)))))) = ((reverse ((ZERO::(ZERO::(Nil)))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))
Lemma List
forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 354


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 355


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 356


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 357


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 358


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 359


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), reverse ((reverse ((Nil)) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 360


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), reverse ((reverse ((Nil)) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 361


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), reverse ((reverse ((Nil)) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 362


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), reverse ((reverse ((Nil)) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), (reverse (nat_list2) @ (nat1::(Nil))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:7.)
=================================================
Progress: 363


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), reverse ((reverse ((Nil)) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), (reverse (nat_list2) @ (nat1::(Nil))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:7.)
=================================================
Progress: 364


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), reverse ((reverse ((Nil)) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), (reverse (nat_list2) @ (nat1::(Nil))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:7.)
=================================================
Progress: 365


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), (reverse (nat_list2) @ (nat1::(Nil))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat), (reverse ((Nil)) @ (nat1::(Nil))) = ((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 366


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat), (reverse ((Nil)) @ (nat1::(Nil))) = ((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), (reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))
Inductive1 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), (reverse ((nat2::nat_list3)) @ (nat1::(Nil))) = ((reverse ((nat2::nat_list3)) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 367


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), (reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))
Inductive1 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), (reverse ((nat2::nat_list3)) @ (nat1::(Nil))) = ((reverse ((nat2::nat_list3)) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), (reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))
Inductive1 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), ((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) = (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat1(rank:6.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite <- lemma4 in goal at 3(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
=================================================
Progress: 368


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), (reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))
Inductive1 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), ((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) = (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), (reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))
Inductive1 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) = (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite <- lemma4 in goal at 3(rank:22.)
=================================================
Progress: 369


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), (reverse (nat_list2) @ (nat1::(Nil))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat), (reverse ((Nil)) @ (nat1::(Nil))) = ((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 370


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat), (reverse ((Nil)) @ (nat1::(Nil))) = ((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), (reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))
Inductive1 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), (reverse ((nat2::nat_list3)) @ (nat1::(Nil))) = ((reverse ((nat2::nat_list3)) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 371


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), (reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))
Inductive1 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), (reverse ((nat2::nat_list3)) @ (nat1::(Nil))) = ((reverse ((nat2::nat_list3)) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), (reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))
Inductive1 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), ((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) = (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat1(rank:6.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite <- lemma4 in goal at 3(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
=================================================
Progress: 372


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), (reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))
Inductive1 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), ((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) = (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), (reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))
Inductive1 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) = (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite <- lemma4 in goal at 3(rank:22.)
=================================================
Progress: 373


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat_list2:nat list), (reverse (nat_list2) @ (nat1::(Nil))) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat), (reverse ((Nil)) @ (nat1::(Nil))) = ((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 374


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat), (reverse ((Nil)) @ (nat1::(Nil))) = ((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), (reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))
Inductive1 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), (reverse ((nat2::nat_list3)) @ (nat1::(Nil))) = ((reverse ((nat2::nat_list3)) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 375


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), (reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))
Inductive1 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), (reverse ((nat2::nat_list3)) @ (nat1::(Nil))) = ((reverse ((nat2::nat_list3)) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), (reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))
Inductive1 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), ((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) = (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat1(rank:6.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite <- lemma4 in goal at 3(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
=================================================
Progress: 376


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), (reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))
Inductive1 : nat_list2 = (nat2::nat_list3)
---------------------------------------
forall (nat1:nat), ((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) = (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list2)) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat2 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat), (reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))
Inductive1 : nat_list2 = (nat2::nat_list3)
nat1 : nat
---------------------------------------
((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) = (((reverse (nat_list3) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite <- lemma4 in goal at 3(rank:22.)
=================================================
Progress: 377


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 378


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
induction nat_list1(rank:12.)
rewrite <- IH1 in goal at 1(rank:19.)
rewrite <- IH1 in goal at 2(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
rewrite <- IH1 in goal at 0(rank:19.)
=================================================
Progress: 379


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 380


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 381


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 382


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (nat_list3))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
=================================================
Progress: 383


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 384


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 1(rank:20.)
=================================================
Progress: 385


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (nat_list3))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (nat_list3))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
=================================================
Progress: 386


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:4.)
=================================================
Progress: 387


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 1(rank:12.)
rewrite lemma3 in goal at 0(rank:12.)
=================================================
Progress: 388


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
simpl in goal
rewrite <- IH1 in goal at 2
Prop: (reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)) = (reverse ((reverse ((Nil)) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (2::(Nil))) = (reverse ((reverse ((2::(Nil))) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (4::(Nil))) = (reverse ((reverse ((4::(Nil))) @ (Nil))) @ (Nil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
simpl in goal
Prop: (reverse (reverse (((Nil) @ (Nil)))) @ (Nil)) = (((Nil) @ (Nil)) @ (Nil))
Prop: (reverse (reverse (((Nil) @ (Nil)))) @ (Nil)) = (((Nil) @ (Nil)) @ (Nil))
Prop: (reverse (reverse (((Nil) @ (Nil)))) @ (Nil)) = (((Nil) @ (Nil)) @ (Nil))
Lemma List
forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 389


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))(rank : 0.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6.)
=================================================
Progress: 390


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))(rank : 0.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:14.)
induction nat_list1(rank:14.)
=================================================
Progress: 391


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), (reverse (reverse (((Nil) @ (Nil)))) @ any_list1) = (((Nil) @ any_list1) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 392


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), (reverse (reverse (((Nil) @ (Nil)))) @ any_list1) = (((Nil) @ any_list1) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:7.)
=================================================
Progress: 393


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 394


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 395


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
=================================================
Progress: 396


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4.)
=================================================
Progress: 397


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 398


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 2(rank:20.)
=================================================
Progress: 399


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 400


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (nat_list3))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma4 in goal at 2(rank:20.)
=================================================
Progress: 401


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 2(rank:4.)
=================================================
Progress: 402


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:12.)
rewrite IH1 in goal at 1(rank:20.)
=================================================
Progress: 403


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- lemma4 in goal at 1
rewrite IH1 in goal at 1
rewrite lemma3 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: (reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (ZERO::(Nil))) = (reverse ((reverse ((ZERO::(Nil))) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (ZERO::(Nil))) = (reverse ((reverse ((ZERO::(Nil))) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse ((SUCC (ZERO)::(Nil))) @ (Nil)))) @ (SUCC (ZERO)::(Nil))) = (reverse ((reverse ((SUCC (ZERO)::(Nil))) @ (SUCC (ZERO)::(Nil)))) @ (Nil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- lemma4 in goal at 1
rewrite IH1 in goal at 1
rewrite lemma3 in goal at 0
simpl in goal
Prop: (reverse (reverse (((0::(1::(Nil))) @ (Nil)))) @ (ZERO::(Nil))) = (((0::(1::(Nil))) @ (ZERO::(Nil))) @ (Nil))
Prop: (reverse (reverse (((7::(Nil)) @ (Nil)))) @ (ZERO::(Nil))) = (((7::(Nil)) @ (ZERO::(Nil))) @ (Nil))
Prop: (reverse (reverse (((Nil) @ (Nil)))) @ (SUCC (ZERO)::(Nil))) = (((Nil) @ (SUCC (ZERO)::(Nil))) @ (Nil))
Lemma List
forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 404


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))(rank : 0.)


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))

---------------------------------------
forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6.)
=================================================
Progress: 405


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))

---------------------------------------
forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat), (reverse (reverse (((Nil) @ (Nil)))) @ (nat1::(Nil))) = (((Nil) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 406


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat), (reverse (reverse (((Nil) @ (Nil)))) @ (nat1::(Nil))) = (((Nil) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse (reverse (((any1::any_list2) @ (Nil)))) @ (nat1::(Nil))) = (((any1::any_list2) @ (nat1::(Nil))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 407


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse (reverse (((any1::any_list2) @ (Nil)))) @ (nat1::(Nil))) = (((any1::any_list2) @ (nat1::(Nil))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = (any1::((any_list2 @ (nat1::(Nil))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro nat1(rank:5.)
rewrite <- lemma4 in goal at 3(rank:13.)
rewrite <- lemma4 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 408


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = (any1::((any_list2 @ (nat1::(Nil))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = (any1::((any_list2 @ (nat1::(Nil))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 3(rank:13.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
=================================================
Progress: 409


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (nat_list3))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (nat_list3))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 2(rank:4.)
=================================================
Progress: 410


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (nat_list3))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (nat_list3))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4.)
=================================================
Progress: 411


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (nat_list3))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (nat_list3))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
=================================================
Progress: 412


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
=================================================
Progress: 413


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = (any1::((any_list2 @ (nat1::(Nil))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = (any1::(reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 3(rank:21.)
=================================================
Progress: 414


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = (any1::((any_list2 @ (nat1::(Nil))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 3(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = reverse (((reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite lemma3 in goal at 2(rank:13.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 3(rank:21.)
rewrite lemma3 in goal at 0(rank:21.)
=================================================
Progress: 415


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = (any1::((any_list2 @ (nat1::(Nil))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = (any1::(reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 3(rank:21.)
=================================================
Progress: 416


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = (any1::((any_list2 @ (nat1::(Nil))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 3(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = reverse (((reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite lemma3 in goal at 2(rank:13.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 3(rank:21.)
rewrite lemma3 in goal at 0(rank:21.)
=================================================
Progress: 417


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = reverse (((reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = reverse ((((nat1::reverse ((any_list2 @ (Nil)))) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 418


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = reverse ((((nat1::reverse ((any_list2 @ (Nil)))) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = (reverse (((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))) @ (nat1::(Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
intro nat1(rank:5.)
rewrite lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 3(rank:21.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite lemma3 in goal at 0(rank:21.)
=================================================
Progress: 419


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = (reverse (((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))) @ (nat1::(Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = (reverse (((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))) @ (nat1::(Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite lemma3 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 3(rank:21.)
rewrite lemma4 in goal at 0(rank:21.)
=================================================
Progress: 420


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = reverse (((reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (nat1:nat), (reverse (reverse ((any_list1 @ (Nil)))) @ (nat1::(Nil))) = ((any_list1 @ (nat1::(Nil))) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), (reverse (reverse ((any_list2 @ (Nil)))) @ (nat1::(Nil))) = ((any_list2 @ (nat1::(Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) @ (nat1::(Nil))) = reverse ((((nat1::reverse ((any_list2 @ (Nil)))) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 3(rank:21.)
rewrite <- lemma4 in goal at 0(rank:21.)
=================================================
Progress: 421


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ (Nil)) = (reverse ((reverse ((Nil)) @ nat_list1)) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 422


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ (Nil)) = (reverse ((reverse ((Nil)) @ nat_list1)) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ (Nil)) = (reverse (nat_list1) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:7.)
=================================================
Progress: 423


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ (Nil)) = (reverse (nat_list1) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)) = (reverse ((Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 424


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)) = (reverse ((Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ (Nil)) = (reverse (nat_list2) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(reverse (reverse ((reverse ((nat1::nat_list2)) @ (Nil)))) @ (Nil)) = (reverse ((nat1::nat_list2)) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 425


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ (Nil)) = (reverse (nat_list2) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(reverse (reverse ((reverse ((nat1::nat_list2)) @ (Nil)))) @ (Nil)) = (reverse ((nat1::nat_list2)) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ (Nil)) = (reverse (nat_list2) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (Nil)) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:14.)
rewrite lemma3 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 2(rank:14.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
=================================================
Progress: 426


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), (reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 427


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), (reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), any_list1 = (reverse ((reverse (any_list1) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:7.)
=================================================
Progress: 428


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), any_list1 = (reverse ((reverse (any_list1) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(Nil) = (reverse ((reverse ((Nil)) @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 429


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(Nil) = (reverse ((reverse ((Nil)) @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (reverse ((reverse ((any1::any_list2)) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 430


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (reverse ((reverse ((any1::any_list2)) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:14.)
rewrite <- lemma4 in goal at 0(rank:14.)
rewrite <- lemma4 in goal at 1(rank:14.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite lemma4 in goal at 0(rank:14.)
=================================================
Progress: 431


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::any_list3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 432


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::any_list3)

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), (reverse (reverse ((any_list3 @ (Nil)))) @ any_list1) = ((any_list3 @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), (reverse (reverse (((any1::any_list3) @ (Nil)))) @ any_list1) = (((any1::any_list3) @ any_list1) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 3
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 433


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), (reverse (reverse ((any_list3 @ (Nil)))) @ any_list1) = ((any_list3 @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), (reverse (reverse (((any1::any_list3) @ (Nil)))) @ any_list1) = (((any1::any_list3) @ any_list1) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), (reverse (reverse ((any_list3 @ (Nil)))) @ any_list1) = ((any_list3 @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), (reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ any_list1) = (any1::((any_list3 @ any_list1) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro any_list1(rank:5.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- lemma4 in goal at 2(rank:13.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
=================================================
Progress: 434


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), (reverse (reverse ((any_list3 @ (Nil)))) @ any_list1) = ((any_list3 @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), (reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ any_list1) = (any1::((any_list3 @ any_list1) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), (reverse (reverse ((any_list3 @ (Nil)))) @ any_list1) = ((any_list3 @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
(reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ any_list1) = (any1::((any_list3 @ any_list1) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 2(rank:13.)
rewrite <- lemma4 in goal at 1(rank:21.)
=================================================
Progress: 435


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), (reverse (reverse ((any_list3 @ (Nil)))) @ any_list1) = ((any_list3 @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), (reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ any_list1) = (any1::((any_list3 @ any_list1) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), (reverse (reverse ((any_list3 @ (Nil)))) @ any_list1) = ((any_list3 @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), (reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ any_list1) = (any1::(reverse (reverse ((any_list3 @ (Nil)))) @ any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
=================================================
Progress: 436


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), (reverse (reverse ((any_list3 @ (Nil)))) @ any_list1) = ((any_list3 @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), (reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ any_list1) = (any1::((any_list3 @ any_list1) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), (reverse (reverse ((any_list3 @ (Nil)))) @ any_list1) = ((any_list3 @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), (reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ any_list1) = reverse (((reverse (((any_list3 @ any_list1) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
=================================================
Progress: 437


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), (reverse (reverse ((any_list3 @ (Nil)))) @ any_list1) = ((any_list3 @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
(reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ any_list1) = (any1::((any_list3 @ any_list1) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), (reverse (reverse ((any_list3 @ (Nil)))) @ any_list1) = ((any_list3 @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
(reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ any_list1) = (any1::(reverse (reverse ((any_list3 @ (Nil)))) @ any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
=================================================
Progress: 438


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), (reverse (reverse ((any_list3 @ (Nil)))) @ any_list1) = ((any_list3 @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
(reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ any_list1) = (any1::((any_list3 @ any_list1) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((any_list2 @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), (reverse (reverse ((any_list3 @ (Nil)))) @ any_list1) = ((any_list3 @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
(reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ any_list1) = reverse (((reverse (((any_list3 @ any_list1) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
=================================================
Progress: 439


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ (Nil)) = (reverse (nat_list2) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (Nil)) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ (Nil)) = (reverse (nat_list2) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(reverse ((nat1::nat_list2)) @ (Nil)) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 440


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ (Nil)) = (reverse (nat_list2) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(reverse ((nat1::nat_list2)) @ (Nil)) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ (any1::any_list2)) = (reverse ((reverse ((any1::any_list2)) @ nat_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 4
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 441


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ (any1::any_list2)) = (reverse ((reverse ((any1::any_list2)) @ nat_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ nat_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
induction nat_list1(rank:14.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
=================================================
Progress: 442


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = ((any1::reverse ((reverse (any_list2) @ (Nil)))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 443


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = ((any1::reverse ((reverse (any_list2) @ (Nil)))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::(reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:14.)
rewrite <- lemma4 in goal at 2(rank:22.)
=================================================
Progress: 444


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = ((any1::any_list2) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 445


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = ((any1::any_list2) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::(any_list2 @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
=================================================
Progress: 446


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (reverse (((reverse (any_list2) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 2(rank:14.)
rewrite lemma4 in goal at 1(rank:22.)
rewrite lemma3 in goal at 0(rank:22.)
rewrite lemma3 in goal at 1(rank:22.)
=================================================
Progress: 447


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:22.)
rewrite lemma3 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
=================================================
Progress: 448


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ nat_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 449


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(any1::any_list2) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:14.)
rewrite <- lemma4 in goal at 0(rank:14.)
rewrite <- lemma4 in goal at 1(rank:14.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite lemma4 in goal at 0(rank:14.)
=================================================
Progress: 450


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::(reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::any_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 451


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (reverse ((reverse (any_list2) @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::any_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (reverse (reverse ((reverse ((nat1::nat_list2)) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 15
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 452


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (reverse (reverse ((reverse ((nat1::nat_list2)) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite lemma4 in goal at 0(rank:13.)
rewrite <- lemma4 in goal at 2(rank:13.)
rewrite <- lemma4 in goal at 1(rank:21.)
induction any_list1(rank:14.)
rewrite lemma3 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 0(rank:21.)
=================================================
Progress: 453


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (reverse ((nat1::nat_list2)) @ any_list1) = (reverse ((reverse (any_list1) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 454


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (reverse ((nat1::nat_list2)) @ any_list1) = (reverse ((reverse (any_list1) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), ((reverse (nat_list2) @ (nat1::(Nil))) @ any_list1) = (reverse ((reverse (any_list1) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
induction any_list1(rank:14.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
=================================================
Progress: 455


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
induction any_list1(rank:14.)
rewrite lemma3 in goal at 1(rank:21.)
rewrite lemma3 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
rewrite lemma3 in goal at 0(rank:21.)
=================================================
Progress: 456


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(any1::any_list2) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(any1::any_list2) = ((any1::reverse ((reverse (any_list2) @ (Nil)))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 457


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(any1::any_list2) = ((any1::reverse ((reverse (any_list2) @ (Nil)))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(any1::any_list2) = (any1::(reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- lemma4 in goal at 1(rank:14.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
=================================================
Progress: 458


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(any1::any_list2) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(any1::any_list2) = ((any1::any_list2) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 459


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(any1::any_list2) = ((any1::any_list2) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(any1::any_list2) = (any1::(any_list2 @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
=================================================
Progress: 460


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(any1::any_list2) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (reverse (((reverse (any_list2) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 2(rank:14.)
rewrite lemma4 in goal at 1(rank:22.)
rewrite lemma3 in goal at 0(rank:22.)
rewrite lemma3 in goal at 1(rank:22.)
=================================================
Progress: 461


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(any1::any_list2) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:22.)
rewrite lemma3 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
=================================================
Progress: 462


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (Nil)) = (reverse ((reverse ((Nil)) @ (nat1::nat_list2))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 463


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (Nil)) = (reverse ((reverse ((Nil)) @ (nat1::nat_list2))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (Nil)) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:14.)
rewrite lemma3 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 2(rank:14.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
=================================================
Progress: 464


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), ((reverse (nat_list2) @ (nat1::(Nil))) @ any_list1) = (reverse ((reverse (any_list1) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)) = (reverse ((reverse ((Nil)) @ (nat1::nat_list2))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 465


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)) = (reverse ((reverse ((Nil)) @ (nat1::nat_list2))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : ((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2) = (reverse ((reverse (any_list2) @ (nat1::nat_list2))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
((reverse (nat_list2) @ (nat1::(Nil))) @ (any1::any_list2)) = (reverse ((reverse ((any1::any_list2)) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 466


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : ((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2) = (reverse ((reverse (any_list2) @ (nat1::nat_list2))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
((reverse (nat_list2) @ (nat1::(Nil))) @ (any1::any_list2)) = (reverse ((reverse ((any1::any_list2)) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : ((reverse (nat_list2) @ (nat1::(Nil))) @ any_list2) = (reverse ((reverse (any_list2) @ (nat1::nat_list2))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
((reverse (nat_list2) @ (nat1::(Nil))) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 3(rank:21.)
=================================================
Progress: 467


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (Nil)) = (reverse ((reverse ((Nil)) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 468


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (Nil)) = (reverse ((reverse ((Nil)) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (any1::any_list2)) = (reverse ((reverse ((any1::any_list2)) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 469


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (any1::any_list2)) = (reverse ((reverse ((any1::any_list2)) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
rewrite lemma4 in goal at 0(rank:13.)
rewrite lemma4 in goal at 2(rank:13.)
rewrite lemma3 in goal at 0(rank:21.)
rewrite lemma3 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:13.)
rewrite <- lemma4 in goal at 3(rank:21.)
rewrite lemma3 in goal at 2(rank:21.)
=================================================
Progress: 470


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse ((nat1::nat_list2)) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 471


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse ((nat1::nat_list2)) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
((reverse (nat_list2) @ (nat1::(Nil))) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 3(rank:21.)
=================================================
Progress: 472


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 3(rank:21.)
=================================================
Progress: 473


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil)))) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
rewrite lemma3 in goal at 3(rank:13.)
rewrite lemma4 in goal at 0(rank:13.)
rewrite lemma3 in goal at 0(rank:21.)
rewrite lemma3 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite lemma4 in goal at 1(rank:21.)
rewrite lemma3 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 3(rank:21.)
=================================================
Progress: 474


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil)))) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 13.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil)))) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (nat1::reverse ((reverse (nat_list2) @ (Nil)))))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite lemma3 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 3(rank:21.)
rewrite lemma4 in goal at 1(rank:21.)
=================================================
Progress: 475


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil)))) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse ((nat1::nat_list2)) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 476


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse ((nat1::nat_list2)) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
((reverse (nat_list2) @ (nat1::(Nil))) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 3(rank:21.)
=================================================
Progress: 477


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(any1::any_list2) = (any1::(reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::(reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
=================================================
Progress: 478


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (reverse (((reverse (any_list2) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (reverse (((reverse (any_list2) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 479


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (reverse (((reverse (any_list2) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 1(rank:22.)
rewrite lemma4 in goal at 1(rank:22.)
rewrite lemma4 in goal at 2(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite lemma4 in goal at 0(rank:22.)
=================================================
Progress: 480


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (Nil)) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse ((nat1::nat_list2)) @ (Nil)) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 481


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse ((nat1::nat_list2)) @ (Nil)) = ((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ (nat1::nat_list2))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (any1::any_list2)) = (reverse ((reverse ((any1::any_list2)) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 4
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 482


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ (nat1::nat_list2))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (any1::any_list2)) = (reverse ((reverse ((any1::any_list2)) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (reverse (reverse ((reverse (nat_list2) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
any1 : any
any_list2 : any list
IH2 : (reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ (nat1::nat_list2))) @ (Nil))
Inductive2 : any_list1 = (any1::any_list2)
---------------------------------------
(reverse (reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil)))) @ (any1::any_list2)) = (reverse (((reverse (any_list2) @ (any1::(Nil))) @ (nat1::nat_list2))) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite lemma3 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 0(rank:21.)
rewrite <- lemma4 in goal at 1(rank:21.)
rewrite <- lemma4 in goal at 2(rank:21.)
rewrite <- lemma4 in goal at 3(rank:21.)
rewrite lemma4 in goal at 0(rank:21.)
=================================================
Progress: 483


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::(reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), (reverse (reverse ((reverse (nat_list1) @ (Nil)))) @ any_list2) = (reverse ((reverse (any_list2) @ nat_list1)) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(any1::reverse ((reverse (any_list2) @ (Nil)))) = (any1::(reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
=================================================
Progress: 484


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 1(rank:19.)
=================================================
Progress: 485


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:11.)
rewrite <- IH1 in goal at 1(rank:19.)
rewrite <- lemma4 in goal at 0(rank:11.)
=================================================
Progress: 486


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))))) = (reverse ((reverse ((nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 2(rank:19.)
=================================================
Progress: 487


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 1(rank:11.)
rewrite lemma3 in goal at 0(rank:19.)
rewrite lemma3 in goal at 2(rank:19.)
=================================================
Progress: 488


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:19.)
rewrite lemma3 in goal at 2(rank:19.)
=================================================
Progress: 489


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma4 in goal at 0
reflexivity
simpl in goal
rewrite <- lemma4 in goal at 0
rewrite <- IH1 in goal at 0
Prop: reverse ((reverse ((Nil)) @ reverse ((reverse ((reverse ((Nil)) @ (Nil))) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (Nil)) @ (Nil)))) @ (Nil))) @ (Nil))
Prop: reverse ((reverse ((Nil)) @ reverse ((reverse ((reverse ((Nil)) @ (Nil))) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (Nil)) @ (Nil)))) @ (Nil))) @ (Nil))
Prop: reverse ((reverse ((Nil)) @ reverse ((reverse ((reverse ((Nil)) @ (ZERO::(Nil)))) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (Nil)) @ (Nil)))) @ (ZERO::(Nil)))) @ (Nil))
previous tactics
simpl in goal
intro nat1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma4 in goal at 0
reflexivity
simpl in goal
rewrite <- lemma4 in goal at 0
Prop: reverse ((reverse ((Nil)) @ reverse ((((Nil) @ (Nil)) @ (Nil))))) = (((Nil) @ reverse (((reverse ((Nil)) @ (Nil)) @ (Nil)))) @ (Nil))
Prop: reverse ((reverse ((Nil)) @ reverse ((((Nil) @ (0::(Nil))) @ (Nil))))) = (((Nil) @ reverse (((reverse ((Nil)) @ (0::(Nil))) @ (Nil)))) @ (Nil))
Prop: reverse ((reverse ((Nil)) @ reverse ((((Nil) @ (Nil)) @ (Nil))))) = (((Nil) @ reverse (((reverse ((Nil)) @ (Nil)) @ (Nil)))) @ (Nil))
previous tactics
simpl in goal
intro nat1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma4 in goal at 0
reflexivity
simpl in goal
validate generalize_common_subterm_goal
Prop: reverse ((reverse ((Nil)) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil)))) = ((reverse ((Nil)) @ (SUCC (SUCC (SUCC (ZERO)))::(Nil))) @ (Nil))
Prop: reverse ((reverse ((Nil)) @ (ZERO::(Nil)))) = ((reverse ((Nil)) @ (ZERO::(Nil))) @ (Nil))
Prop: reverse ((reverse ((Nil)) @ (ZERO::(Nil)))) = ((reverse ((Nil)) @ (ZERO::(Nil))) @ (Nil))
Lemma List
forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 490


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)(rank : 0.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 491


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)(rank : 0.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 492


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse ((any_list1 @ (Nil)))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction any_list1(rank:14.)
induction any_list2(rank:14.)
induction nat_list1(rank:14.)
=================================================
Progress: 493


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse ((any_list1 @ (Nil)))) @ nat_list2)) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6.)
=================================================
Progress: 494


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse ((any_list1 @ (Nil)))) @ nat_list2)) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((Nil)) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((Nil) @ (Nil)))) @ nat_list2)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 495


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((Nil)) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((Nil) @ (Nil)))) @ nat_list2)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list2) @ (Nil))))) = (reverse (nat_list2) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat_list1(rank:15.)
induction nat_list2(rank:15.)
=================================================
Progress: 496


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse ((any_list1 @ (Nil)))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ (Nil)) @ (Nil))))) = ((any_list2 @ reverse (((Nil) @ (Nil)))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 497


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ (Nil)) @ (Nil))))) = ((any_list2 @ reverse (((Nil) @ (Nil)))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ (Nil)) @ (Nil))))) = ((any_list2 @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list2(rank:15.)
induction nat_list1(rank:15.)
=================================================
Progress: 498


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse ((any_list1 @ (Nil)))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((((Nil) @ any_list1) @ (Nil))))) = (((Nil) @ reverse ((any_list1 @ (Nil)))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 499


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((((Nil) @ any_list1) @ (Nil))))) = (((Nil) @ reverse ((any_list1 @ (Nil)))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list1 @ (Nil))))) = (reverse ((any_list1 @ (Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:15.)
induction nat_list1(rank:15.)
=================================================
Progress: 500


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse ((any_list1 @ (Nil)))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse ((reverse ((Nil)) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse ((any_list1 @ (Nil)))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 501


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse ((reverse ((Nil)) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse ((any_list1 @ (Nil)))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (reverse (((any_list2 @ any_list1) @ (Nil)))) = ((any_list2 @ reverse ((any_list1 @ (Nil)))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:15.)
induction any_list2(rank:15.)
=================================================
Progress: 502


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list2) @ (Nil))))) = (reverse (nat_list2) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse ((reverse ((Nil)) @ reverse ((reverse (nat_list2) @ (Nil))))) = (reverse (nat_list2) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 503


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse ((reverse ((Nil)) @ reverse ((reverse (nat_list2) @ (Nil))))) = (reverse (nat_list2) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse (reverse ((reverse (nat_list2) @ (Nil)))) = (reverse (nat_list2) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:8.)
=================================================
Progress: 504


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse (reverse ((reverse (nat_list2) @ (Nil)))) = (reverse (nat_list2) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 8.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat_list2 : nat list
Base3 : nat_list2 = (Nil)
---------------------------------------
reverse (reverse ((reverse ((Nil)) @ (Nil)))) = (reverse ((Nil)) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 505


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat_list2 : nat list
Base3 : nat_list2 = (Nil)
---------------------------------------
reverse (reverse ((reverse ((Nil)) @ (Nil)))) = (reverse ((Nil)) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (reverse ((reverse (nat_list3) @ (Nil)))) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
reverse (reverse ((reverse ((nat1::nat_list3)) @ (Nil)))) = (reverse ((nat1::nat_list3)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 506


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (reverse ((reverse (nat_list3) @ (Nil)))) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
reverse (reverse ((reverse ((nat1::nat_list3)) @ (Nil)))) = (reverse ((nat1::nat_list3)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (reverse ((reverse (nat_list3) @ (Nil)))) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
reverse (reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite lemma4 in goal at 0(rank:23.)
=================================================
Progress: 507


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list2) @ (Nil))))) = (reverse (nat_list2) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((Nil)) @ (Nil))))) = (reverse ((Nil)) @ nat_list1)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 508


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((Nil)) @ (Nil))))) = (reverse ((Nil)) @ nat_list1)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:8.)
=================================================
Progress: 509


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 8.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
Base3 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 510


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
Base3 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse ((reverse ((nat1::nat_list3)) @ (Nil))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 511


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse ((reverse ((nat1::nat_list3)) @ (Nil))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite lemma4 in goal at 0(rank:15.)
=================================================
Progress: 512


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ (Nil)) @ (Nil))))) = ((any_list2 @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((((Nil) @ (Nil)) @ (Nil))))) = (((Nil) @ (Nil)) @ nat_list1)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 513


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((((Nil) @ (Nil)) @ (Nil))))) = (((Nil) @ (Nil)) @ nat_list1)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:8.)
=================================================
Progress: 514


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 8.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat_list1 : nat list
Base3 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 515


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat_list1 : nat list
Base3 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse ((reverse (nat_list2) @ (Nil))) = nat_list2
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
reverse ((reverse ((nat1::nat_list2)) @ (Nil))) = (nat1::nat_list2)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 516


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse ((reverse (nat_list2) @ (Nil))) = nat_list2
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
reverse ((reverse ((nat1::nat_list2)) @ (Nil))) = (nat1::nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse ((reverse (nat_list2) @ (Nil))) = nat_list2
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite lemma4 in goal at 0(rank:15.)
=================================================
Progress: 517


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ (Nil)) @ (Nil))))) = ((any_list2 @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse ((reverse ((Nil)) @ reverse (((any_list2 @ (Nil)) @ (Nil))))) = ((any_list2 @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 518


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse ((reverse ((Nil)) @ reverse (((any_list2 @ (Nil)) @ (Nil))))) = ((any_list2 @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (reverse (((any_list2 @ (Nil)) @ (Nil)))) = ((any_list2 @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8.)
=================================================
Progress: 519


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (reverse (((any_list2 @ (Nil)) @ (Nil)))) = ((any_list2 @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 8.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
Base3 : any_list2 = (Nil)
---------------------------------------
reverse (reverse ((((Nil) @ (Nil)) @ (Nil)))) = (((Nil) @ (Nil)) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 520


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
Base3 : any_list2 = (Nil)
---------------------------------------
reverse (reverse ((((Nil) @ (Nil)) @ (Nil)))) = (((Nil) @ (Nil)) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (reverse ((((any1::any_list3) @ (Nil)) @ (Nil)))) = (((any1::any_list3) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 521


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (reverse ((((any1::any_list3) @ (Nil)) @ (Nil)))) = (((any1::any_list3) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = (any1::((any_list3 @ (Nil)) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:15.)
=================================================
Progress: 522


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list1 @ (Nil))))) = (reverse ((any_list1 @ (Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((Nil) @ (Nil))))) = (reverse (((Nil) @ (Nil))) @ nat_list1)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 523


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((Nil) @ (Nil))))) = (reverse (((Nil) @ (Nil))) @ nat_list1)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:8.)
=================================================
Progress: 524


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 8.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
Base3 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 525


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
Base3 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse ((reverse (nat_list2) @ (Nil))) = nat_list2
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
reverse ((reverse ((nat1::nat_list2)) @ (Nil))) = (nat1::nat_list2)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 526


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse ((reverse (nat_list2) @ (Nil))) = nat_list2
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
reverse ((reverse ((nat1::nat_list2)) @ (Nil))) = (nat1::nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse ((reverse (nat_list2) @ (Nil))) = nat_list2
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite lemma4 in goal at 0(rank:15.)
=================================================
Progress: 527


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list1 @ (Nil))))) = (reverse ((any_list1 @ (Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse ((reverse ((Nil)) @ reverse ((any_list1 @ (Nil))))) = (reverse ((any_list1 @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 528


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse ((reverse ((Nil)) @ reverse ((any_list1 @ (Nil))))) = (reverse ((any_list1 @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (reverse ((any_list1 @ (Nil)))) = (reverse ((any_list1 @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8.)
=================================================
Progress: 529


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (reverse ((any_list1 @ (Nil)))) = (reverse ((any_list1 @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 8.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
Base3 : any_list1 = (Nil)
---------------------------------------
reverse (reverse (((Nil) @ (Nil)))) = (reverse (((Nil) @ (Nil))) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 530


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
Base3 : any_list1 = (Nil)
---------------------------------------
reverse (reverse (((Nil) @ (Nil)))) = (reverse (((Nil) @ (Nil))) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse ((any_list3 @ (Nil)))) = (reverse ((any_list3 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (reverse (((any1::any_list3) @ (Nil)))) = (reverse (((any1::any_list3) @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 531


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse ((any_list3 @ (Nil)))) = (reverse ((any_list3 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (reverse (((any1::any_list3) @ (Nil)))) = (reverse (((any1::any_list3) @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse ((any_list3 @ (Nil)))) = (reverse ((any_list3 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) = ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 532


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (reverse (((any_list2 @ any_list1) @ (Nil)))) = ((any_list2 @ reverse ((any_list1 @ (Nil)))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (reverse (((any_list2 @ (Nil)) @ (Nil)))) = ((any_list2 @ reverse (((Nil) @ (Nil)))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 533


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (reverse (((any_list2 @ (Nil)) @ (Nil)))) = ((any_list2 @ reverse (((Nil) @ (Nil)))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (reverse (((any_list2 @ (Nil)) @ (Nil)))) = ((any_list2 @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8.)
=================================================
Progress: 534


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (reverse (((any_list2 @ (Nil)) @ (Nil)))) = ((any_list2 @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 8.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
Base3 : any_list2 = (Nil)
---------------------------------------
reverse (reverse ((((Nil) @ (Nil)) @ (Nil)))) = (((Nil) @ (Nil)) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 535


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
Base3 : any_list2 = (Nil)
---------------------------------------
reverse (reverse ((((Nil) @ (Nil)) @ (Nil)))) = (((Nil) @ (Nil)) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (reverse ((((any1::any_list3) @ (Nil)) @ (Nil)))) = (((any1::any_list3) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 536


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (reverse ((((any1::any_list3) @ (Nil)) @ (Nil)))) = (((any1::any_list3) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = (any1::((any_list3 @ (Nil)) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:15.)
=================================================
Progress: 537


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (reverse (((any_list2 @ any_list1) @ (Nil)))) = ((any_list2 @ reverse ((any_list1 @ (Nil)))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (reverse ((((Nil) @ any_list1) @ (Nil)))) = (((Nil) @ reverse ((any_list1 @ (Nil)))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 538


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (reverse ((((Nil) @ any_list1) @ (Nil)))) = (((Nil) @ reverse ((any_list1 @ (Nil)))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (reverse ((any_list1 @ (Nil)))) = (reverse ((any_list1 @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8.)
=================================================
Progress: 539


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (reverse ((any_list1 @ (Nil)))) = (reverse ((any_list1 @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 8.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
Base3 : any_list1 = (Nil)
---------------------------------------
reverse (reverse (((Nil) @ (Nil)))) = (reverse (((Nil) @ (Nil))) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 540


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
Base3 : any_list1 = (Nil)
---------------------------------------
reverse (reverse (((Nil) @ (Nil)))) = (reverse (((Nil) @ (Nil))) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse ((any_list3 @ (Nil)))) = (reverse ((any_list3 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (reverse (((any1::any_list3) @ (Nil)))) = (reverse (((any1::any_list3) @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 541


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse ((any_list3 @ (Nil)))) = (reverse ((any_list3 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (reverse (((any1::any_list3) @ (Nil)))) = (reverse (((any1::any_list3) @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse ((any_list3 @ (Nil)))) = (reverse ((any_list3 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) = ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 542


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
(nat1::reverse ((reverse (nat_list3) @ (Nil)))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
=================================================
Progress: 543


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
(nat1::nat_list3) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 544


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
(nat1::nat_list3) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((nat1::nat_list3)) @ (Nil))))) = (reverse ((nat1::nat_list3)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 6
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 545


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((nat1::nat_list3)) @ (Nil))))) = (reverse ((nat1::nat_list3)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
rewrite lemma3 in goal at 0(rank:14.)
rewrite lemma4 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 2(rank:14.)
induction nat_list1(rank:15.)
=================================================
Progress: 546


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite <- IH1 in goal at 2(rank:14.)
induction nat_list1(rank:15.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
=================================================
Progress: 547


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat_list1(rank:15.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
=================================================
Progress: 548


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ reverse ((reverse (nat_list3) @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 549


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ reverse ((reverse (nat_list3) @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
rewrite lemma4 in goal at 0(rank:14.)
induction nat_list1(rank:15.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite lemma3 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
=================================================
Progress: 550


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:22.)
rewrite lemma3 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
=================================================
Progress: 551


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = (reverse ((reverse ((nat1::(Nil))) @ reverse ((reverse (nat_list3) @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
=================================================
Progress: 552


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat_list1(rank:15.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
=================================================
Progress: 553


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse ((reverse (nat_list2) @ (Nil))) = nat_list2
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse ((reverse (nat_list2) @ (Nil))) = nat_list2
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(nat1::reverse ((reverse (nat_list2) @ (Nil)))) = (nat1::nat_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
=================================================
Progress: 554


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse ((reverse (nat_list2) @ (Nil))) = nat_list2
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse ((reverse (nat_list2) @ (Nil))) = nat_list2
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(nat1::nat_list2) = (nat1::nat_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 555


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse ((reverse (nat_list2) @ (Nil))) = nat_list2
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(nat1::nat_list2) = (nat1::nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((((any1::any_list3) @ (Nil)) @ (Nil))))) = (((any1::any_list3) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 6
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 556


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((((any1::any_list3) @ (Nil)) @ (Nil))))) = (((any1::any_list3) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = (any1::((any_list3 @ (Nil)) @ nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite <- IH1 in goal at 2(rank:14.)
rewrite <- lemma4 in goal at 0(rank:14.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:14.)
induction nat_list1(rank:15.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
=================================================
Progress: 557


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = (any1::((any_list3 @ (Nil)) @ nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = (any1::reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
induction nat_list1(rank:15.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 558


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = (any1::((any_list3 @ (Nil)) @ nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = reverse (((reverse (((any_list3 @ (Nil)) @ nat_list1)) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
rewrite lemma3 in goal at 1(rank:14.)
rewrite lemma4 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite lemma3 in goal at 2(rank:22.)
rewrite <- lemma4 in goal at 2(rank:14.)
rewrite lemma3 in goal at 0(rank:22.)
=================================================
Progress: 559


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = (any1::((any_list3 @ (Nil)) @ nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ nat_list1)) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
induction nat_list1(rank:15.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite lemma3 in goal at 0(rank:22.)
=================================================
Progress: 560


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = reverse (((reverse (((any_list3 @ (Nil)) @ nat_list1)) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))))) = reverse (((reverse (((any_list3 @ (Nil)) @ nat_list1)) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
=================================================
Progress: 561


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = reverse (((reverse (((any_list3 @ (Nil)) @ nat_list1)) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 1(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ nat_list1)) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 2(rank:14.)
induction nat_list1(rank:15.)
rewrite lemma3 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
=================================================
Progress: 562


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = reverse (((reverse (((any_list3 @ (Nil)) @ nat_list1)) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = reverse (((reverse (((any_list3 @ (Nil)) @ nat_list1)) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 2(rank:14.)
rewrite lemma3 in goal at 0(rank:22.)
rewrite lemma3 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
=================================================
Progress: 563


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))))) = reverse (((reverse (((any_list3 @ (Nil)) @ nat_list1)) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))))) = reverse (((reverse (reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil)))))) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite lemma3 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 564


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ nat_list1)) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = reverse (((reverse (reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil)))))) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
induction nat_list1(rank:15.)
rewrite lemma3 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
=================================================
Progress: 565


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = reverse (((reverse (((any_list3 @ (Nil)) @ nat_list1)) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = reverse (((reverse (reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil)))))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:22.)
rewrite lemma3 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
=================================================
Progress: 566


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = (any1::((any_list3 @ (Nil)) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite lemma3 in goal at 1(rank:15.)
rewrite lemma4 in goal at 1(rank:15.)
rewrite lemma3 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite lemma3 in goal at 0(rank:23.)
=================================================
Progress: 567


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = (any1::((any_list3 @ (Nil)) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 568


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse ((reverse (nat_list2) @ (Nil))) = nat_list2
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse ((reverse (nat_list2) @ (Nil))) = nat_list2
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(nat1::reverse ((reverse (nat_list2) @ (Nil)))) = (nat1::nat_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
=================================================
Progress: 569


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse ((reverse (nat_list2) @ (Nil))) = nat_list2
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse ((reverse (nat_list2) @ (Nil))) = nat_list2
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(nat1::nat_list2) = (nat1::nat_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 570


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse ((reverse (nat_list2) @ (Nil))) = nat_list2
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(nat1::nat_list2) = (nat1::nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list3 @ (Nil))))) = (reverse ((any_list3 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any1::any_list3) @ (Nil))))) = (reverse (((any1::any_list3) @ (Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 6
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 571


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list3 @ (Nil))))) = (reverse ((any_list3 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any1::any_list3) @ (Nil))))) = (reverse (((any1::any_list3) @ (Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list3 @ (Nil))))) = (reverse ((any_list3 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((any_list3 @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite <- IH1 in goal at 2(rank:14.)
induction nat_list1(rank:15.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
=================================================
Progress: 572


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list3 @ (Nil))))) = (reverse ((any_list3 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((any_list3 @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list3 @ (Nil))))) = (reverse ((any_list3 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((any_list3 @ (Nil))) @ (any1::(Nil))))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((any_list3 @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 573


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list3 @ (Nil))))) = (reverse ((any_list3 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((any_list3 @ (Nil))) @ (any1::(Nil))))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((any_list3 @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list3 @ (Nil))))) = (reverse ((any_list3 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((any_list3 @ (Nil))) @ (any1::(Nil))))) = ((reverse (reverse ((any_list3 @ (Nil)))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
induction nat_list1(rank:15.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 574


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = (any1::((any_list3 @ (Nil)) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite lemma3 in goal at 1(rank:15.)
rewrite lemma4 in goal at 1(rank:15.)
rewrite lemma3 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite lemma3 in goal at 0(rank:23.)
=================================================
Progress: 575


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = (any1::((any_list3 @ (Nil)) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 576


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 577


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite lemma4 in goal at 0(rank:23.)
=================================================
Progress: 578


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 579


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 580


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 581


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 582


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 583


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)))) = ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite lemma4 in goal at 0(rank:23.)
=================================================
Progress: 584


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::nat_list3))) = ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 585


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::nat_list3))) = ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 1(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 586


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = (any1::((any_list3 @ (Nil)) @ nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = (any1::((any_list3 @ (Nil)) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 587


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = (any1::((any_list3 @ (Nil)) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = (any1::((any_list3 @ (Nil)) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 588


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = (any1::reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = (any1::reverse ((reverse ((Nil)) @ reverse (((any_list3 @ (Nil)) @ (Nil))))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 589


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = (any1::reverse ((reverse ((Nil)) @ reverse (((any_list3 @ (Nil)) @ (Nil))))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = (any1::reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 590


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ nat_list1)) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 591


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite lemma4 in goal at 0(rank:23.)
=================================================
Progress: 592


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ nat_list1)) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 593


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite lemma4 in goal at 0(rank:23.)
=================================================
Progress: 594


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = reverse (((reverse (reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil)))))) @ (any1::(Nil))) @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = reverse (((reverse (reverse ((reverse ((Nil)) @ reverse (((any_list3 @ (Nil)) @ (Nil)))))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 595


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))))) = reverse (((reverse (reverse ((reverse ((Nil)) @ reverse (((any_list3 @ (Nil)) @ (Nil)))))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = reverse (((reverse (reverse (reverse (((any_list3 @ (Nil)) @ (Nil))))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
rewrite lemma4 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 1(rank:15.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite lemma3 in goal at 0(rank:23.)
=================================================
Progress: 596


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::reverse ((reverse ((Nil)) @ (Nil)))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 597


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:7.)
=================================================
Progress: 598


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = (any1::reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 599


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:23.)
rewrite lemma3 in goal at 2(rank:23.)
=================================================
Progress: 600


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list3 @ (Nil))))) = (reverse ((any_list3 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((any_list3 @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list3 @ (Nil))))) = (reverse ((any_list3 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse ((any_list3 @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 601


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list3 @ (Nil))))) = (reverse ((any_list3 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse ((any_list3 @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list3 @ (Nil))))) = (reverse ((any_list3 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) = ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 602


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list3 @ (Nil))))) = (reverse ((any_list3 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((any_list3 @ (Nil))) @ (any1::(Nil))))) = ((reverse (reverse ((any_list3 @ (Nil)))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list3 @ (Nil))))) = (reverse ((any_list3 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse ((any_list3 @ (Nil))) @ (any1::(Nil))))) = ((reverse (reverse ((any_list3 @ (Nil)))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 603


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list3 @ (Nil))))) = (reverse ((any_list3 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse ((any_list3 @ (Nil))) @ (any1::(Nil))))) = ((reverse (reverse ((any_list3 @ (Nil)))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((any_list3 @ (Nil))))) = (reverse ((any_list3 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) = ((reverse (reverse ((any_list3 @ (Nil)))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 604


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::reverse ((reverse ((Nil)) @ (Nil)))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 605


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:7.)
=================================================
Progress: 606


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = (any1::reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 607


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))) = ((any_list3 @ (Nil)) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:23.)
rewrite lemma3 in goal at 2(rank:23.)
=================================================
Progress: 608


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ reverse ((reverse (nat_list3) @ (Nil))))))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ reverse ((reverse (nat_list3) @ (Nil))))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 609


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ reverse ((reverse (nat_list3) @ (Nil))))))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ reverse ((reverse (nat_list3) @ (Nil))))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (reverse ((reverse (nat_list3) @ (Nil)))))) @ (nat1::(Nil))) = ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 610


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list2)) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
(reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) = ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 611


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = (any1::((any_list3 @ (Nil)) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
rewrite lemma3 in goal at 1(rank:15.)
rewrite lemma4 in goal at 1(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite lemma3 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite lemma3 in goal at 0(rank:23.)
=================================================
Progress: 612


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = (any1::((any_list3 @ (Nil)) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 613


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = reverse (((reverse (reverse (reverse (((any_list3 @ (Nil)) @ (Nil))))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = (any1::reverse (reverse (((any_list3 @ (Nil)) @ (Nil)))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
=================================================
Progress: 614


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = reverse (((reverse (reverse (reverse (((any_list3 @ (Nil)) @ (Nil))))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (reverse ((reverse ((Nil)) @ reverse (((any_list3 @ (Nil)) @ (Nil)))))) @ (any1::(Nil)))) = reverse (((reverse (reverse (reverse (((any_list3 @ (Nil)) @ (Nil))))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 615


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (reverse ((reverse ((Nil)) @ reverse (((any_list3 @ (Nil)) @ (Nil)))))) @ (any1::(Nil)))) = reverse (((reverse (reverse (reverse (((any_list3 @ (Nil)) @ (Nil))))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (reverse (reverse (((any_list3 @ (Nil)) @ (Nil))))) @ (any1::(Nil)))) = reverse (((reverse (reverse (reverse (((any_list3 @ (Nil)) @ (Nil))))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite lemma4 in goal at 0(rank:23.)
=================================================
Progress: 616


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::reverse ((reverse ((Nil)) @ (Nil)))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 617


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 1(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil)))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 618


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ (any1::(Nil))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list2 @ any_list1) @ (Nil))))) = ((any_list2 @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any_list3 @ (Nil)) @ (Nil))))) = ((any_list3 @ (Nil)) @ nat_list1)
Inductive1 : any_list2 = (any1::any_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) = reverse (((reverse (((any_list3 @ (Nil)) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite lemma3 in goal at 2(rank:23.)
=================================================
Progress: 619


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma4 in goal at 0
reflexivity
simpl in goal
rewrite <- lemma4 in goal at 0
rewrite <- IH1 in goal at 1
Prop: reverse ((reverse ((Nil)) @ reverse ((reverse ((reverse ((4::(Nil))) @ (SUCC (ZERO)::(Nil)))) @ (Nil))))) = ((reverse ((SUCC (ZERO)::(Nil))) @ reverse (((reverse ((Nil)) @ (4::(Nil))) @ (Nil)))) @ (Nil))
Prop: reverse ((reverse ((Nil)) @ reverse ((reverse ((reverse ((3::(Nil))) @ (Nil))) @ (Nil))))) = ((reverse ((Nil)) @ reverse (((reverse ((Nil)) @ (3::(Nil))) @ (Nil)))) @ (Nil))
Prop: reverse ((reverse ((Nil)) @ reverse ((reverse ((reverse ((0::(0::(Nil)))) @ (Nil))) @ (Nil))))) = ((reverse ((Nil)) @ reverse (((reverse ((Nil)) @ (0::(0::(Nil)))) @ (Nil)))) @ (Nil))
previous tactics
simpl in goal
intro nat1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma4 in goal at 0
reflexivity
simpl in goal
rewrite <- lemma4 in goal at 0
Prop: reverse ((reverse ((Nil)) @ reverse ((((Nil) @ (Nil)) @ (Nil))))) = (((Nil) @ reverse (((reverse ((Nil)) @ (Nil)) @ (Nil)))) @ (Nil))
Prop: reverse ((reverse ((ZERO::(Nil))) @ reverse ((((Nil) @ (Nil)) @ (Nil))))) = (((Nil) @ reverse (((reverse ((Nil)) @ (Nil)) @ (Nil)))) @ (ZERO::(Nil)))
Prop: reverse ((reverse ((ZERO::(SUCC (ZERO)::(ZERO::(Nil))))) @ reverse ((((0::(Nil)) @ (5::(Nil))) @ (Nil))))) = (((0::(Nil)) @ reverse (((reverse ((Nil)) @ (5::(Nil))) @ (Nil)))) @ (ZERO::(SUCC (ZERO)::(ZERO::(Nil)))))
previous tactics
simpl in goal
intro nat1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma4 in goal at 0
reflexivity
simpl in goal
validate generalize_common_subterm_goal
Prop: reverse ((reverse ((ZERO::(Nil))) @ (ZERO::(ZERO::(Nil))))) = ((reverse ((ZERO::(Nil))) @ (ZERO::(Nil))) @ (ZERO::(Nil)))
Prop: reverse ((reverse ((Nil)) @ (SUCC (ZERO)::(Nil)))) = ((reverse ((Nil)) @ (SUCC (ZERO)::(Nil))) @ (Nil))
Prop: reverse ((reverse ((SUCC (ZERO)::(Nil))) @ (ZERO::(Nil)))) = ((reverse ((Nil)) @ (ZERO::(Nil))) @ (SUCC (ZERO)::(Nil)))
Lemma List
forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 620


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)(rank : 0.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 621


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse ((any_list1 @ (Nil)))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction any_list1(rank:14.)
induction nat_list1(rank:14.)
induction nat_list2(rank:14.)
=================================================
Progress: 622


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse ((any_list1 @ (Nil)))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((Nil)) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((Nil) @ (Nil)))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 623


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((Nil)) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((Nil) @ (Nil)))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list2) @ (Nil))))) = ((reverse (nat_list2) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat_list1(rank:15.)
induction nat_list2(rank:15.)
=================================================
Progress: 624


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse ((any_list1 @ (Nil)))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat_list2:nat list), reverse ((reverse ((Nil)) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse ((any_list1 @ (Nil)))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 625


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat_list2:nat list), reverse ((reverse ((Nil)) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse ((any_list1 @ (Nil)))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat_list2:nat list), reverse (reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil)))) = ((reverse (nat_list2) @ reverse ((any_list1 @ (Nil)))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:15.)
induction nat_list2(rank:15.)
=================================================
Progress: 626


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse ((any_list1 @ (Nil)))) @ nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ (Nil))) @ (Nil))))) = ((reverse ((Nil)) @ reverse ((any_list1 @ (Nil)))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 627


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ (Nil))) @ (Nil))))) = ((reverse ((Nil)) @ reverse ((any_list1 @ (Nil)))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ (Nil))) @ (Nil))))) = (reverse ((any_list1 @ (Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:15.)
induction nat_list1(rank:15.)
=================================================
Progress: 628


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list2) @ (Nil))))) = ((reverse (nat_list2) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse ((reverse ((Nil)) @ reverse ((reverse (nat_list2) @ (Nil))))) = ((reverse (nat_list2) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 629


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse ((reverse ((Nil)) @ reverse ((reverse (nat_list2) @ (Nil))))) = ((reverse (nat_list2) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse (reverse ((reverse (nat_list2) @ (Nil)))) = ((reverse (nat_list2) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:8.)
=================================================
Progress: 630


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse (reverse ((reverse (nat_list2) @ (Nil)))) = ((reverse (nat_list2) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 8.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat_list2 : nat list
Base3 : nat_list2 = (Nil)
---------------------------------------
reverse (reverse ((reverse ((Nil)) @ (Nil)))) = ((reverse ((Nil)) @ (Nil)) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 631


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat_list2 : nat list
Base3 : nat_list2 = (Nil)
---------------------------------------
reverse (reverse ((reverse ((Nil)) @ (Nil)))) = ((reverse ((Nil)) @ (Nil)) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (reverse ((reverse (nat_list3) @ (Nil)))) = ((reverse (nat_list3) @ (Nil)) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
reverse (reverse ((reverse ((nat1::nat_list3)) @ (Nil)))) = ((reverse ((nat1::nat_list3)) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 632


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (reverse ((reverse (nat_list3) @ (Nil)))) = ((reverse (nat_list3) @ (Nil)) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
reverse (reverse ((reverse ((nat1::nat_list3)) @ (Nil)))) = ((reverse ((nat1::nat_list3)) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (reverse ((reverse (nat_list3) @ (Nil)))) = ((reverse (nat_list3) @ (Nil)) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
reverse (reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite lemma4 in goal at 0(rank:23.)
=================================================
Progress: 633


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list2) @ (Nil))))) = ((reverse (nat_list2) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((Nil)) @ (Nil))))) = ((reverse ((Nil)) @ (Nil)) @ nat_list1)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 634


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((Nil)) @ (Nil))))) = ((reverse ((Nil)) @ (Nil)) @ nat_list1)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:8.)
=================================================
Progress: 635


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 8.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
Base3 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 636


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
Base3 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse ((reverse ((nat1::nat_list3)) @ (Nil))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 637


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse ((reverse ((nat1::nat_list3)) @ (Nil))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite lemma4 in goal at 0(rank:15.)
=================================================
Progress: 638


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat_list2:nat list), reverse (reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil)))) = ((reverse (nat_list2) @ reverse ((any_list1 @ (Nil)))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse (reverse ((reverse ((reverse ((Nil)) @ nat_list2)) @ (Nil)))) = ((reverse (nat_list2) @ reverse (((Nil) @ (Nil)))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 639


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse (reverse ((reverse ((reverse ((Nil)) @ nat_list2)) @ (Nil)))) = ((reverse (nat_list2) @ reverse (((Nil) @ (Nil)))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse (reverse ((reverse (nat_list2) @ (Nil)))) = ((reverse (nat_list2) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:8.)
=================================================
Progress: 640


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse (reverse ((reverse (nat_list2) @ (Nil)))) = ((reverse (nat_list2) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 8.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list2 : nat list
Base3 : nat_list2 = (Nil)
---------------------------------------
reverse (reverse ((reverse ((Nil)) @ (Nil)))) = ((reverse ((Nil)) @ (Nil)) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 641


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list2 : nat list
Base3 : nat_list2 = (Nil)
---------------------------------------
reverse (reverse ((reverse ((Nil)) @ (Nil)))) = ((reverse ((Nil)) @ (Nil)) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (reverse ((reverse (nat_list3) @ (Nil)))) = ((reverse (nat_list3) @ (Nil)) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
reverse (reverse ((reverse ((nat1::nat_list3)) @ (Nil)))) = ((reverse ((nat1::nat_list3)) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 642


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (reverse ((reverse (nat_list3) @ (Nil)))) = ((reverse (nat_list3) @ (Nil)) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
reverse (reverse ((reverse ((nat1::nat_list3)) @ (Nil)))) = ((reverse ((nat1::nat_list3)) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (reverse ((reverse (nat_list3) @ (Nil)))) = ((reverse (nat_list3) @ (Nil)) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
reverse (reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite lemma4 in goal at 0(rank:23.)
=================================================
Progress: 643


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat_list2:nat list), reverse (reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil)))) = ((reverse (nat_list2) @ reverse ((any_list1 @ (Nil)))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (reverse ((reverse ((reverse (any_list1) @ (Nil))) @ (Nil)))) = ((reverse ((Nil)) @ reverse ((any_list1 @ (Nil)))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 644


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (reverse ((reverse ((reverse (any_list1) @ (Nil))) @ (Nil)))) = ((reverse ((Nil)) @ reverse ((any_list1 @ (Nil)))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (reverse ((reverse ((reverse (any_list1) @ (Nil))) @ (Nil)))) = (reverse ((any_list1 @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8.)
=================================================
Progress: 645


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (reverse ((reverse ((reverse (any_list1) @ (Nil))) @ (Nil)))) = (reverse ((any_list1 @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 8.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
any_list1 : any list
Base3 : any_list1 = (Nil)
---------------------------------------
reverse (reverse ((reverse ((reverse ((Nil)) @ (Nil))) @ (Nil)))) = (reverse (((Nil) @ (Nil))) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 646


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
any_list1 : any list
Base3 : any_list1 = (Nil)
---------------------------------------
reverse (reverse ((reverse ((reverse ((Nil)) @ (Nil))) @ (Nil)))) = (reverse (((Nil) @ (Nil))) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse ((reverse ((reverse ((any1::any_list2)) @ (Nil))) @ (Nil)))) = (reverse (((any1::any_list2) @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 647


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse ((reverse ((reverse ((any1::any_list2)) @ (Nil))) @ (Nil)))) = (reverse (((any1::any_list2) @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:15.)
rewrite lemma4 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
=================================================
Progress: 648


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ (Nil))) @ (Nil))))) = (reverse ((any_list1 @ (Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((Nil)) @ (Nil))) @ (Nil))))) = (reverse (((Nil) @ (Nil))) @ nat_list1)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 649


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((Nil)) @ (Nil))) @ (Nil))))) = (reverse (((Nil) @ (Nil))) @ nat_list1)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:8.)
=================================================
Progress: 650


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 8.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
Base3 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 651


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
Base3 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse ((reverse ((nat1::nat_list3)) @ (Nil))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 652


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse ((reverse ((nat1::nat_list3)) @ (Nil))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite lemma4 in goal at 0(rank:15.)
=================================================
Progress: 653


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ (Nil))) @ (Nil))))) = (reverse ((any_list1 @ (Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse ((reverse ((Nil)) @ reverse ((reverse ((reverse (any_list1) @ (Nil))) @ (Nil))))) = (reverse ((any_list1 @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 654


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse ((reverse ((Nil)) @ reverse ((reverse ((reverse (any_list1) @ (Nil))) @ (Nil))))) = (reverse ((any_list1 @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (reverse ((reverse ((reverse (any_list1) @ (Nil))) @ (Nil)))) = (reverse ((any_list1 @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8.)
=================================================
Progress: 655


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (reverse ((reverse ((reverse (any_list1) @ (Nil))) @ (Nil)))) = (reverse ((any_list1 @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 8.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
Base3 : any_list1 = (Nil)
---------------------------------------
reverse (reverse ((reverse ((reverse ((Nil)) @ (Nil))) @ (Nil)))) = (reverse (((Nil) @ (Nil))) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 656


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
Base3 : any_list1 = (Nil)
---------------------------------------
reverse (reverse ((reverse ((reverse ((Nil)) @ (Nil))) @ (Nil)))) = (reverse (((Nil) @ (Nil))) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse ((reverse ((reverse ((any1::any_list2)) @ (Nil))) @ (Nil)))) = (reverse (((any1::any_list2) @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 657


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse ((reverse ((reverse ((any1::any_list2)) @ (Nil))) @ (Nil)))) = (reverse (((any1::any_list2) @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:15.)
rewrite lemma4 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
=================================================
Progress: 658


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
(nat1::reverse ((reverse (nat_list3) @ (Nil)))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
=================================================
Progress: 659


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
(nat1::nat_list3) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 660


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
(nat1::nat_list3) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((nat1::nat_list3)) @ (Nil))))) = ((reverse ((nat1::nat_list3)) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 6
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 661


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((nat1::nat_list3)) @ (Nil))))) = ((reverse ((nat1::nat_list3)) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite lemma3 in goal at 0(rank:14.)
rewrite lemma4 in goal at 0(rank:14.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 2(rank:14.)
rewrite <- lemma4 in goal at 1(rank:22.)
induction nat_list1(rank:15.)
=================================================
Progress: 662


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
induction nat_list1(rank:15.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
=================================================
Progress: 663


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat_list1(rank:15.)
rewrite <- lemma4 in goal at 2(rank:22.)
=================================================
Progress: 664


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = (((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:14.)
rewrite lemma3 in goal at 2(rank:22.)
=================================================
Progress: 665


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = (((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = (((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 666


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = (((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat_list1(rank:15.)
rewrite <- lemma3 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
=================================================
Progress: 667


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse (((any1::reverse ((reverse (any_list2) @ (Nil)))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 668


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse (((any1::reverse ((reverse (any_list2) @ (Nil)))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 669


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse (((any1::any_list2) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 670


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse (((any1::any_list2) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 671


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:23.)
rewrite lemma3 in goal at 2(rank:23.)
=================================================
Progress: 672


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
(nat1::reverse ((reverse (nat_list3) @ (Nil)))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
=================================================
Progress: 673


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
(nat1::nat_list3) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 674


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
(nat1::nat_list3) = (nat1::nat_list3)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((any1::any_list2)) @ (Nil))) @ (Nil))))) = (reverse (((any1::any_list2) @ (Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 6
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 675


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((any1::any_list2)) @ (Nil))) @ (Nil))))) = (reverse (((any1::any_list2) @ (Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite lemma3 in goal at 0(rank:14.)
rewrite lemma4 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- lemma4 in goal at 2(rank:14.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
induction nat_list1(rank:15.)
=================================================
Progress: 676


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any1::reverse ((reverse (any_list2) @ (Nil)))) @ (Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 677


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any1::reverse ((reverse (any_list2) @ (Nil)))) @ (Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:14.)
induction nat_list1(rank:15.)
rewrite <- lemma4 in goal at 2(rank:14.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
=================================================
Progress: 678


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any1::any_list2) @ (Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 679


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((any1::any_list2) @ (Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
induction nat_list1(rank:15.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 680


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 681


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
induction nat_list1(rank:15.)
rewrite lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
rewrite lemma3 in goal at 0(rank:22.)
=================================================
Progress: 682


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))))) = ((reverse ((any_list2 @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:22.)
rewrite lemma3 in goal at 2(rank:22.)
=================================================
Progress: 683


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 684


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
induction nat_list1(rank:15.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
=================================================
Progress: 685


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:6.)
=================================================
Progress: 686


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 687


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:14.)
induction nat_list1(rank:15.)
rewrite <- lemma4 in goal at 1(rank:22.)
=================================================
Progress: 688


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:6.)
=================================================
Progress: 689


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:6.)
=================================================
Progress: 690


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 691


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat_list1(rank:15.)
rewrite <- lemma4 in goal at 2(rank:22.)
=================================================
Progress: 692


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse (((any1::reverse ((reverse (any_list2) @ (Nil)))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 693


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse (((any1::reverse ((reverse (any_list2) @ (Nil)))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 694


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse (((any1::any_list2) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 695


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse (((any1::any_list2) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 696


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) = (reverse ((any_list2 @ (Nil))) @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:23.)
rewrite lemma3 in goal at 2(rank:23.)
=================================================
Progress: 697


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 698


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite lemma4 in goal at 0(rank:23.)
=================================================
Progress: 699


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 700


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 701


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::nat_list3))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 702


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::nat_list3))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 703


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 704


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (nat_list3) @ (Nil))))) = ((reverse (nat_list3) @ (Nil)) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) = (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 705


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 706


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite lemma3 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite lemma4 in goal at 0(rank:15.)
=================================================
Progress: 707


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 708


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 709


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 710


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 711


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 712


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil))))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite lemma4 in goal at 0(rank:23.)
=================================================
Progress: 713


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 714


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 715


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 716


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 717


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 718


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil))))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 719


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse (((any1::reverse ((reverse (any_list2) @ (Nil)))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 720


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse (((any1::reverse ((reverse (any_list2) @ (Nil)))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 721


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse (((any1::any_list2) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 722


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse (((any1::any_list2) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 723


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 724


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite lemma4 in goal at 0(rank:23.)
=================================================
Progress: 725


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse ((reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) @ (Nil)))) = ((reverse ((any_list2 @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:23.)
rewrite lemma3 in goal at 2(rank:23.)
=================================================
Progress: 726


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 727


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 728


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 729


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 730


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = ((reverse ((any_list2 @ (Nil))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 731


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = (reverse ((reverse ((any1::(Nil))) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list1) @ nat_list2)) @ (Nil))))) = ((reverse (nat_list2) @ reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))))) = (reverse ((any_list2 @ (Nil))) @ nat_list1)
Inductive1 : any_list1 = (any1::any_list2)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil))) @ (any1::(Nil)))) = ((reverse (reverse ((reverse ((reverse (any_list2) @ (Nil))) @ (Nil)))) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
=================================================
Progress: 732


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
=================================================
Progress: 733


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse ((reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
=================================================
Progress: 734


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 1(rank:11.)
rewrite lemma3 in goal at 0(rank:19.)
rewrite lemma3 in goal at 2(rank:19.)
=================================================
Progress: 735


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 736


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 2(rank:11.)
induction nat_list1(rank:12.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 1(rank:19.)
rewrite <- IH1 in goal at 2(rank:19.)
=================================================
Progress: 737


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 2(rank:19.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 1(rank:19.)
rewrite <- IH1 in goal at 2(rank:19.)
=================================================
Progress: 738


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 739


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse (reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite lemma3 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite lemma4 in goal at 0(rank:20.)
=================================================
Progress: 740


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:3.)
=================================================
Progress: 741


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 1(rank:19.)
rewrite <- IH1 in goal at 2(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
=================================================
Progress: 742


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse (reverse ((reverse ((Nil)) @ nat_list3)))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
=================================================
Progress: 743


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse (reverse ((reverse ((Nil)) @ nat_list3)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
=================================================
Progress: 744


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
=================================================
Progress: 745


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (nat_list3) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 19.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:11.)
rewrite lemma3 in goal at 1(rank:11.)
=================================================
Progress: 746


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 747


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:11.)
induction nat_list1(rank:12.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
rewrite <- IH1 in goal at 1(rank:19.)
=================================================
Progress: 748


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (nat1::(Nil))) @ (Nil))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 749


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 2(rank:11.)
induction nat_list1(rank:12.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
rewrite <- IH1 in goal at 1(rank:19.)
=================================================
Progress: 750


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma3 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
=================================================
Progress: 751


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:3.)
=================================================
Progress: 752


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:11.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
=================================================
Progress: 753


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ reverse (((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 754


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 2(rank:11.)
induction nat_list1(rank:12.)
rewrite <- IH1 in goal at 1(rank:19.)
rewrite <- lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 1(rank:19.)
=================================================
Progress: 755


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 11.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 1(rank:19.)
=================================================
Progress: 756


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 757


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 0(rank:20.)
=================================================
Progress: 758


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 759


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 0(rank:20.)
=================================================
Progress: 760


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 761


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- lemma4 in goal at 0(rank:20.)
=================================================
Progress: 762


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 763


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 764


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:12.)
rewrite lemma3 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 765


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
=================================================
Progress: 766


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:12.)
rewrite lemma3 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 767


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
=================================================
Progress: 768


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:12.)
rewrite lemma3 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 769


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:4.)
=================================================
Progress: 770


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 771


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 772


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 1(rank:20.)
=================================================
Progress: 773


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4.)
=================================================
Progress: 774


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
=================================================
Progress: 775


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 776


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 1(rank:20.)
=================================================
Progress: 777


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4.)
=================================================
Progress: 778


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 0(rank:20.)
=================================================
Progress: 779


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 780


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse ((reverse ((Nil)) @ nat_list3)))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 1(rank:20.)
=================================================
Progress: 781


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 782


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 783


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
=================================================
Progress: 784


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4.)
=================================================
Progress: 785


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 786


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma4 in goal at 1(rank:20.)
=================================================
Progress: 787


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
=================================================
Progress: 788


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4.)
=================================================
Progress: 789


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 790


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma4 in goal at 1(rank:20.)
=================================================
Progress: 791


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 792


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 2(rank:12.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 1(rank:20.)
=================================================
Progress: 793


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4.)
=================================================
Progress: 794


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 795


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma4 in goal at 1(rank:20.)
=================================================
Progress: 796


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 2(rank:4.)
=================================================
Progress: 797


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 798


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 799


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- lemma4 in goal at 2
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- lemma4 in goal at 2
Prop: (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (Nil)) @ (Nil)))) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (Nil)) @ (Nil)))) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse (reverse ((ZERO::(Nil))))) @ (Nil)))) @ (4::(6::(Nil)))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (4::(6::(Nil)))) @ (Nil)))) @ (ZERO::(Nil)))) @ (Nil))
validate generalize_common_subterm_goal
Prop: (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (Nil)) @ (Nil)))) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (0::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (0::(Nil))) @ (Nil)))) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (6::(1::(3::(Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (6::(1::(3::(Nil))))) @ (Nil)))) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse (reverse ((ZERO::(Nil))))) @ (Nil)))) @ (ZERO::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (ZERO::(Nil))) @ (Nil)))) @ (ZERO::(Nil)))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse (reverse ((ZERO::(Nil))))) @ (Nil)))) @ (ZERO::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (ZERO::(Nil))) @ (Nil)))) @ (ZERO::(Nil)))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (ZERO::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (ZERO::(Nil))) @ (Nil)))) @ (Nil))) @ (Nil))
previous tactics
simpl in goal
rewrite <- lemma4 in goal at 2
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
Prop: (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (0::(Nil))) = (reverse ((reverse ((0::(Nil))) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)) = (reverse ((reverse ((Nil)) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse (reverse ((ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))))) @ (Nil)))) @ (Nil)) = (reverse ((reverse ((Nil)) @ (ZERO::(ZERO::(ZERO::(ZERO::(Nil))))))) @ (Nil))
previous tactics
simpl in goal
rewrite <- lemma4 in goal at 2
rewrite <- IH1 in goal at 0
simpl in goal
Prop: (reverse (reverse ((reverse (reverse ((7::(Nil)))) @ (Nil)))) @ (Nil)) = (((7::(Nil)) @ (Nil)) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse ((Nil))) @ (Nil)))) @ (Nil)) = (((Nil) @ (Nil)) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse ((Nil))) @ (Nil)))) @ (3::(Nil))) = (((Nil) @ (3::(Nil))) @ (Nil))
Lemma List
forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 800


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))(rank : 0.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6.)
=================================================
Progress: 801


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))(rank : 0.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:14.)
induction nat_list1(rank:14.)
=================================================
Progress: 802


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), (reverse (reverse ((reverse (reverse ((Nil))) @ (Nil)))) @ any_list1) = (((Nil) @ any_list1) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 803


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), (reverse (reverse ((reverse (reverse ((Nil))) @ (Nil)))) @ any_list1) = (((Nil) @ any_list1) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:7.)
=================================================
Progress: 804


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 805


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 806


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
=================================================
Progress: 807


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:4.)
=================================================
Progress: 808


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4.)
=================================================
Progress: 809


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 810


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma4 in goal at 2(rank:12.)
=================================================
Progress: 811


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- lemma4 in goal at 2
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- lemma4 in goal at 2
Prop: (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (Nil)) @ (Nil)))) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (Nil)) @ (Nil)))) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (1::(Nil))) @ (Nil)))) @ (Nil))) @ (Nil))
previous tactics
simpl in goal
rewrite <- lemma4 in goal at 2
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
Prop: (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)) = (reverse ((reverse ((Nil)) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)) = (reverse ((reverse ((Nil)) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (8::(Nil))) = (reverse ((reverse ((8::(Nil))) @ (Nil))) @ (Nil))
previous tactics
simpl in goal
rewrite <- lemma4 in goal at 2
rewrite <- IH1 in goal at 0
simpl in goal
Prop: (reverse (reverse ((reverse (reverse ((4::(Nil)))) @ (Nil)))) @ (Nil)) = (((4::(Nil)) @ (Nil)) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse ((Nil))) @ (Nil)))) @ (8::(Nil))) = (((Nil) @ (8::(Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse ((1::(Nil)))) @ (Nil)))) @ (Nil)) = (((1::(Nil)) @ (Nil)) @ (Nil))
Lemma List
forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ any_list1) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)) @ (Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 812


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ any_list1) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)) @ (Nil))(rank : 0.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ any_list1) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ any_list1) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 813


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ any_list1) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ any_list1) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ any_list1) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ any_list1) = (reverse ((reverse (reverse ((any_list1 @ (Nil)))) @ nat_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:14.)
induction nat_list1(rank:14.)
=================================================
Progress: 814


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:4.)
=================================================
Progress: 815


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4.)
=================================================
Progress: 816


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 817


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma4 in goal at 2(rank:12.)
=================================================
Progress: 818


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (nat_list3) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil))))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
=================================================
Progress: 819


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- lemma4 in goal at 2
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- lemma4 in goal at 2
Prop: (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (Nil)) @ (Nil)))) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (Nil)) @ (Nil)))) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)))) @ (8::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (8::(Nil))) @ (Nil)))) @ (Nil))) @ (Nil))
previous tactics
simpl in goal
rewrite <- lemma4 in goal at 2
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
Prop: (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)) = (reverse ((reverse ((Nil)) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)))) @ (2::(4::(Nil)))) = (reverse ((reverse ((2::(4::(Nil)))) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse ((ZERO::(ZERO::(Nil)))))) @ (Nil)))) @ (Nil)))) @ (Nil)) = (reverse ((reverse ((Nil)) @ (ZERO::(ZERO::(Nil))))) @ (Nil))
previous tactics
simpl in goal
rewrite <- lemma4 in goal at 2
rewrite <- IH1 in goal at 0
simpl in goal
Prop: (reverse (reverse ((reverse (reverse ((reverse (reverse ((4::(Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)) = (((4::(Nil)) @ (Nil)) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse ((reverse (reverse ((Nil))) @ (Nil)))) @ (Nil)))) @ (Nil)) = (((Nil) @ (Nil)) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse ((reverse (reverse ((Nil))) @ (Nil)))) @ (Nil)))) @ (Nil)) = (((Nil) @ (Nil)) @ (Nil))
Lemma List
forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ (Nil)))) @ any_list1) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)) @ (Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 820


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))(rank : 0.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6.)
=================================================
Progress: 821


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))(rank : 0.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ (Nil)))) @ any_list1) = (reverse ((reverse (any_list1) @ nat_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:14.)
induction nat_list1(rank:14.)
=================================================
Progress: 822


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ (Nil)))) @ any_list1) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)) @ (Nil))(rank : 0.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ (Nil)))) @ any_list1) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ (Nil)))) @ any_list1) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 823


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ (Nil)))) @ any_list1) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ (Nil)))) @ any_list1) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ (Nil)))) @ any_list1) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list1) @ (Nil)))) @ nat_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), (reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list1))) @ (Nil)))) @ (Nil)))) @ any_list1) = (reverse ((reverse (reverse ((any_list1 @ (Nil)))) @ nat_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:14.)
induction nat_list1(rank:14.)
=================================================
Progress: 824


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse ((Nil))) @ (Nil)))) @ (Nil)))) @ any_list1) = (((Nil) @ any_list1) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 825


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse ((Nil))) @ (Nil)))) @ (Nil)))) @ any_list1) = (((Nil) @ any_list1) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:7.)
=================================================
Progress: 826


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 827


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 828


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse ((reverse (reverse (any_list2)) @ (Nil)))) @ (Nil)))) @ any_list1) = ((any_list2 @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 1(rank:22.)
rewrite <- lemma4 in goal at 2(rank:22.)
=================================================
Progress: 829


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:4.)
=================================================
Progress: 830


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4.)
=================================================
Progress: 831


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 832


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma4 in goal at 2(rank:12.)
=================================================
Progress: 833


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 2(rank:4.)
=================================================
Progress: 834


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4.)
=================================================
Progress: 835


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 2(rank:20.)
=================================================
Progress: 836


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4.)
=================================================
Progress: 837


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 838


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 839


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- lemma4 in goal at 2
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- lemma4 in goal at 2
rewrite lemma3 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- lemma4 in goal at 1
rewrite lemma3 in goal at 0
simpl in goal
rewrite <- lemma4 in goal at 2
rewrite lemma3 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
Prop: (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)) = (reverse ((reverse ((Nil)) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)) = (reverse ((reverse ((Nil)) @ (Nil))) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse (reverse ((ZERO::(ZERO::(Nil)))))) @ (Nil)))) @ (ZERO::(Nil))) = (reverse ((reverse ((ZERO::(Nil))) @ (ZERO::(ZERO::(Nil))))) @ (Nil))
previous tactics
simpl in goal
rewrite <- lemma4 in goal at 2
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- lemma4 in goal at 2
rewrite lemma3 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- lemma4 in goal at 1
rewrite lemma3 in goal at 0
simpl in goal
rewrite <- lemma4 in goal at 2
rewrite lemma3 in goal at 0
simpl in goal
Prop: (reverse (reverse ((reverse (reverse ((Nil))) @ (Nil)))) @ (Nil)) = (((Nil) @ (Nil)) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse ((Nil))) @ (Nil)))) @ (Nil)) = (((Nil) @ (Nil)) @ (Nil))
Prop: (reverse (reverse ((reverse (reverse ((Nil))) @ (Nil)))) @ (SUCC (SUCC (ZERO))::(Nil))) = (((Nil) @ (SUCC (SUCC (ZERO))::(Nil))) @ (Nil))
Lemma List
forall (nat_list1:nat list) (any_list1:any list), (reverse (reverse ((reverse (reverse (any_list1)) @ (Nil)))) @ nat_list1) = ((any_list1 @ nat_list1) @ (Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat_list1:nat list) (nat_list2:nat list), (reverse (reverse ((reverse (reverse (reverse (nat_list2))) @ (Nil)))) @ nat_list1) = (reverse ((reverse (nat_list1) @ nat_list2)) @ (Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 840


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list) (any_list1:any list), (reverse (reverse ((reverse (reverse (any_list1)) @ (Nil)))) @ nat_list1) = ((any_list1 @ nat_list1) @ (Nil))(rank : 0.)


1st goal of : forall (nat_list1:nat list) (any_list1:any list), (reverse (reverse ((reverse (reverse (any_list1)) @ (Nil)))) @ nat_list1) = ((any_list1 @ nat_list1) @ (Nil))

---------------------------------------
forall (nat_list1:nat list) (any_list1:any list), (reverse (reverse ((reverse (reverse (any_list1)) @ (Nil)))) @ nat_list1) = ((any_list1 @ nat_list1) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6.)
=================================================
Progress: 841


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (nat_list3))) @ (Nil)))) @ (nat1::(Nil))) = (reverse ((reverse ((nat1::(Nil))) @ nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list) (nat_list2:nat list), (reverse (reverse ((reverse (reverse (reverse (nat_list2))) @ (Nil)))) @ nat_list1) = (reverse ((reverse (nat_list1) @ nat_list2)) @ (Nil))(rank : 0.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), (reverse (reverse ((reverse (reverse (reverse (nat_list2))) @ (Nil)))) @ nat_list1) = (reverse ((reverse (nat_list1) @ nat_list2)) @ (Nil))

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), (reverse (reverse ((reverse (reverse (reverse (nat_list2))) @ (Nil)))) @ nat_list1) = (reverse ((reverse (nat_list1) @ nat_list2)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat_list1(rank:14.)
induction nat_list2(rank:14.)
=================================================
Progress: 842


1st goal of : forall (nat_list1:nat list) (any_list1:any list), (reverse (reverse ((reverse (reverse (any_list1)) @ (Nil)))) @ nat_list1) = ((any_list1 @ nat_list1) @ (Nil))

---------------------------------------
forall (nat_list1:nat list) (any_list1:any list), (reverse (reverse ((reverse (reverse (any_list1)) @ (Nil)))) @ nat_list1) = ((any_list1 @ nat_list1) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (any_list1:any list), (reverse (reverse ((reverse (reverse (any_list1)) @ (Nil)))) @ nat_list1) = ((any_list1 @ nat_list1) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list), (reverse (reverse ((reverse (reverse ((Nil))) @ (Nil)))) @ nat_list1) = (((Nil) @ nat_list1) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 843


1st goal of : forall (nat_list1:nat list) (any_list1:any list), (reverse (reverse ((reverse (reverse (any_list1)) @ (Nil)))) @ nat_list1) = ((any_list1 @ nat_list1) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list), (reverse (reverse ((reverse (reverse ((Nil))) @ (Nil)))) @ nat_list1) = (((Nil) @ nat_list1) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (any_list1:any list), (reverse (reverse ((reverse (reverse (any_list1)) @ (Nil)))) @ nat_list1) = ((any_list1 @ nat_list1) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat_list1 @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:7.)
=================================================
Progress: 844


1st goal of : forall (nat_list1:nat list) (any_list1:any list), (reverse (reverse ((reverse (reverse (any_list1)) @ (Nil)))) @ nat_list1) = ((any_list1 @ nat_list1) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat_list1 @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (any_list1:any list), (reverse (reverse ((reverse (reverse (any_list1)) @ (Nil)))) @ nat_list1) = ((any_list1 @ nat_list1) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 845


1st goal of : forall (nat_list1:nat list) (any_list1:any list), (reverse (reverse ((reverse (reverse (any_list1)) @ (Nil)))) @ nat_list1) = ((any_list1 @ nat_list1) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list) (any_list1:any list), (reverse (reverse ((reverse (reverse (any_list1)) @ (Nil)))) @ nat_list1) = ((any_list1 @ nat_list1) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : nat_list2 = (nat_list2 @ (Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(nat1::nat_list2) = ((nat1::nat_list2) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Dilemma timed out for benchmark clam with problem 18.File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
