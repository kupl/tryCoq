Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:nat list), reverse (x) = qreva (x) ((Nil))(rank : 0)


1st goal of : forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))

---------------------------------------
forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:4)
=================================================
Progress: 2


1st goal of : forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))

---------------------------------------
forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 4)


1st goal of : forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((Nil)) = qreva ((Nil)) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 3


1st goal of : forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((Nil)) = qreva ((Nil)) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse (nat_list2) = qreva (nat_list2) ((Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
reverse ((nat1::nat_list2)) = qreva ((nat1::nat_list2)) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 4


1st goal of : forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse (nat_list2) = qreva (nat_list2) ((Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
reverse ((nat1::nat_list2)) = qreva ((nat1::nat_list2)) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse (nat_list2) = qreva (nat_list2) ((Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(reverse (nat_list2) @ (nat1::(Nil))) = qreva (nat_list2) ((nat1::(Nil)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:3)
=================================================
Progress: 5


1st goal of : forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse (nat_list2) = qreva (nat_list2) ((Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(reverse (nat_list2) @ (nat1::(Nil))) = qreva (nat_list2) ((nat1::(Nil)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 3)


1st goal of : forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse (nat_list2) = qreva (nat_list2) ((Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(qreva (nat_list2) ((Nil)) @ (nat1::(Nil))) = qreva (nat_list2) ((nat1::(Nil)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
New Env

;;
Lemma List
forall (arg1:any list) (nat_list2:nat list), (qreva (nat_list2) ((Nil)) @ arg1) = qreva (nat_list2) (arg1)
End of Lemma List


1st goal of : forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse (nat_list2) = qreva (nat_list2) ((Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(qreva (nat_list2) ((Nil)) @ (nat1::(Nil))) = qreva (nat_list2) ((nat1::(Nil)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 6


1st goal of : forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse (nat_list2) = qreva (nat_list2) ((Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(qreva (nat_list2) ((Nil)) @ (nat1::(Nil))) = qreva (nat_list2) ((nat1::(Nil)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (arg1:any list) (nat_list2:nat list), (qreva (nat_list2) ((Nil)) @ arg1) = qreva (nat_list2) (arg1)(rank : 0)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6)
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)

---------------------------------------
forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), (qreva ((Nil)) ((Nil)) @ any_list1) = qreva ((Nil)) (any_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any_list1:any list), (qreva ((Nil)) ((Nil)) @ any_list1) = qreva ((Nil)) (any_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (qreva ((nat1::nat_list2)) ((Nil)) @ any_list1) = qreva ((nat1::nat_list2)) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (qreva ((nat1::nat_list2)) ((Nil)) @ any_list1) = qreva ((nat1::nat_list2)) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (qreva (nat_list2) ((nat1::(Nil))) @ any_list1) = qreva (nat_list2) ((nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:5)
rewrite <- IH1 in goal at 0(rank:21)
rewrite <- IH1 in goal at 1(rank:21)
rewrite <- IH1 in goal at 2(rank:21)
=================================================
Progress: 10


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (qreva (nat_list2) ((nat1::(Nil))) @ any_list1) = qreva (nat_list2) ((nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
---------------------------------------
(qreva (nat_list2) ((nat1::(Nil))) @ any_list1) = qreva (nat_list2) ((nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21)
rewrite <- IH1 in goal at 1(rank:21)
rewrite <- IH1 in goal at 2(rank:21)
=================================================
Progress: 11


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (qreva (nat_list2) ((nat1::(Nil))) @ any_list1) = qreva (nat_list2) ((nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), ((qreva (nat_list2) ((Nil)) @ (nat1::(Nil))) @ any_list1) = (qreva (nat_list2) ((Nil)) @ (nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21)
rewrite <- IH1 in goal at 1(rank:21)
rewrite <- IH1 in goal at 2(rank:21)
=================================================
Progress: 12


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (qreva (nat_list2) ((nat1::(Nil))) @ any_list1) = qreva (nat_list2) ((nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 21)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), ((qreva (nat_list2) ((Nil)) @ (nat1::(Nil))) @ any_list1) = qreva (nat_list2) ((nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 1(rank:5)
=================================================
Progress: 13


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), ((qreva (nat_list2) ((Nil)) @ (nat1::(Nil))) @ any_list1) = qreva (nat_list2) ((nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 5)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (((qreva (nat_list2) ((Nil)) @ (Nil)) @ (nat1::(Nil))) @ any_list1) = qreva (nat_list2) ((nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:5)
rewrite <- IH1 in goal at 0(rank:21)
=================================================
Progress: 14


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any_list1:any list), (((qreva (nat_list2) ((Nil)) @ (Nil)) @ (nat1::(Nil))) @ any_list1) = qreva (nat_list2) ((nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
---------------------------------------
(((qreva (nat_list2) ((Nil)) @ (Nil)) @ (nat1::(Nil))) @ any_list1) = qreva (nat_list2) ((nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 2(rank:13)
rewrite <- IH1 in goal at 0(rank:21)
=================================================
Progress: 15


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
---------------------------------------
(((qreva (nat_list2) ((Nil)) @ (Nil)) @ (nat1::(Nil))) @ any_list1) = qreva (nat_list2) ((nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 13)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
---------------------------------------
(((qreva (nat_list2) ((Nil)) @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (qreva (nat_list2) ((Nil)) @ (nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH1 in goal at 1
intro any_list1
rewrite <- IH1 in goal at 2
New Env

;;
Lemma List
forall (any_list1:any list) (arg2:any list) (nat1:nat), (((arg2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (arg2 @ (nat1::any_list1))
End of Lemma List


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
---------------------------------------
(((qreva (nat_list2) ((Nil)) @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (qreva (nat_list2) ((Nil)) @ (nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 16


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
---------------------------------------
(((qreva (nat_list2) ((Nil)) @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (qreva (nat_list2) ((Nil)) @ (nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any_list1:any list) (arg2:any list) (nat1:nat), (((arg2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (arg2 @ (nat1::any_list1))(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8)
=================================================
Progress: 17


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 8)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), ((((Nil) @ (Nil)) @ (nat1::(Nil))) @ any_list1) = ((Nil) @ (nat1::any_list1))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 18


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list) (nat1:nat), ((((Nil) @ (Nil)) @ (nat1::(Nil))) @ any_list1) = ((Nil) @ (nat1::any_list1))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list) (nat1:nat), (((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list3 @ (nat1::any_list1))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list) (nat1:nat), ((((any1::any_list3) @ (Nil)) @ (nat1::(Nil))) @ any_list1) = ((any1::any_list3) @ (nat1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 19


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list) (nat1:nat), (((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list3 @ (nat1::any_list1))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list) (nat1:nat), ((((any1::any_list3) @ (Nil)) @ (nat1::(Nil))) @ any_list1) = ((any1::any_list3) @ (nat1::any_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list) (nat1:nat), (((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list3 @ (nat1::any_list1))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list) (nat1:nat), (any1::(((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1)) = (any1::(any_list3 @ (nat1::any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:7)
intro nat1(rank:7)
rewrite IH1 in goal at 0(rank:15)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 20


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list) (nat1:nat), (((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list3 @ (nat1::any_list1))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list) (nat1:nat), (any1::(((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1)) = (any1::(any_list3 @ (nat1::any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list) (nat1:nat), (((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list3 @ (nat1::any_list1))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
forall (nat1:nat), (any1::(((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1)) = (any1::(any_list3 @ (nat1::any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:7)
rewrite IH1 in goal at 0(rank:15)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 21


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list) (nat1:nat), (((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list3 @ (nat1::any_list1))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list) (nat1:nat), (any1::(((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1)) = (any1::(any_list3 @ (nat1::any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list) (nat1:nat), (((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list3 @ (nat1::any_list1))
Inductive1 : any_list2 = (any1::any_list3)
nat1 : nat
---------------------------------------
forall (any_list1:any list), (any1::(((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1)) = (any1::(any_list3 @ (nat1::any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 22


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list) (nat1:nat), (((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list3 @ (nat1::any_list1))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
forall (nat1:nat), (any1::(((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1)) = (any1::(any_list3 @ (nat1::any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list) (nat1:nat), (((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list3 @ (nat1::any_list1))
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
nat1 : nat
---------------------------------------
(any1::(((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1)) = (any1::(any_list3 @ (nat1::any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 23


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list) (nat1:nat), (((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list3 @ (nat1::any_list1))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list) (nat1:nat), (any1::(((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1)) = (any1::(any_list3 @ (nat1::any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15)


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list) (nat1:nat), (((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list3 @ (nat1::any_list1))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list) (nat1:nat), (any1::(any_list3 @ (nat1::any_list1))) = (any1::(any_list3 @ (nat1::any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 24


1st goal of : forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list) (nat1:nat), (((any_list3 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list3 @ (nat1::any_list1))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list) (nat1:nat), (any1::(any_list3 @ (nat1::any_list1))) = (any1::(any_list3 @ (nat1::any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
---------------------------------------
(((qreva (nat_list2) ((Nil)) @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (qreva (nat_list2) ((Nil)) @ (nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 7
Tactic List : 4
rewrite lemma3 in goal at 0(rank:13)
rewrite <- lemma3 in goal at 0(rank:13)
rewrite <- lemma3 in goal at 2(rank:13)
rewrite <- lemma3 in goal at 1(rank:21)
=================================================
Progress: 25


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
---------------------------------------
(((qreva (nat_list2) ((Nil)) @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (qreva (nat_list2) ((Nil)) @ (nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 13)


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
---------------------------------------
(qreva (nat_list2) ((Nil)) @ (nat1::any_list1)) = (qreva (nat_list2) ((Nil)) @ (nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 26


1st goal of : forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any_list1:any list), (qreva (nat_list2) ((Nil)) @ any_list1) = qreva (nat_list2) (any_list1)
Inductive1 : nat_list1 = (nat1::nat_list2)
any_list1 : any list
---------------------------------------
(qreva (nat_list2) ((Nil)) @ (nat1::any_list1)) = (qreva (nat_list2) ((Nil)) @ (nat1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse (nat_list2) = qreva (nat_list2) ((Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(qreva (nat_list2) ((Nil)) @ (nat1::(Nil))) = qreva (nat_list2) ((nat1::(Nil)))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 12
Tactic List : 5
rewrite lemma4 in goal at 0(rank:11)
rewrite <- lemma3 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 2(rank:11)
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
=================================================
Progress: 27


1st goal of : forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse (nat_list2) = qreva (nat_list2) ((Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
(qreva (nat_list2) ((Nil)) @ (nat1::(Nil))) = qreva (nat_list2) ((nat1::(Nil)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 11)


1st goal of : forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse (nat_list2) = qreva (nat_list2) ((Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
qreva (nat_list2) ((nat1::(Nil))) = qreva (nat_list2) ((nat1::(Nil)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0)
=================================================
Progress: 28


1st goal of : forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : reverse (nat_list2) = qreva (nat_list2) ((Nil))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
qreva (nat_list2) ((nat1::(Nil))) = qreva (nat_list2) ((nat1::(Nil)))

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0)


No conjecture
Proof Success
Proof
assert forall (nat_list1:nat list), reverse (nat_list1) = qreva (nat_list1) ((Nil))
induction nat_list1
reflexivity
simpl in goal
rewrite IH1 in goal at 0
assert forall (any_list1:any list) (nat_list1:nat list), (qreva (nat_list1) ((Nil)) @ any_list1) = qreva (nat_list1) (any_list1)
induction nat_list1
reflexivity
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH1 in goal at 1
intro any_list1
rewrite <- IH1 in goal at 2
assert forall (any_list1:any list) (any_list2:any list) (nat1:nat), (((any_list2 @ (Nil)) @ (nat1::(Nil))) @ any_list1) = (any_list2 @ (nat1::any_list1))
induction any_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
rewrite lemma4 in goal at 0
reflexivity
Qed
File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
